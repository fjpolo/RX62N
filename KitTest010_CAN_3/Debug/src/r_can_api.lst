* RX FAMILY ASSEMBLER V2.08.00.01 [06 Oct 2017] *  SOURCE LIST  Fri Jul 06 11:33:47 2018

LOC.     OBJ.              0XMDA SOURCE STATEMENT

                                 ;RX Family C/C++ Compiler (V2.08.00 [30 Nov 2017])  06-Jul-2018 11:33:47
                                 
                                 ;*** CPU TYPE ***
                                 
                                 ;-CPU=RX600
                                 
                                 ;*** COMMAND PARAMETER ***
                                 
                                 ;-output=src=r_can_api.src
                                 ;-cpu=rx600
                                 ;-fpu
                                 ;-include=C:\PROGRA~2\RENESA~1\CS_~1\CC\CC-RX\V208~1.00\include,C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src
                                 ;-define=NOT_USE_CAN_POLL=1
                                 ;-lang=c99
                                 ;-nomessage
                                 ;-change_message=information
                                 ;-obj_path=src
                                 ;-debug
                                 ;-listfile=src/r_can_api.lst
                                 ;-show=source
                                 ;-optimize=0
                                 ;-nologo
                                 ;r_can_api.c
                                 
                                 		.glb	_R_CAN_Create
                                 		.glb	_R_CAN_PortSet
                                 		.glb	_R_CAN_Control
                                 		.glb	_R_CAN_TxSet
                                 		.glb	_R_CAN_TxSetXid
                                 		.glb	_R_CAN_Tx
                                 		.glb	_R_CAN_TxCheck
                                 		.glb	_R_CAN_TxStopMsg
                                 		.glb	_R_CAN_RxSet
                                 		.glb	_R_CAN_RxSetXid
                                 		.glb	_R_CAN_RxPoll
                                 		.glb	_R_CAN_RxRead
                                 		.glb	_R_CAN_RxSetMask
                                 		.glb	_R_CAN_CheckErr
                                 		.glb	_R_CAN_SetBitrate
                                 ;LineNo. C-SOURCE STATEMENT
                                 
                                 		.SECTION	P,CODE
00000000                         _R_CAN_Create:
                                 		.STACK	_R_CAN_Create=40
                                 ;       1 /******************************************************************************
                                 ;       2 * DISCLAIMER
                                 ;       3 
                                 ;       4 * This software is supplied by Renesas Electronics Corp. and is only 
                                 ;       5 * intended for use with Renesas products. No other uses are authorized.
                                 ;       6 
                                 ;       7 * This software is owned by Renesas Electronics Corp. and is protected under 
                                 ;       8 * all applicable laws, including copyright laws.
                                 ;       9 
                                 ;      10 * THIS SOFTWARE IS PROVIDED "AS IS" AND RENESAS MAKES NO WARRANTIES 
                                 ;      11 * REGARDING THIS SOFTWARE, WHETHER EXPRESS, IMPLIED OR STATUTORY, 
                                 ;      12 * INCLUDING BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
                                 ;      13 * PARTICULAR PURPOSE AND NON-INFRINGEMENT.  ALL SUCH WARRANTIES ARE EXPRESSLY 
                                 ;      14 * DISCLAIMED.
                                 ;      15 
                                 ;      16 * TO THE MAXIMUM EXTENT PERMITTED NOT PROHIBITED BY LAW, NEITHER RENESAS 
                                 ;      17 * ELECTRONICS CORP. NOR ANY OF ITS AFFILIATED COMPANIES SHALL BE LIABLE 
                                 ;      18 * FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES 
                                 ;      19 * FOR ANY REASON RELATED TO THIS SOFTWARE, EVEN IF RENESAS OR ITS 
                                 ;      20 * AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
                                 ;      21 
                                 ;      22 * Renesas reserves the right, without notice, to make changes to this 
                                 ;      23 * software and to discontinue the availability of this software.  
                                 ;      24 * By using this software, you agree to the additional terms and 
                                 ;      25 * conditions found by accessing the following link:
                                 ;      26 * http://www.renesas.com/disclaimer
                                 ;      27 ******************************************************************************
                                 ;      28 * Copyright (C) 2017. Renesas Electronics Corp., All Rights Reserved.
                                 ;      29 ******************************************************************************
                                 ;      30 * File Name        R_CAN_API.C
                                 ;      31 * Version          2.05
                                 ;      32 * Platform         ROK5562N
                                 ;      33 * Description      CAN API function definitions
                                 ;      34 * Operation        See example usage API_DEMO.C
                                 ;      35 * Limitations      :
                                 ;      36 ******************************************************************************
                                 ;      37 * History       Ver.    Description
                                 ;      38 * Mar 22 '10    1.00    For RX62N with new CAN API.
                                 ;      39 * Apr 15 '10            Remote frame handling added.
                                 ;      40 * Apr 22 '10            Port configuration moved to config.h. User just 
                                 ;      41                             sets port and pin number for the transceiver control 
                                 ;      42                             ports. No need to change driver.
                                 ;      43                         R_CAN_Control: Enter Sleep added.
                                 ;      44                         R_CAN_PortSet: Modes automatically now enter and exit
                                 ;      45                              Halt mode, so user need just one call to change
                                 ;      46                              mode.
                                 ;      47                         R_CAN_TxStopMsg(): TRMREQ to 0, then TRMABT clear.
                                 ;      48                         R_CAN_RxSetMask(): Halt CAN before mask change, resume 
                                 ;      49                             after.
                                 ;      50                         R_CAN_RxPoll(): Function rewritten to use INVALDATA flag.
                                 ;      51                             R_CAN_NOT_OK added; "No message waiting or currently 
                                 ;      52                             being written".
                                 ;      53                         All RETURN values spelled out in all function headers.
                                 ;      54                         Return values added and changed for some APIs.
                                 ;      55 * Jun 7 2010             Changed TRM_ACTIVE -> SENTDATA in R_CAN_WaitTxRx() since 
                                 ;      56                             TRM_ACTIVE is low for a while after TRMREQ is set high.                
                                 ;      57                         Increased MAX_CAN_SW_DELAY from 0x1000 to 0x2000. If the
                                 ;      58                             TxCheck function is not used, the timer could time out
                                 ;      59                              and the mailbox will not send properly if the user 
                                 ;      60                             ignores the api_status warning that WaitTxRx timed out.
                                 ;      61 * Jan 10 2011   2.00    Updated to support CAN extended ID mode. Added functions: 
                                 ;      62                         R_CAN_TxSetXid, R_CAN_RxSetXid, R_CAN_TxSetFifoXid. 
                                 ;      63                         Added limited support for FIFO transmit mode.
                                 ;      64                         In R_CAN_WaitTxRx changed to while (...SENTDATA == 0)...
                                 ;      65 * Mar 22 2012           Removed RESET_CAN_SW_TMR. Counter reset at function start.     
                                 ;      66 * Oct 12 2012           Changed R_CAN_Control() sleep mode, to ensure that Halt mode
                                 ;      67                             is entered before exiting sleep. 
                                 ;      68                         Got rid of can_frame_t. can_frame_t to cover both Standard 
                                 ;      69                             and Ext frames.                    
                                 ;      70 * Jun 7 2016    2.04    All API calls' first argument now have 'ch_nr' instead of '0'.
                                 ;      71                         When writing 0 to bits NEWDATA, SENTDATA, MSGLOST, TRMABT, 
                                 ;      72                             RECREQ, and TRMREQ by a program, do not use the logic 
                                 ;      73                             operation instruction (AND). Write 0 to only the specified 
                                 ;      74                             bit and write 1 to the other bits before using the transfer 
                                 ;      75                             (MOV) instruction. See HW manual footnote.
                                 ;      76                         R_CAN_Control() case OPERATE_CANMODE; check also that Halt 
                                 ;      77                             Status bit is 0.
                                 ;      78 * Dec 8 2017    2.05    Fixed bug in extended ID mode and Mixed ID mode handling.
                                 ;      79                         Some code cleanup.
                                 ;      80                         Removed unused FIFO mode experimental code
                                 ;      81                         Moved port configuration to config_r_can_rapi.h
                                 ;      82 ******************************************************************************/
                                 ;      83 
                                 ;      84 /******************************************************************************
                                 ;      85 Includes   <System Includes> , "Project Includes"
                                 ;      86 ******************************************************************************/
                                 ;      87 #include <string.h>
                                 ;      88 #include <machine.h>
                                 ;      89 #include "config_r_can_rapi.h"
                                 ;      90 #if (USE_FIT_BSP == 1)
                                 ;      91 #include "platform.h"
                                 ;      92 #else
                                 ;      93 #include "iodefine.h"
                                 ;      94 #endif
                                 ;      95 
                                 ;      96 #include "r_can_api.h"
                                 ;      97 
                                 ;      98 /******************************************************************************
                                 ;      99 Typedef definitions
                                 ;     100 ******************************************************************************/
                                 ;     101 /******************************************************************************
                                 ;     102 Macro definitions
                                 ;     103 ******************************************************************************/
                                 ;     104 /* These macros are for determining if some can while loop times out. If they do,
                                 ;     105 the canx_sw_err variable will be non zero. This is to prevent an error in the 
                                 ;     106 can peripheral and driver from blocking the CPU indefinatly. */
                                 ;     107 #define DEC_CHK_CAN_SW_TMR      (--can_tmo_cnt != 0)
                                 ;     108 /* You may change MAX_CAN_SW_DELAY, but you risk the function timing out even 
                                 ;     109 more if set lower. As long as you check the return value and are aware that a 
                                 ;     110 timeout occurred, you can set the wait time as you wish, the shorter the time, 
                                 ;     111 the more likely you are to time out. There is no "correct" value, but do not 
                                 ;     112 set very low without a good reason. */
                                 ;     113 #define MAX_CAN_SW_DELAY        (0x2000)
                                 ;     114 #define CHECK_MBX_NR            {if (mbox_nr > 31) return R_CAN_SW_BAD_MBX;}
                                 ;     115 /* Board specific port defines. */
                                 ;     116 #define CAN_TRX_DDR(x, y)               CAN_TRX_DDR_PREPROC(x, y)
                                 ;     117 #define CAN_TRX_DDR_PREPROC(x, y)       (PORT ## x .DDR.BIT.B ## y)
                                 ;     118 #define CAN_TRX_DR(x, y)                CAN_TRX_DR_PREPROC(x, y)
                                 ;     119 #define CAN_TRX_DR_PREPROC(x, y)        (PORT ## x .DR.BIT.B ## y)
                                 ;     120 /* Define a mask for MSB of a long to serve as an extended ID mode bit flag. */
                                 ;     121 /* Extended ID occupies lower 29 bits, so use this to mask off upper 3 bits. */ 
                                 ;     122 #define XID_MASK    0xE0000000
                                 ;     123 /* Define a mask for the 11 bits that make up a standard ID. */ 
                                 ;     124 #define SID_MASK    0x000007FF  
                                 ;     125 
                                 ;     126 /******************************************************************************
                                 ;     127 Global variables and functions imported (externs)
                                 ;     128 ******************************************************************************/
                                 ;     129 /******************************************************************************
                                 ;     130 Constant definitions
                                 ;     131 *****************************************************************************/
                                 ;     132 /******************************************************************************
                                 ;     133 Global variables and functions private to the file
                                 ;     134 ******************************************************************************/
                                 ;     135 /* Data */
                                 ;     136 /* Functions */
                                 ;     137 static void     CanClearSentData(const uint32_t ch_nr, const uint32_t mbox_nr);
                                 ;     138 static uint32_t R_CAN_WaitTxRx(const uint32_t ch_nr, const uint32_t mbox_nr);
                                 ;     139 static void     R_CAN_ConfigCANinterrupts(const uint32_t ch_nr);
                                 ;     140 
                                 ;     141 /******************************************************************************
                                 ;     142 
                                 ;     143                         C A N 0   F U N C T I O N S
                                 ;     144 
                                 ;     145 ******************************************************************************/
                                 ;     146 /*******************************************************************************
                                 ;     147 Function Name:  R_CAN_Create
                                 ;     148 Description:    Configure the CAN peripheral.
                                 ;     149 Parameters:     ch_nr
                                 ;     150 Return value:   R_CAN_OK            Action completed successfully.
                                 ;     151                 R_CAN_SW_BAD_MBX    Bad mailbox number.
                                 ;     152                 R_CAN_BAD_CH_NR     The channel number does not exist.
                                 ;     153                 R_CAN_SW_RST_ERR    The CAN peripheral did not enter Reset mode.
                                 ;     154                 See also R_CAN_Control return values.
                                 ;     155 *******************************************************************************/
                                 ;     156 uint32_t R_CAN_Create(const uint32_t ch_nr)
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",156
00000000 7100DC                  		ADD #0FFFFFFDCH, R0
00000003 A201                    		MOV.L R1, 20H[R0]
                                 ;     157 {
                                 ;     158     uint32_t api_status = R_CAN_OK;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",158
00000005 3E0600                  		MOV.L #00000000H, 18H[R0]
00000008                         L11:	; entry.split
                                 ;     159     uint32_t i, j;
                                 ;     160     /* A faulty CAN peripheral block, due to HW, FW could potentially block (hang) 
                                 ;     161     the program at a while-loop. To prevent this, a sw timer in the while-loops
                                 ;     162     will time out enabling the CPU to continue. */
                                 ;     163     uint32_t can_tmo_cnt = MAX_CAN_SW_DELAY;   
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",163
00000008 F90A030020              		MOV.L #00002000H, 0CH[R0]
0000000D                         L12:	; entry.split1
                                 ;     164 
                                 ;     165     volatile struct st_can __evenaccess * can_block_p;
                                 ;     166     
                                 ;     167     if (ch_nr == 0)
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",167
0000000D AA01                    		MOV.L 20H[R0], R1
0000000F 6101                    		CMP #00H, R1
00000011 21rr                    		BNE L27
00000013                         L13:	; if_then_bb
                                 ;     168     {
                                 ;     169         can_block_p = (struct st_can __evenaccess *) 0x90200;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",169
00000013 F90E02000209            		MOV.L #00090200H, 08H[R0]
00000019                         L14:	; if_then_bb.split
                                 ;     170     }
                                 ;     171     else
                                 ;     172     {
                                 ;     173         return R_CAN_BAD_CH_NR;
                                 ;     174     }
                                 ;     175 
                                 ;     176     /* Exit Sleep mode. */
                                 ;     177     api_status |= R_CAN_Control(ch_nr, EXITSLEEP_CANMODE);
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",177
00000019 AA01                    		MOV.L 20H[R0], R1
0000001B 6622                    		MOV.L #00000002H, R2
0000001D 39rrrr               W  		BSR _R_CAN_Control
00000020 06950106                		OR 18H[R0].L, R1
00000024 A181                    		MOV.L R1, 18H[R0]
00000026                         L15:	; if_then_bb.split2
                                 ;     178     
                                 ;     179     /* Sleep -> RESET mode. ****************************************************/
                                 ;     180     api_status |= R_CAN_Control(ch_nr, RESET_CANMODE);
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",180
00000026 AA01                    		MOV.L 20H[R0], R1
00000028 6642                    		MOV.L #00000004H, R2
0000002A 39rrrr               W  		BSR _R_CAN_Control
0000002D 06950106                		OR 18H[R0].L, R1
00000031 A181                    		MOV.L R1, 18H[R0]
00000033                         L16:	; if_then_bb.split3
                                 ;     181     
                                 ;     182     /*** Setting of CAN0 Control register.***/
                                 ;     183     /* BOM:    Bus Off recovery mode acc. to IEC11898-1 */
                                 ;     184     can_block_p->CTLR.BIT.BOM = 0;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",184
00000033 A881                    		MOV.L 08H[R0], R1
00000035 754EE7                  		MOV.L #000000E7H, R14
00000038 521E4006                		AND 0640H[R1].UB, R14
0000003C CB1E4006                		MOV.B R14, 0640H[R1]
00000040                         L17:	; if_then_bb.split4
                                 ;     185 
                                 ;     186 	/* MBM: Select normal mailbox mode. */
                                 ;     187 	can_block_p->CTLR.BIT.MBM = 0;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",187
00000040 A881                    		MOV.L 08H[R0], R1
00000042 F2184106                		BCLR #00H, 0641H[R1].B
00000046                         L18:	; if_then_bb.split5
                                 ;     188     
                                 ;     189     /* IDFM: Select ID mode. */
                                 ;     190     can_block_p->CTLR.BIT.IDFM = FRAME_ID_MODE;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",190
00000046 A881                    		MOV.L 08H[R0], R1
00000048 754EF9                  		MOV.L #000000F9H, R14
0000004B 521E4106                		AND 0641H[R1].UB, R14
0000004F CB1E4106                		MOV.B R14, 0641H[R1]
00000053                         L19:	; if_then_bb.split6
                                 ;     191     
                                 ;     192     /*     :    0 = Overwrite mode: Latest message overwrites old.
                                 ;     193             1 = Overrun mode: Latest message discarded. */
                                 ;     194     can_block_p->CTLR.BIT.MLM = 0;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",194
00000053 A881                    		MOV.L 08H[R0], R1
00000055 F21B4106                		BCLR #03H, 0641H[R1].B
00000059                         L20:	; if_then_bb.split7
                                 ;     195     /* TPM: ID priority mode. */
                                 ;     196     can_block_p->CTLR.BIT.TPM = 0;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",196
00000059 A881                    		MOV.L 08H[R0], R1
0000005B F21C4106                		BCLR #04H, 0641H[R1].B
0000005F                         L21:	; if_then_bb.split8
                                 ;     197     /* TSRC: Only to be set to 1 in operation mode */
                                 ;     198     can_block_p->CTLR.BIT.TSRC = 0;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",198
0000005F A881                    		MOV.L 08H[R0], R1
00000061 F21D4106                		BCLR #05H, 0641H[R1].B
00000065                         L22:	; if_then_bb.split9
                                 ;     199     /* TSPS: Update every 8 bit times */
                                 ;     200     can_block_p->CTLR.BIT.TSPS = 3;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",200
00000065 A881                    		MOV.L 08H[R0], R1
00000067 754EC0                  		MOV.L #000000C0H, R14
0000006A 561E4106                		OR 0641H[R1].UB, R14
0000006E CB1E4106                		MOV.B R14, 0641H[R1]
00000072                         L23:	; if_then_bb.split10
                                 ;     201 
                                 ;     202     /* Set BAUDRATE */
                                 ;     203     R_CAN_SetBitrate(ch_nr);
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",203
00000072 AA01                    		MOV.L 20H[R0], R1
00000074 39rrrr               W  		BSR _R_CAN_SetBitrate
00000077                         L24:	; if_then_bb.split11
                                 ;     204 
                                 ;     205     /* Reset -> HALT mode ******************************************************/
                                 ;     206     api_status |= R_CAN_Control(ch_nr, HALT_CANMODE);
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",206
00000077 AA01                    		MOV.L 20H[R0], R1
00000079 6652                    		MOV.L #00000005H, R2
0000007B 39rrrr               W  		BSR _R_CAN_Control
0000007E 06950106                		OR 18H[R0].L, R1
00000082 A181                    		MOV.L R1, 18H[R0]
00000084                         L25:	; if_then_bb.split12
                                 ;     207 
                                 ;     208     /* Configure CAN interrupts. */ 
                                 ;     209     R_CAN_ConfigCANinterrupts(ch_nr);
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",209
00000084 AA01                    		MOV.L 20H[R0], R1
00000086 39rrrr               W  		BSR __$R_CAN_ConfigCANinterrupts
00000089                         L26:	; if_then_bb.split13
                                 ;     210 
                                 ;     211     /* Configure mailboxes in Halt mode. */
                                 ;     212     for (i = 0; i < 32; i++)
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",212
00000089 3E0500                  		MOV.L #00000000H, 14H[R0]
0000008C 2Err                 B  		BRA L37
0000008E                         L27:	; if_else_bb
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",173
0000008E 3E0120                  		MOV.L #00000020H, 04H[R0]
00000091 38rrrr               W  		BRA L57
00000094                         L28:	; bb75
                                 ;     213     {
                                 ;     214         can_block_p->MB[i].ID.LONG = 0x00;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",214
00000094 A90A                    		MOV.L 14H[R0], R2
00000096 6C42                    		SHLL #04H, R2
00000098 4B21                    		ADD R2, R1
0000009A F81600                  		MOV.L #00000000H, [R1]
0000009D                         L29:	; bb75.split
                                 ;     215         can_block_p->MB[i].DLC.WORD = 0x00;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",215
0000009D A909                    		MOV.L 14H[R0], R1
0000009F 6C41                    		SHLL #04H, R1
000000A1 06890102                		ADD 08H[R0].L, R1
000000A5 3D1200                  		MOV.W #0000H, 04H[R1]
000000A8                         L30:	; bb75.split14
                                 ;     216         for (j = 0; j < 8; j++)
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",216
000000A8 3E0400                  		MOV.L #00000000H, 10H[R0]
000000AB 2Err                 B  		BRA L32
000000AD                         L31:	; bb90
                                 ;     217         {
                                 ;     218             can_block_p->MB[i].DATA[j] = 0x00;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",218
000000AD A909                    		MOV.L 14H[R0], R1
000000AF 6C41                    		SHLL #04H, R1
000000B1 06890102                		ADD 08H[R0].L, R1
000000B5 06890104                		ADD 10H[R0].L, R1
000000B9 3C1600                  		MOV.B #00H, 06H[R1]
000000BC A901                    		MOV.L 10H[R0], R1
000000BE 6211                    		ADD #01H, R1
000000C0 A101                    		MOV.L R1, 10H[R0]
000000C2                         L32:	; bb102
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",216
000000C2 A901                    		MOV.L 10H[R0], R1
000000C4 6181                    		CMP #08H, R1
000000C6 23rr                    		BLTU L31
000000C8                         L33:	; bb107
                                 ;     219         }
                                 ;     220         for (j = 0; j < 2; j++)
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",220
000000C8 3E0400                  		MOV.L #00000000H, 10H[R0]
000000CB 2Err                 B  		BRA L35
000000CD                         L34:	; bb108
                                 ;     221         {
                                 ;     222             can_block_p->MB[i].TS.WORD = 0x00;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",222
000000CD A909                    		MOV.L 14H[R0], R1
000000CF 6C41                    		SHLL #04H, R1
000000D1 06890102                		ADD 08H[R0].L, R1
000000D5 3D1700                  		MOV.W #0000H, 0EH[R1]
000000D8 A901                    		MOV.L 10H[R0], R1
000000DA 6211                    		ADD #01H, R1
000000DC A101                    		MOV.L R1, 10H[R0]
000000DE                         L35:	; bb118
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",220
000000DE A901                    		MOV.L 10H[R0], R1
000000E0 6121                    		CMP #02H, R1
000000E2 23rr                    		BLTU L34
000000E4                         L36:	; bb123
000000E4 A909                    		MOV.L 14H[R0], R1
000000E6 6211                    		ADD #01H, R1
000000E8 A109                    		MOV.L R1, 14H[R0]
000000EA                         L37:	; bb126
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",212
000000EA A909                    		MOV.L 14H[R0], R1
000000EC 755120                  		CMP #20H, R1
000000EF A881                    		MOV.L 08H[R0], R1
000000F1 23rr                    		BLTU L28
000000F3                         L38:	; bb131
                                 ;     223         }
                                 ;     224     }    
                                 ;     225 
                                 ;     226 	/* Mask invalid for all mailboxes by default. */
                                 ;     227 	can_block_p->MKIVLR = 0xFFFFFFFF;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",227
000000F3 F9168AFF                		MOV.L #0FFFFFFFFH, 0228H[R1]
000000F7                         L39:	; bb131.split
                                 ;     228 
                                 ;     229     /* Halt -> OPERATION mode **************************************************/
                                 ;     230     /* Note: EST and BLIF flag go high here when stepping code in debugger. */
                                 ;     231     api_status |= R_CAN_Control(ch_nr, OPERATE_CANMODE);
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",231
000000F7 AA01                    		MOV.L 20H[R0], R1
000000F9 6662                    		MOV.L #00000006H, R2
000000FB 39rrrr               W  		BSR _R_CAN_Control
000000FE 06950106                		OR 18H[R0].L, R1
00000102 A181                    		MOV.L R1, 18H[R0]
00000104                         L40:	; bb131.split15
                                 ;     232 
                                 ;     233     /* Time Stamp Counter reset. Set the TSRC bit to 1 in CAN Operation mode. */
                                 ;     234     can_block_p->CTLR.BIT.TSRC = 1;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",234
00000104 A881                    		MOV.L 08H[R0], R1
00000106 F2154106                		BSET #05H, 0641H[R1].B
0000010A                         L41:	; bb145
                                 ;     235 
                                 ;     236     while ((can_block_p->CTLR.BIT.TSRC) && DEC_CHK_CAN_SW_TMR)
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",236
0000010A A881                    		MOV.L 08H[R0], R1
0000010C F6154106                		BTST #05H, 0641H[R1].B
00000110 20rr                    		BEQ L44
00000112                         L42:	; bb158
00000112 A889                    		MOV.L 0CH[R0], R1
00000114 6011                    		SUB #01H, R1
00000116 A089                    		MOV.L R1, 0CH[R0]
00000118 6101                    		CMP #00H, R1
0000011A 10                   S  		BEQ L44
0000011B                         L43:	; bb164
0000011B F80601                  		MOV.L #00000001H, [R0]
0000011E 08                   S  		BRA L45
0000011F                         L44:	; bb165
0000011F F80600                  		MOV.L #00000000H, [R0]
00000122                         L45:	; bb166
00000122 EC01                    		MOV.L [R0], R1
00000124 6101                    		CMP #00H, R1
00000126 21rr                    		BNE L41
00000128                         L46:	; bb171
                                 ;     237     {
                                 ;     238     }
                                 ;     239 
                                 ;     240     if (can_tmo_cnt == 0)
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",240
00000128 A889                    		MOV.L 0CH[R0], R1
0000012A 6101                    		CMP #00H, R1
0000012C 18                   S  		BNE L48
0000012D                         L47:	; if_then_bb176
                                 ;     241     {
                                 ;     242         api_status |= R_CAN_SW_TSRC_ERR;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",242
0000012D A981                    		MOV.L 18H[R0], R1
0000012F 78C1                    		BSET #0CH, R1
00000131 A181                    		MOV.L R1, 18H[R0]
00000133                         L48:	; if_break_bb179
                                 ;     243     }
                                 ;     244     
                                 ;     245     /* Check for errors so far, report, and clear. */
                                 ;     246     if (can_block_p->STR.BIT.EST)
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",246
00000133 A881                    		MOV.L 08H[R0], R1
00000135 754EFF                  		MOV.L #000000FFH, R14
00000138 521E4306                		AND 0643H[R1].UB, R14
0000013C 687E                    		SHLR #07H, R14
0000013E 610E                    		CMP #00H, R14
00000140 10                   S  		BEQ L50
00000141                         L49:	; if_then_bb192
                                 ;     247     {
                                 ;     248         api_status |= R_CAN_SW_RST_ERR;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",248
00000141 A981                    		MOV.L 18H[R0], R1
00000143 78B1                    		BSET #0BH, R1
00000145 A181                    		MOV.L R1, 18H[R0]
00000147                         L50:	; if_break_bb195
                                 ;     249     }
                                 ;     250 
                                 ;     251     /* Clear Error Interrupt Factor Judge Register. */
                                 ;     252     if (can_block_p->EIFR.BYTE)
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",252
00000147 A881                    		MOV.L 08H[R0], R1
00000149 5A1E4D06                		MOVU.B 064DH[R1], R14
0000014D 610E                    		CMP #00H, R14
0000014F 10                   S  		BEQ L52
00000150                         L51:	; if_then_bb204
                                 ;     253     {
                                 ;     254         api_status |= R_CAN_SW_RST_ERR;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",254
00000150 A981                    		MOV.L 18H[R0], R1
00000152 78B1                    		BSET #0BH, R1
00000154 A181                    		MOV.L R1, 18H[R0]
00000156                         L52:	; if_break_bb207
                                 ;     255     }
                                 ;     256 
                                 ;     257     can_block_p->EIFR.BYTE = 0x00;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",257
00000156 A881                    		MOV.L 08H[R0], R1
00000158 FA144D0600              		MOV.B #00H, 064DH[R1]
0000015D                         L53:	; if_break_bb207.split
                                 ;     258 
                                 ;     259     /* Clear Error Code Store Register. */
                                 ;     260     if (can_block_p->ECSR.BYTE)
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",260
0000015D A881                    		MOV.L 08H[R0], R1
0000015F 5A1E5006                		MOVU.B 0650H[R1], R14
00000163 610E                    		CMP #00H, R14
00000165 10                   S  		BEQ L55
00000166                         L54:	; if_then_bb219
                                 ;     261     {
                                 ;     262         api_status |= R_CAN_SW_RST_ERR;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",262
00000166 A981                    		MOV.L 18H[R0], R1
00000168 78B1                    		BSET #0BH, R1
0000016A A181                    		MOV.L R1, 18H[R0]
0000016C                         L55:	; if_break_bb222
                                 ;     263     }
                                 ;     264     can_block_p->ECSR.BYTE = 0x00;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",264
0000016C A881                    		MOV.L 08H[R0], R1
0000016E FA14500600              		MOV.B #00H, 0650H[R1]
00000173                         L56:	; if_break_bb222.split
                                 ;     265 
                                 ;     266     return api_status;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",266
00000173 E5000601                		MOV.L 18H[R0], 04H[R0]
00000177                         L57:	; bb228
00000177 A809                    		MOV.L 04H[R0], R1
00000179 A189                    		MOV.L R1, 1CH[R0]
                                 ;     267 }/* end R_CAN_Create() */
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",267
0000017B 6709                    		RTSD #24H
0000017D                         _R_CAN_PortSet:
                                 		.STACK	_R_CAN_PortSet=28
                                 ;     268 
                                 ;     269 /***********************************************************************************
                                 ;     270 Function Name:  R_CAN_PortSet
                                 ;     271 Description:    Configures the MCU and transceiver port pins. This function is 
                                 ;     272                 responsible for configuring the MCU and transceiver port pins. 
                                 ;     273                 Transceiver port pins such as Enable will vary depending on design, 
                                 ;     274                 and this fucntion must then be modified. The function is also used 
                                 ;     275                 to enter the CAN port test modes, such as Listen Only.
                                 ;     276             
                                 ;     277                 Typical TJA1041 transceiver voltages with CAN active for RX/62N 
                                 ;     278                 RSK (ROK5562N0C):
                                 ;     279                     PIN:        Voltage
                                 ;     280                     1    TXD        3.25
                                 ;     281                     2    GND        0.00
                                 ;     282                     3    VCC        5.08
                                 ;     283                     4    RXD        3.20
                                 ;     284                     5    VIO        3.25
                                 ;     285                     6    EN         3.25
                                 ;     286                     7    INH        5.08
                                 ;     287                     8    ERR        0.10
                                 ;     288                     9    WAKE       0.00
                                 ;     289                     10   VBAT       5.08
                                 ;     290                     11   SPLIT      2.57
                                 ;     291                     12   CANL       2.56
                                 ;     292                     13   CANH       2.56
                                 ;     293                     14   STB        3.25
                                 ;     294 Parameters:     ch_nr 
                                 ;     295                 action_types: ENABLE, DISABLE, CANPORT_TEST_LISTEN_ONLY, 
                                 ;     296                 CANPORT_TEST_0_EXT_LOOPBACK, CANPORT_TEST_1_INT_LOOPBACK, and
                                 ;     297                 CANPORT_RETURN_TO_NORMAL which is the default; no need to call 
                                 ;     298                 unless another test mode was invoked previously.
                                 ;     299 Return value:   R_CAN_OK                Action completed successfully.
                                 ;     300                 R_CAN_SW_BAD_MBX        Bad mailbox number.
                                 ;     301                 R_CAN_BAD_CH_NR         The channel number does not exist.
                                 ;     302                 R_CAN_BAD_ACTION_TYPE   No such action type exists for this function.
                                 ;     303                 R_CAN_SW_HALT_ERR       The CAN peripheral did not enter Halt mode.
                                 ;     304                 R_CAN_SW_RST_ERR        The CAN peripheral did not enter Reset mode.
                                 ;     305                 See also R_CAN_Control return values.
                                 ;     306 ***********************************************************************************/
                                 ;     307 uint32_t R_CAN_PortSet(const uint32_t ch_nr, const uint32_t action_type)
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",307
0000017D 7100E8                  		ADD #0FFFFFFE8H, R0
00000180 A109                    		MOV.L R1, 14H[R0]
00000182 A102                    		MOV.L R2, 10H[R0]
                                 ;     308 {  
                                 ;     309     uint32_t api_status = R_CAN_OK;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",309
00000184 3E0200                  		MOV.L #00000000H, 08H[R0]
00000187                         L59:	; entry.split
                                 ;     310     volatile struct st_can __evenaccess * can_block_p;
                                 ;     311     
                                 ;     312     if (ch_nr == 0)
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",312
00000187 A909                    		MOV.L 14H[R0], R1
00000189 6101                    		CMP #00H, R1
0000018B 21rr                    		BNE L67
0000018D                         L60:	; if_then_bb
                                 ;     313     {
                                 ;     314         can_block_p = (struct st_can __evenaccess *) 0x90200;        /* Point to CAN0 peripheral block. */
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",314
0000018D F90E01000209            		MOV.L #00090200H, 04H[R0]
00000193                         L61:	; if_then_bb.split
                                 ;     315     }
                                 ;     316     else
                                 ;     317     {
                                 ;     318         return R_CAN_BAD_CH_NR;        /* Channel does not exist for this MCU. */
                                 ;     319     }
                                 ;     320         
                                 ;     321     switch (action_type)
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",321
00000193 A901                    		MOV.L 10H[R0], R1
00000195 6101                    		CMP #00H, R1
00000197 20rr                    		BEQ L76
00000199                         L62:	; if_then_bb.split
00000199 6111                    		CMP #01H, R1
0000019B 20rr                    		BEQ L68
0000019D                         L63:	; if_then_bb.split
0000019D 6171                    		CMP #07H, R1
0000019F 3Arrrr               W  		BEQ L81
000001A2                         L64:	; if_then_bb.split
000001A2 6181                    		CMP #08H, R1
000001A4 3Arrrr               W  		BEQ L85
000001A7                         L65:	; if_then_bb.split
000001A7 6191                    		CMP #09H, R1
000001A9 3Arrrr               W  		BEQ L89
000001AC                         L66:	; if_then_bb.split
000001AC 61A1                    		CMP #0AH, R1
000001AE 3Arrrr               W  		BEQ L92
000001B1 38rrrr               W  		BRA L96
000001B4                         L67:	; if_else_bb
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",318
000001B4 F80620                  		MOV.L #00000020H, [R0]
000001B7 38rrrr               W  		BRA L98
000001BA                         L68:	; switch_clause_bb
000001BA FBEE13C108              		MOV.L #0008C113H, R14
                                 ;     322     {
                                 ;     323 		case ENABLE:
                                 ;     324 			/* Enable the CTX0 and CRX0 pins. */
                                 ;     325 
                                 ;     326 			/* Port function control register J (PFJCAN) is used to configure I/O pin.
                                 ;     327 			1: The CTX0 and CRX0 pins are enabled. */
                                 ;     328 			PFJCAN_REG = 1;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",328
000001BF F0E0                    		BSET #00H, [R14].B
000001C1                         L69:	; switch_clause_bb.split
                                 ;     329 
                                 ;     330 			CTX0_PORT_PIN = 1;	//CTX0 is output
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",330
000001C1 FBEE03C008              		MOV.L #0008C003H, R14
000001C6 F0E2                    		BSET #02H, [R14].B
000001C8                         L70:	; switch_clause_bb.split1
                                 ;     331 			CRX0_PORT_PIN = 0;	//CRX0 is input
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",331
000001C8 FBEE03C008              		MOV.L #0008C003H, R14
000001CD F0EB                    		BCLR #03H, [R14].B
000001CF                         L71:	; switch_clause_bb.split2
                                 ;     332 
                                 ;     333 			/* Set Input Buffer Control Register for CRX0 to connect input to CAN peripheral. */
                                 ;     334 			CRX0_PORT_INP_CTRL = 1;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",334
000001CF FBEE03C008              		MOV.L #0008C003H, R14
000001D4 F1E360                  		BSET #03H, 60H[R14].B
000001D7                         L72:	; switch_clause_bb.split3
                                 ;     335 
                                 ;     336 			/* Configure CAN0 STBn pin. See config.h. */
                                 ;     337 			CAN_TRX_DDR( CAN0_TRX_STB_PORT, CAN0_TRX_STB_PIN ) = 1;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",337
000001D7 FBEE04C008              		MOV.L #0008C004H, R14
000001DC F0E1                    		BSET #01H, [R14].B
000001DE                         L73:	; switch_clause_bb.split4
                                 ;     338 
                                 ;     339 			CAN_TRX_DR(CAN0_TRX_STB_PORT, CAN0_TRX_STB_PIN) = CAN0_TRX_STB_LVL;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",339
000001DE FBEE04C008              		MOV.L #0008C004H, R14
000001E3 F1E120                  		BSET #01H, 20H[R14].B
000001E6                         L74:	; switch_clause_bb.split5
                                 ;     340 
                                 ;     341 			/* Configure CAN0 EN pin. */
                                 ;     342 			CAN_TRX_DDR( CAN0_TRX_ENABLE_PORT, CAN0_TRX_ENABLE_PIN ) = 1;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",342
000001E6 FBEE04C008              		MOV.L #0008C004H, R14
000001EB F0E2                    		BSET #02H, [R14].B
000001ED                         L75:	; switch_clause_bb.split6
                                 ;     343 			CAN_TRX_DR(CAN0_TRX_ENABLE_PORT, CAN0_TRX_ENABLE_PIN) = CAN0_TRX_ENABLE_LVL;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",343
000001ED FBEE04C008              		MOV.L #0008C004H, R14
000001F2 F1E220                  		BSET #02H, 20H[R14].B
000001F5 38rrrr               W  		BRA L97
000001F8                         L76:	; switch_clause_bb9
000001F8 FBEE13C108              		MOV.L #0008C113H, R14
                                 ;     344 		break;
                                 ;     345 
                                 ;     346 		case DISABLE:
                                 ;     347 			/* Configure CAN0 TX and RX pins. */
                                 ;     348 
                                 ;     349 			/* Port function control register J (PFJCAN) is used to configure I/O pin
                                 ;     350 			0: The CTX0 and CRX0 pins are disabled. */
                                 ;     351 			PFJCAN_REG = 0;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",351
000001FD F0E8                    		BCLR #00H, [R14].B
000001FF                         L77:	; switch_clause_bb9.split
                                 ;     352 
                                 ;     353 			/* Configure CAN0 STBn pin. See config.h. */
                                 ;     354 			CAN_TRX_DDR( CAN0_TRX_STB_PORT, CAN0_TRX_STB_PIN ) = 1;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",354
000001FF FBEE04C008              		MOV.L #0008C004H, R14
00000204 F0E1                    		BSET #01H, [R14].B
00000206                         L78:	; switch_clause_bb9.split7
                                 ;     355 			CAN_TRX_DR(CAN0_TRX_STB_PORT, CAN0_TRX_STB_PIN) = !CAN0_TRX_STB_LVL; //Negated level
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",355
00000206 FBEE04C008              		MOV.L #0008C004H, R14
0000020B F1E920                  		BCLR #01H, 20H[R14].B
0000020E                         L79:	; switch_clause_bb9.split8
                                 ;     356 
                                 ;     357 			/* Configure CAN0 EN pin. */
                                 ;     358 			CAN_TRX_DDR( CAN0_TRX_ENABLE_PORT, CAN0_TRX_ENABLE_PIN ) = 1;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",358
0000020E FBEE04C008              		MOV.L #0008C004H, R14
00000213 F0E2                    		BSET #02H, [R14].B
00000215                         L80:	; switch_clause_bb9.split9
                                 ;     359 			CAN_TRX_DR(CAN0_TRX_ENABLE_PORT, CAN0_TRX_ENABLE_PIN) = !CAN0_TRX_ENABLE_LVL; //Negated level
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",359
00000215 FBEE04C008              		MOV.L #0008C004H, R14
0000021A F1EA20                  		BCLR #02H, 20H[R14].B
0000021D 38rrrr               W  		BRA L97
00000220                         L81:	; switch_clause_bb10
                                 ;     360 		break;
                                 ;     361 
                                 ;     362 		/* Run in Listen Only test mode. */
                                 ;     363 		case CANPORT_TEST_LISTEN_ONLY:
                                 ;     364 			api_status = R_CAN_Control(ch_nr, HALT_CANMODE);
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",364
00000220 A909                    		MOV.L 14H[R0], R1
00000222 6652                    		MOV.L #00000005H, R2
00000224 39rrrr               W  		BSR _R_CAN_Control
00000227 A081                    		MOV.L R1, 08H[R0]
00000229                         L82:	; switch_clause_bb10.split
                                 ;     365 			can_block_p->TCR.BYTE = 0x03;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",365
00000229 A809                    		MOV.L 04H[R0], R1
0000022B FA14580603              		MOV.B #03H, 0658H[R1]
00000230                         L83:	; switch_clause_bb10.split10
                                 ;     366 			api_status |= R_CAN_Control(ch_nr, OPERATE_CANMODE);
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",366
00000230 A909                    		MOV.L 14H[R0], R1
00000232 6662                    		MOV.L #00000006H, R2
00000234 39rrrr               W  		BSR _R_CAN_Control
00000237 06950102                		OR 08H[R0].L, R1
0000023B A081                    		MOV.L R1, 08H[R0]
0000023D                         L84:	; switch_clause_bb10.split11
0000023D 6612                    		MOV.L #00000001H, R2
0000023F 6601                    		MOV.L #00000000H, R1
                                 ;     367 			api_status |= R_CAN_PortSet(0, ENABLE);
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",367
00000241 39rrrr               W  		BSR _R_CAN_PortSet
00000244 06950102                		OR 08H[R0].L, R1
00000248 A081                    		MOV.L R1, 08H[R0]
0000024A 2Err                 B  		BRA L97
0000024C                         L85:	; switch_clause_bb23
                                 ;     368 		break;
                                 ;     369 
                                 ;     370 		/* Run in External Loopback test mode. */
                                 ;     371 		case CANPORT_TEST_0_EXT_LOOPBACK:
                                 ;     372 			api_status = R_CAN_Control(ch_nr, HALT_CANMODE);
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",372
0000024C A909                    		MOV.L 14H[R0], R1
0000024E 6652                    		MOV.L #00000005H, R2
00000250 39rrrr               W  		BSR _R_CAN_Control
00000253 A081                    		MOV.L R1, 08H[R0]
00000255                         L86:	; switch_clause_bb23.split
                                 ;     373 			can_block_p->TCR.BYTE = 0x05;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",373
00000255 A809                    		MOV.L 04H[R0], R1
00000257 FA14580605              		MOV.B #05H, 0658H[R1]
0000025C                         L87:	; switch_clause_bb23.split12
                                 ;     374 			api_status |= R_CAN_Control(ch_nr, OPERATE_CANMODE);
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",374
0000025C A909                    		MOV.L 14H[R0], R1
0000025E 6662                    		MOV.L #00000006H, R2
00000260 39rrrr               W  		BSR _R_CAN_Control
00000263 06950102                		OR 08H[R0].L, R1
00000267 A081                    		MOV.L R1, 08H[R0]
00000269                         L88:	; switch_clause_bb23.split13
00000269 6612                    		MOV.L #00000001H, R2
0000026B 6601                    		MOV.L #00000000H, R1
                                 ;     375 			api_status |= R_CAN_PortSet(0, ENABLE);
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",375
0000026D 39rrrr               W  		BSR _R_CAN_PortSet
00000270 06950102                		OR 08H[R0].L, R1
00000274 A081                    		MOV.L R1, 08H[R0]
00000276 2Err                 B  		BRA L97
00000278                         L89:	; switch_clause_bb36
                                 ;     376 		break;
                                 ;     377 
                                 ;     378 		/* Run in Internal Loopback test mode. */
                                 ;     379 		case CANPORT_TEST_1_INT_LOOPBACK:
                                 ;     380 			api_status = R_CAN_Control(ch_nr, HALT_CANMODE);
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",380
00000278 A909                    		MOV.L 14H[R0], R1
0000027A 6652                    		MOV.L #00000005H, R2
0000027C 39rrrr               W  		BSR _R_CAN_Control
0000027F A081                    		MOV.L R1, 08H[R0]
00000281                         L90:	; switch_clause_bb36.split
                                 ;     381 			can_block_p->TCR.BYTE = 0x07;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",381
00000281 A809                    		MOV.L 04H[R0], R1
00000283 FA14580607              		MOV.B #07H, 0658H[R1]
00000288                         L91:	; switch_clause_bb36.split14
                                 ;     382 			api_status |= R_CAN_Control(ch_nr, OPERATE_CANMODE);
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",382
00000288 A909                    		MOV.L 14H[R0], R1
0000028A 6662                    		MOV.L #00000006H, R2
0000028C 39rrrr               W  		BSR _R_CAN_Control
0000028F 06950102                		OR 08H[R0].L, R1
00000293 A081                    		MOV.L R1, 08H[R0]
00000295 2Err                 B  		BRA L97
00000297                         L92:	; switch_clause_bb46
                                 ;     383 		break;
                                 ;     384 
                                 ;     385 		/* Return to default CAN bus mode.
                                 ;     386 		This is the default setting at CAN reset. */
                                 ;     387 		case CANPORT_RETURN_TO_NORMAL:
                                 ;     388 			api_status = R_CAN_Control(ch_nr, HALT_CANMODE);
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",388
00000297 A909                    		MOV.L 14H[R0], R1
00000299 6652                    		MOV.L #00000005H, R2
0000029B 39rrrr               W  		BSR _R_CAN_Control
0000029E A081                    		MOV.L R1, 08H[R0]
000002A0                         L93:	; switch_clause_bb46.split
                                 ;     389 			can_block_p->TCR.BYTE = 0x00;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",389
000002A0 A809                    		MOV.L 04H[R0], R1
000002A2 FA14580600              		MOV.B #00H, 0658H[R1]
000002A7                         L94:	; switch_clause_bb46.split15
                                 ;     390 			api_status |= R_CAN_Control(ch_nr, OPERATE_CANMODE);
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",390
000002A7 A909                    		MOV.L 14H[R0], R1
000002A9 6662                    		MOV.L #00000006H, R2
000002AB 39rrrr               W  		BSR _R_CAN_Control
000002AE 06950102                		OR 08H[R0].L, R1
000002B2 A081                    		MOV.L R1, 08H[R0]
000002B4                         L95:	; switch_clause_bb46.split16
000002B4 6612                    		MOV.L #00000001H, R2
000002B6 6601                    		MOV.L #00000000H, R1
                                 ;     391 			api_status |= R_CAN_PortSet(0, ENABLE);
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",391
000002B8 39rrrr               W  		BSR _R_CAN_PortSet
000002BB 06950102                		OR 08H[R0].L, R1
000002BF A081                    		MOV.L R1, 08H[R0]
000002C1 08                   S  		BRA L97
000002C2                         L96:	; switch_clause_bb59
                                 ;     392 		break;
                                 ;     393 
                                 ;     394 		default:
                                 ;     395 			/* Bad action type. */
                                 ;     396 			api_status = R_CAN_BAD_ACTION_TYPE;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",396
000002C2 3E0280                  		MOV.L #00000080H, 08H[R0]
000002C5                         L97:	; switch_break_bb
                                 ;     397 		break;
                                 ;     398     }
                                 ;     399     return api_status;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",399
000002C5 E10002                  		MOV.L 08H[R0], [R0]
000002C8                         L98:	; bb62
000002C8 EC01                    		MOV.L [R0], R1
000002CA A089                    		MOV.L R1, 0CH[R0]
                                 ;     400 }/* end R_CAN_PortSet() */
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",400
000002CC 6706                    		RTSD #18H
000002CE                         _R_CAN_Control:
                                 		.STACK	_R_CAN_Control=36
                                 ;     401 
                                 ;     402 /*******************************************************************************
                                 ;     403 Function Name:  R_CAN_Control
                                 ;     404 Description:    Controls transition to CAN operating modes determined by the CAN 
                                 ;     405                 Control register. For example, the Halt mode should be used to 
                                 ;     406                 later configure a recieve mailbox. 
                                 ;     407 Parameters:     ch_nr
                                 ;     408                 action_type: EXITSLEEP_CANMODE, ENTERSLEEP_CANMODE,
                                 ;     409                 RESET_CANMODE, HALT_CANMODE, OPERATE_CANMODE.
                                 ;     410 Return value:   R_CAN_OK                Action completed successfully.
                                 ;     411                 R_CAN_SW_BAD_MBX        Bad mailbox number.
                                 ;     412                 R_CAN_BAD_CH_NR         The channel number does not exist.
                                 ;     413                 R_CAN_BAD_ACTION_TYPE   No such action type exists for this function.
                                 ;     414                 R_CAN_SW_WAKEUP_ERR     The CAN peripheral did not wake up from Sleep mode.
                                 ;     415                 R_CAN_SW_SLEEP_ERR      The CAN peripheral did enter Sleep mode.
                                 ;     416                 R_CAN_SW_RST_ERR        The CAN peripheral did not enter Halt mode.
                                 ;     417                 R_CAN_SW_HALT_ERR       The CAN peripheral did not enter Halt mode.
                                 ;     418                 R_CAN_SW_RST_ERR        The CAN peripheral did not enter Reset mode.
                                 ;     419                 See also R_CAN_PortSet return values.
                                 ;     420 *******************************************************************************/
                                 ;     421 uint32_t R_CAN_Control(const uint32_t ch_nr, const uint32_t action_type)
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",421
000002CE 7100E0                  		ADD #0FFFFFFE0H, R0
000002D1 A189                    		MOV.L R1, 1CH[R0]
000002D3 A182                    		MOV.L R2, 18H[R0]
                                 ;     422 {
                                 ;     423     uint32_t api_status = R_CAN_OK;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",423
000002D5 3E0400                  		MOV.L #00000000H, 10H[R0]
000002D8                         L100:	; entry.split
                                 ;     424     uint32_t can_tmo_cnt = MAX_CAN_SW_DELAY;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",424
000002D8 F90A030020              		MOV.L #00002000H, 0CH[R0]
000002DD                         L101:	; entry.split1
                                 ;     425     volatile struct st_can __evenaccess * can_block_p;
                                 ;     426     
                                 ;     427     if (ch_nr == 0)
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",427
000002DD A989                    		MOV.L 1CH[R0], R1
000002DF 6101                    		CMP #00H, R1
000002E1 21rr                    		BNE L108
000002E3                         L102:	; if_then_bb
                                 ;     428     {
                                 ;     429         can_block_p = (struct st_can __evenaccess *) 0x90200;        /* Point to CAN0 peripheral block. */
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",429
000002E3 F90E02000209            		MOV.L #00090200H, 08H[R0]
000002E9                         L103:	; if_then_bb.split
                                 ;     430     }
                                 ;     431     else
                                 ;     432     {
                                 ;     433         return R_CAN_BAD_CH_NR;        /* Channel does not exist for this MCU. */
                                 ;     434     }
                                 ;     435 
                                 ;     436     switch (action_type)
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",436
000002E9 A981                    		MOV.L 18H[R0], R1
000002EB 6121                    		CMP #02H, R1
000002ED 20rr                    		BEQ L109
000002EF                         L104:	; if_then_bb.split
000002EF 6131                    		CMP #03H, R1
000002F1 20rr                    		BEQ L118
000002F3                         L105:	; if_then_bb.split
000002F3 6141                    		CMP #04H, R1
000002F5 3Arrrr               W  		BEQ L131
000002F8                         L106:	; if_then_bb.split
000002F8 6151                    		CMP #05H, R1
000002FA 3Arrrr               W  		BEQ L142
000002FD                         L107:	; if_then_bb.split
000002FD 6161                    		CMP #06H, R1
000002FF 3Arrrr               W  		BEQ L153
00000302 38rrrr               W  		BRA L172
00000305                         L108:	; if_else_bb
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",433
00000305 3E0120                  		MOV.L #00000020H, 04H[R0]
00000308 38rrrr               W  		BRA L174
0000030B                         L109:	; switch_clause_bb
                                 ;     437     {
                                 ;     438 		case EXITSLEEP_CANMODE:
                                 ;     439 			/* Set to, and ensure that RCAN returns in, Sleep mode.
                                 ;     440 			Write to the SLPM bit (in CAN Reset or) CAN Halt mode,
                                 ;     441 			but if we are in Sleep mode, we should already also be
                                 ;     442 			in Halt mode. */
                                 ;     443 			can_block_p->CTLR.BIT.SLPM = CAN_NOT_SLEEP;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",443
0000030B A881                    		MOV.L 08H[R0], R1
0000030D F21A4006                		BCLR #02H, 0640H[R1].B
00000311 2Err                 B  		BRA L111
00000313                         L110:	; bb16
                                 ;     444 			while ((can_block_p->STR.BIT.SLPST) && DEC_CHK_CAN_SW_TMR)
                                 ;     445 			{
                                 ;     446 				nop();
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",446
00000313 03                      		NOP
00000314                         L111:	; bb17
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",444
00000314 A881                    		MOV.L 08H[R0], R1
00000316 F6124206                		BTST #02H, 0642H[R1].B
0000031A 20rr                    		BEQ L114
0000031C                         L112:	; bb30
0000031C A889                    		MOV.L 0CH[R0], R1
0000031E 6011                    		SUB #01H, R1
00000320 A089                    		MOV.L R1, 0CH[R0]
00000322 6101                    		CMP #00H, R1
00000324 10                   S  		BEQ L114
00000325                         L113:	; bb36
00000325 F80601                  		MOV.L #00000001H, [R0]
00000328 08                   S  		BRA L115
00000329                         L114:	; bb37
00000329 F80600                  		MOV.L #00000000H, [R0]
0000032C                         L115:	; bb38
0000032C EC01                    		MOV.L [R0], R1
0000032E 6101                    		CMP #00H, R1
00000330 21rr                    		BNE L110
00000332                         L116:	; bb43
                                 ;     447 			}
                                 ;     448 			if (can_tmo_cnt == 0)
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",448
00000332 A889                    		MOV.L 0CH[R0], R1
00000334 6101                    		CMP #00H, R1
00000336 3Brrrr               W  		BNE L173
00000339                         L117:	; if_then_bb48
                                 ;     449 			{
                                 ;     450 				api_status = R_CAN_SW_WAKEUP_ERR;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",450
00000339 F90A040001              		MOV.L #00000100H, 10H[R0]
0000033E 38rrrr               W  		BRA L173
00000341                         L118:	; switch_clause_bb50
                                 ;     451 			}
                                 ;     452 		break;
                                 ;     453 
                                 ;     454 		case ENTERSLEEP_CANMODE:
                                 ;     455 			/* Set to, and ensure that RCAN returns in, the Sleep state.
                                 ;     456 			Write to the SLPM bit in CAN Reset or CAN Halt modes. */
                                 ;     457 			api_status = R_CAN_Control(ch_nr, HALT_CANMODE);
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",457
00000341 A989                    		MOV.L 1CH[R0], R1
00000343 6652                    		MOV.L #00000005H, R2
00000345 39rrrr               W  		BSR _R_CAN_Control
00000348 A101                    		MOV.L R1, 10H[R0]
0000034A                         L119:	; switch_clause_bb50.split
                                 ;     458 
                                 ;     459 			can_block_p->CTLR.BIT.SLPM = CAN_SLEEP;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",459
0000034A A881                    		MOV.L 08H[R0], R1
0000034C F2124006                		BSET #02H, 0640H[R1].B
00000350 2Err                 B  		BRA L121
00000352                         L120:	; bb59
                                 ;     460 			while ((!can_block_p->STR.BIT.SLPST) && DEC_CHK_CAN_SW_TMR)
                                 ;     461 			{
                                 ;     462 				nop();
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",462
00000352 03                      		NOP
00000353                         L121:	; bb60
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",460
00000353 A881                    		MOV.L 08H[R0], R1
00000355 F6124206                		BTST #02H, 0642H[R1].B
00000359 10                   S  		BEQ L123
0000035A                         L122:	; bb73
0000035A F80600                  		MOV.L #00000000H, [R0]
0000035D 08                   S  		BRA L124
0000035E                         L123:	; bb74
0000035E F80601                  		MOV.L #00000001H, [R0]
00000361                         L124:	; bb75
00000361 EC01                    		MOV.L [R0], R1
00000363 6101                    		CMP #00H, R1
00000365 20rr                    		BEQ L127
00000367                         L125:	; bb78
00000367 A889                    		MOV.L 0CH[R0], R1
00000369 6011                    		SUB #01H, R1
0000036B A089                    		MOV.L R1, 0CH[R0]
0000036D 6101                    		CMP #00H, R1
0000036F 10                   S  		BEQ L127
00000370                         L126:	; bb84
00000370 F80601                  		MOV.L #00000001H, [R0]
00000373 08                   S  		BRA L128
00000374                         L127:	; bb85
00000374 F80600                  		MOV.L #00000000H, [R0]
00000377                         L128:	; bb86
00000377 EC01                    		MOV.L [R0], R1
00000379 6101                    		CMP #00H, R1
0000037B 21rr                    		BNE L120
0000037D                         L129:	; bb91
                                 ;     463 			}
                                 ;     464 			if (can_tmo_cnt == 0)
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",464
0000037D A889                    		MOV.L 0CH[R0], R1
0000037F 6101                    		CMP #00H, R1
00000381 3Brrrr               W  		BNE L173
00000384                         L130:	; if_then_bb96
                                 ;     465 			{
                                 ;     466 				api_status = R_CAN_SW_SLEEP_ERR;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",466
00000384 F90A040002              		MOV.L #00000200H, 10H[R0]
00000389 38rrrr               W  		BRA L173
0000038C                         L131:	; switch_clause_bb98
                                 ;     467 			}
                                 ;     468 		break;
                                 ;     469 
                                 ;     470 		case RESET_CANMODE:
                                 ;     471 			/* Set to, and ensure that RCAN is in, the Reset state. */
                                 ;     472 			can_block_p->CTLR.BIT.CANM = CAN_RESET;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",472
0000038C A881                    		MOV.L 08H[R0], R1
0000038E 5A1E4006                		MOVU.B 0640H[R1], R14
00000392 780E                    		BSET #00H, R14
00000394 762EFD00                		AND #0FDH, R14
00000398 CB1E4006                		MOV.B R14, 0640H[R1]
0000039C                         L132:	; bb109
                                 ;     473 
                                 ;     474 			while ((!can_block_p->STR.BIT.RSTST) && DEC_CHK_CAN_SW_TMR)
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",474
0000039C A881                    		MOV.L 08H[R0], R1
0000039E F6104206                		BTST #00H, 0642H[R1].B
000003A2 10                   S  		BEQ L134
000003A3                         L133:	; bb122
000003A3 F80600                  		MOV.L #00000000H, [R0]
000003A6 08                   S  		BRA L135
000003A7                         L134:	; bb123
000003A7 F80601                  		MOV.L #00000001H, [R0]
000003AA                         L135:	; bb124
000003AA EC01                    		MOV.L [R0], R1
000003AC 6101                    		CMP #00H, R1
000003AE 20rr                    		BEQ L138
000003B0                         L136:	; bb127
000003B0 A889                    		MOV.L 0CH[R0], R1
000003B2 6011                    		SUB #01H, R1
000003B4 A089                    		MOV.L R1, 0CH[R0]
000003B6 6101                    		CMP #00H, R1
000003B8 10                   S  		BEQ L138
000003B9                         L137:	; bb133
000003B9 F80601                  		MOV.L #00000001H, [R0]
000003BC 08                   S  		BRA L139
000003BD                         L138:	; bb134
000003BD F80600                  		MOV.L #00000000H, [R0]
000003C0                         L139:	; bb135
000003C0 EC01                    		MOV.L [R0], R1
000003C2 6101                    		CMP #00H, R1
000003C4 21rr                    		BNE L132
000003C6                         L140:	; bb140
                                 ;     475 			{
                                 ;     476 			}
                                 ;     477 
                                 ;     478 			if (can_tmo_cnt == 0)
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",478
000003C6 A889                    		MOV.L 0CH[R0], R1
000003C8 6101                    		CMP #00H, R1
000003CA 3Brrrr               W  		BNE L173
000003CD                         L141:	; if_then_bb145
                                 ;     479 			{
                                 ;     480 				api_status = R_CAN_SW_RST_ERR;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",480
000003CD F90A040008              		MOV.L #00000800H, 10H[R0]
000003D2 38rrrr               W  		BRA L173
000003D5                         L142:	; switch_clause_bb147
                                 ;     481 			}
                                 ;     482 		break;
                                 ;     483 
                                 ;     484 		case HALT_CANMODE:
                                 ;     485 			/* Set to, and ensure that RCAN is in, the Halt state. */
                                 ;     486 			/* The CAN module enters CAN Halt mode after waiting for the end of
                                 ;     487 			message reception or transmission. */
                                 ;     488 			can_block_p->CTLR.BIT.CANM = CAN_HALT;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",488
000003D5 A881                    		MOV.L 08H[R0], R1
000003D7 5A1E4006                		MOVU.B 0640H[R1], R14
000003DB 781E                    		BSET #01H, R14
000003DD 762EFE00                		AND #0FEH, R14
000003E1 CB1E4006                		MOV.B R14, 0640H[R1]
000003E5                         L143:	; bb158
                                 ;     489 
                                 ;     490 			while ((!can_block_p->STR.BIT.HLTST) && DEC_CHK_CAN_SW_TMR)
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",490
000003E5 A881                    		MOV.L 08H[R0], R1
000003E7 F6114206                		BTST #01H, 0642H[R1].B
000003EB 10                   S  		BEQ L145
000003EC                         L144:	; bb171
000003EC F80600                  		MOV.L #00000000H, [R0]
000003EF 08                   S  		BRA L146
000003F0                         L145:	; bb172
000003F0 F80601                  		MOV.L #00000001H, [R0]
000003F3                         L146:	; bb173
000003F3 EC01                    		MOV.L [R0], R1
000003F5 6101                    		CMP #00H, R1
000003F7 20rr                    		BEQ L149
000003F9                         L147:	; bb176
000003F9 A889                    		MOV.L 0CH[R0], R1
000003FB 6011                    		SUB #01H, R1
000003FD A089                    		MOV.L R1, 0CH[R0]
000003FF 6101                    		CMP #00H, R1
00000401 10                   S  		BEQ L149
00000402                         L148:	; bb182
00000402 F80601                  		MOV.L #00000001H, [R0]
00000405 08                   S  		BRA L150
00000406                         L149:	; bb183
00000406 F80600                  		MOV.L #00000000H, [R0]
00000409                         L150:	; bb184
00000409 EC01                    		MOV.L [R0], R1
0000040B 6101                    		CMP #00H, R1
0000040D 21rr                    		BNE L143
0000040F                         L151:	; bb189
                                 ;     491             {
                                 ;     492             }
                                 ;     493 
                                 ;     494 			if (can_tmo_cnt == 0)
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",494
0000040F A889                    		MOV.L 0CH[R0], R1
00000411 6101                    		CMP #00H, R1
00000413 3Brrrr               W  		BNE L173
00000416                         L152:	; if_then_bb194
                                 ;     495 			{
                                 ;     496 				api_status = R_CAN_SW_HALT_ERR;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",496
00000416 F90A040004              		MOV.L #00000400H, 10H[R0]
0000041B 38rrrr               W  		BRA L173
0000041E                         L153:	; switch_clause_bb196
0000041E FBEE140008              		MOV.L #00080014H, R14
                                 ;     497 			}
                                 ;     498 
                                 ;     499 		break;
                                 ;     500 
                                 ;     501 		case OPERATE_CANMODE:
                                 ;     502 			/* Take CAN out of Stop mode. */
                                 ;     503 			SYSTEM.MSTPCRB.BIT.MSTPB0  =  0;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",503
00000423 ECEF                    		MOV.L [R14], R15
00000425 7A0F                    		BCLR #00H, R15
00000427 E3EF                    		MOV.L R15, [R14]
00000429 2Err                 B  		BRA L155
0000042B                         L154:	; bb200
                                 ;     504 			while ((SYSTEM.MSTPCRB.BIT.MSTPB0) && DEC_CHK_CAN_SW_TMR)
                                 ;     505 			{
                                 ;     506 				nop();
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",506
0000042B 03                      		NOP
0000042C                         L155:	; bb201
0000042C FBEE140008              		MOV.L #00080014H, R14
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",504
00000431 ECEE                    		MOV.L [R14], R14
00000433 6DFE                    		SHLL #1FH, R14
00000435 69FE                    		SHLR #1FH, R14
00000437 610E                    		CMP #00H, R14
00000439 20rr                    		BEQ L158
0000043B                         L156:	; bb207
0000043B A889                    		MOV.L 0CH[R0], R1
0000043D 6011                    		SUB #01H, R1
0000043F A089                    		MOV.L R1, 0CH[R0]
00000441 6101                    		CMP #00H, R1
00000443 10                   S  		BEQ L158
00000444                         L157:	; bb213
00000444 F80601                  		MOV.L #00000001H, [R0]
00000447 08                   S  		BRA L159
00000448                         L158:	; bb214
00000448 F80600                  		MOV.L #00000000H, [R0]
0000044B                         L159:	; bb215
0000044B EC01                    		MOV.L [R0], R1
0000044D 6101                    		CMP #00H, R1
0000044F 21rr                    		BNE L154
00000451                         L160:	; bb220
                                 ;     507 			}
                                 ;     508 
                                 ;     509 			/* Set to Operate mode. */
                                 ;     510 			can_block_p->CTLR.BIT.CANM = CAN_OPERATION;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",510
00000451 A881                    		MOV.L 08H[R0], R1
00000453 754EFC                  		MOV.L #000000FCH, R14
00000456 521E4006                		AND 0640H[R1].UB, R14
0000045A CB1E4006                		MOV.B R14, 0640H[R1]
0000045E                         L161:	; bb231
                                 ;     511 
                                 ;     512 			/* Ensure that RCAN is in Operation mode. */
                                 ;     513 			while (((can_block_p->STR.BIT.HLTST) || (can_block_p->STR.BIT.RSTST)) && DEC_CHK_CAN_SW_TMR)
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",513
0000045E A881                    		MOV.L 08H[R0], R1
00000460 F6114206                		BTST #01H, 0642H[R1].B
00000464 18                   S  		BNE L163
00000465                         L162:	; bb244
00000465 A881                    		MOV.L 08H[R0], R1
00000467 F6104206                		BTST #00H, 0642H[R1].B
0000046B 10                   S  		BEQ L164
0000046C                         L163:	; bb257
0000046C F80601                  		MOV.L #00000001H, [R0]
0000046F 08                   S  		BRA L165
00000470                         L164:	; bb258
00000470 F80600                  		MOV.L #00000000H, [R0]
00000473                         L165:	; bb259
00000473 EC01                    		MOV.L [R0], R1
00000475 6101                    		CMP #00H, R1
00000477 20rr                    		BEQ L168
00000479                         L166:	; bb263
00000479 A889                    		MOV.L 0CH[R0], R1
0000047B 6011                    		SUB #01H, R1
0000047D A089                    		MOV.L R1, 0CH[R0]
0000047F 6101                    		CMP #00H, R1
00000481 10                   S  		BEQ L168
00000482                         L167:	; bb269
00000482 F80601                  		MOV.L #00000001H, [R0]
00000485 08                   S  		BRA L169
00000486                         L168:	; bb270
00000486 F80600                  		MOV.L #00000000H, [R0]
00000489                         L169:	; bb271
00000489 EC01                    		MOV.L [R0], R1
0000048B 6101                    		CMP #00H, R1
0000048D 21rr                    		BNE L161
0000048F                         L170:	; bb276
                                 ;     514 			{
                                 ;     515 			}
                                 ;     516 
                                 ;     517 			if (can_tmo_cnt == 0)
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",517
0000048F A889                    		MOV.L 0CH[R0], R1
00000491 6101                    		CMP #00H, R1
00000493 18                   S  		BNE L173
00000494                         L171:	; if_then_bb281
                                 ;     518 			{
                                 ;     519 				api_status = R_CAN_SW_RST_ERR;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",519
00000494 F90A040008              		MOV.L #00000800H, 10H[R0]
00000499 08                   S  		BRA L173
0000049A                         L172:	; switch_clause_bb283
                                 ;     520 			}
                                 ;     521 		break;
                                 ;     522 		default:
                                 ;     523 			api_status = R_CAN_BAD_ACTION_TYPE;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",523
0000049A 3E0480                  		MOV.L #00000080H, 10H[R0]
0000049D                         L173:	; switch_break_bb
                                 ;     524 		break;
                                 ;     525     }
                                 ;     526 
                                 ;     527     return api_status;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",527
0000049D E5000401                		MOV.L 10H[R0], 04H[R0]
000004A1                         L174:	; bb286
000004A1 A809                    		MOV.L 04H[R0], R1
000004A3 A109                    		MOV.L R1, 14H[R0]
                                 ;     528 }/* end R_CAN_Control() */
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",528
000004A5 6708                    		RTSD #20H
000004A7                         _R_CAN_TxSet:
                                 		.STACK	_R_CAN_TxSet=76
                                 ;     529 
                                 ;     530 /*******************************************************************************
                                 ;     531 Function Name:  R_CAN_TxSet
                                 ;     532 Description:    Set up a CAN mailbox to transmit.
                                 ;     533 Parameters:     Channel nr.
                                 ;     534                 Mailbox nr.
                                 ;     535                 frame_p - pointer to a data frame structure.
                                 ;     536                 remote - REMOTE_FRAME to send remote request, DATA_FRAME for 
                                 ;     537                 sending normal dataframe.
                                 ;     538 Return value:   R_CAN_OK                The mailbox was set up for transmission.
                                 ;     539                 R_CAN_SW_BAD_MBX        Bad mailbox number.
                                 ;     540                 R_CAN_BAD_CH_NR         The channel number does not exist.
                                 ;     541                 R_CAN_BAD_ACTION_TYPE   No such action type exists for this 
                                 ;     542                                         function.
                                 ;     543 *******************************************************************************/
                                 ;     544 uint32_t R_CAN_TxSet(   const uint32_t             ch_nr,
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",544
000004A7 7100B8                  		ADD #0FFFFFFB8H, R0
000004AA A209                    		MOV.L R1, 24H[R0]
000004AC A202                    		MOV.L R2, 20H[R0]
000004AE A18B                    		MOV.L R3, 1CH[R0]
000004B0 A184                    		MOV.L R4, 18H[R0]
                                 ;     545                         const uint32_t             mbox_nr,
                                 ;     546                         const can_frame_t*     frame_p,
                                 ;     547                         const uint32_t             frame_type)
                                 ;     548 {
                                 ;     549     uint32_t api_status = R_CAN_OK;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",549
000004B2 3E0400                  		MOV.L #00000000H, 10H[R0]
000004B5                         L176:	; entry.split
                                 ;     550     uint32_t i;
                                 ;     551     volatile struct st_can __evenaccess * can_block_p;
                                 ;     552     
                                 ;     553     CHECK_MBX_NR
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",553
000004B5 AA01                    		MOV.L 20H[R0], R1
000004B7 755120                  		CMP #20H, R1
000004BA 23rr                    		BLTU L178
000004BC                         L177:	; if_then_bb
000004BC 3E0140                  		MOV.L #00000040H, 04H[R0]
000004BF 38rrrr               W  		BRA L230
000004C2                         L178:	; if_break_bb
                                 ;     554     if (ch_nr == 0)
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",554
000004C2 AA09                    		MOV.L 24H[R0], R1
000004C4 6101                    		CMP #00H, R1
000004C6 3Brrrr               W  		BNE L210
000004C9                         L179:	; if_then_bb15
                                 ;     555     {
                                 ;     556         can_block_p = (struct st_can __evenaccess *) 0x90200;        /* Point to CAN0 peripheral block. */
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",556
000004C9 F90E02000209            		MOV.L #00090200H, 08H[R0]
000004CF                         L180:	; if_then_bb15.split
                                 ;     557     }
                                 ;     558     else
                                 ;     559     {
                                 ;     560         return R_CAN_BAD_CH_NR;        /* Channel does not exist for this MCU. */
                                 ;     561     }
                                 ;     562 
                                 ;     563     /* Wait for any previous transmission to complete. */
                                 ;     564     api_status = R_CAN_WaitTxRx(ch_nr, mbox_nr);
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",564
000004CF AA01                    		MOV.L 20H[R0], R1
000004D1 E5000911                		MOV.L 24H[R0], 44H[R0]
000004D5 A401                    		MOV.L R1, 40H[R0]
000004D7                         L181:	; if_then_bb15.split1
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1157
000004D7 3E0E00                  		MOV.L #00000000H, 38H[R0]
000004DA                         L182:	; if_then_bb15.split2
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1158
000004DA F90A0D0020              		MOV.L #00002000H, 34H[R0]
000004DF                         L183:	; if_then_bb15.split3
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1161
000004DF AC01                    		MOV.L 40H[R0], R1
000004E1 755120                  		CMP #20H, R1
000004E4 23rr                    		BLTU L185
000004E6                         L184:	; if_then_bb.i
000004E6 3E0B40                  		MOV.L #00000040H, 2CH[R0]
000004E9 38rrrr               W  		BRA L205
000004EC                         L185:	; if_break_bb.i
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1162
000004EC AC09                    		MOV.L 44H[R0], R1
000004EE 6101                    		CMP #00H, R1
000004F0 21rr                    		BNE L188
000004F2                         L186:	; if_then_bb13.i
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1164
000004F2 F90E0C000209            		MOV.L #00090200H, 30H[R0]
000004F8                         L187:	; if_then_bb13.i.split
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1172
000004F8 AB01                    		MOV.L 30H[R0], R1
000004FA 06890110                		ADD 40H[R0].L, R1
000004FE 754EFF                  		MOV.L #000000FFH, R14
00000501 521E2006                		AND 0620H[R1].UB, R14
00000505 687E                    		SHLR #07H, R14
00000507 610E                    		CMP #00H, R14
00000509 18                   S  		BNE L189
0000050A 2Err                 B  		BRA L196
0000050C                         L188:	; if_else_bb.i
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1168
0000050C 3E0B20                  		MOV.L #00000020H, 2CH[R0]
0000050F 2Err                 B  		BRA L205
00000511                         L189:	; bb34.i
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1174
00000511 AB01                    		MOV.L 30H[R0], R1
00000513 06890110                		ADD 40H[R0].L, R1
00000517 F6102006                		BTST #00H, 0620H[R1].B
0000051B 21rr                    		BNE L192
0000051D                         L190:	; bb51.i
0000051D AB09                    		MOV.L 34H[R0], R1
0000051F 6011                    		SUB #01H, R1
00000521 A309                    		MOV.L R1, 34H[R0]
00000523 6101                    		CMP #00H, R1
00000525 10                   S  		BEQ L192
00000526                         L191:	; bb57.i
00000526 3E0A01                  		MOV.L #00000001H, 28H[R0]
00000529 08                   S  		BRA L193
0000052A                         L192:	; bb58.i
0000052A 3E0A00                  		MOV.L #00000000H, 28H[R0]
0000052D                         L193:	; bb59.i
0000052D AA81                    		MOV.L 28H[R0], R1
0000052F 6101                    		CMP #00H, R1
00000531 21rr                    		BNE L189
00000533                         L194:	; bb64.i
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1178
00000533 AB09                    		MOV.L 34H[R0], R1
00000535 6101                    		CMP #00H, R1
00000537 21rr                    		BNE L204
00000539                         L195:	; if_then_bb69.i
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1180
00000539 F90A0E0020              		MOV.L #00002000H, 38H[R0]
0000053E 2Err                 B  		BRA L204
00000540                         L196:	; if_else_bb71.i
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1184
00000540 AB01                    		MOV.L 30H[R0], R1
00000542 06890110                		ADD 40H[R0].L, R1
00000546 F6162006                		BTST #06H, 0620H[R1].B
0000054A 20rr                    		BEQ L204
0000054C                         L197:	; bb91.i
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1186
0000054C AB01                    		MOV.L 30H[R0], R1
0000054E 06890110                		ADD 40H[R0].L, R1
00000552 5A1E2006                		MOVU.B 0620H[R1], R14
00000556 681E                    		SHLR #01H, R14
00000558 641E                    		AND #01H, R14
0000055A 611E                    		CMP #01H, R14
0000055C 21rr                    		BNE L200
0000055E                         L198:	; bb108.i
0000055E AB09                    		MOV.L 34H[R0], R1
00000560 6011                    		SUB #01H, R1
00000562 A309                    		MOV.L R1, 34H[R0]
00000564 6101                    		CMP #00H, R1
00000566 10                   S  		BEQ L200
00000567                         L199:	; bb114.i
00000567 3E0A01                  		MOV.L #00000001H, 28H[R0]
0000056A 08                   S  		BRA L201
0000056B                         L200:	; bb115.i
0000056B 3E0A00                  		MOV.L #00000000H, 28H[R0]
0000056E                         L201:	; bb116.i
0000056E AA81                    		MOV.L 28H[R0], R1
00000570 6101                    		CMP #00H, R1
00000572 21rr                    		BNE L197
00000574                         L202:	; bb121.i
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1190
00000574 AB09                    		MOV.L 34H[R0], R1
00000576 6101                    		CMP #00H, R1
00000578 18                   S  		BNE L204
00000579                         L203:	; if_then_bb126.i
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1192
00000579 F90A0E0040              		MOV.L #00004000H, 38H[R0]
0000057E                         L204:	; if_break_bb129.i
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1195
0000057E E5000E0B                		MOV.L 38H[R0], 2CH[R0]
00000582                         L205:	; _$R_CAN_WaitTxRx.exit
00000582 AA89                    		MOV.L 2CH[R0], R1
00000584 A389                    		MOV.L R1, 3CH[R0]
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1196
00000586 A101                    		MOV.L R1, 10H[R0]
00000588                         L206:	; _$R_CAN_WaitTxRx.exit.split
                                 ;     565 
                                 ;     566     /* Interrupt disable the mailbox.in case it was a receive mailbox */
                                 ;     567     can_block_p->MIER &= ~(bit_set[mbox_nr]);
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",567
00000588 FBE2rrrrrrrr            		MOV.L #__$bit_set, R14
0000058E AA01                    		MOV.L 20H[R0], R1
00000590 FE61EE                  		MOV.L [R1,R14], R14
00000593 7E0E                    		NOT R14
00000595 A881                    		MOV.L 08H[R0], R1
00000597 06911E8B                		AND 022CH[R1].L, R14
0000059B E71E8B                  		MOV.L R14, 022CH[R1]
0000059E                         L207:	; _$R_CAN_WaitTxRx.exit.split4
                                 ;     568 
                                 ;     569     /* Clear message mailbox control register. Setting TRMREQ to 0 should abort. Do a byte-write to avoid read-modify-write with HW writing another bit inbet
                                 ;     570      * Do it twice since "Bits SENTDATA and TRMREQ cannot be set to 0 simultaneously." */
                                 ;     571     can_block_p->MCTL[mbox_nr].BYTE = 0;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",571
0000059E A881                    		MOV.L 08H[R0], R1
000005A0 06890108                		ADD 20H[R0].L, R1
000005A4 FA14200600              		MOV.B #00H, 0620H[R1]
000005A9                         L208:	; _$R_CAN_WaitTxRx.exit.split5
                                 ;     572     can_block_p->MCTL[mbox_nr].BYTE = 0;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",572
000005A9 A881                    		MOV.L 08H[R0], R1
000005AB 06890108                		ADD 20H[R0].L, R1
000005AF FA14200600              		MOV.B #00H, 0620H[R1]
000005B4                         L209:	; _$R_CAN_WaitTxRx.exit.split6
                                 ;     573 
                                 ;     574     /*** Set Mailbox ID based on ID mode ***/
                                 ;     575     if (frame_p->id & XID_MASK)    /* Check for XID flag bit set in ID field */
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",575
000005B4 AA01                    		MOV.L 20H[R0], R1
000005B6 6C41                    		SHLL #04H, R1
000005B8 06890102                		ADD 08H[R0].L, R1
000005BC A98A                    		MOV.L 1CH[R0], R2
000005BE FBE2000000E0            		MOV.L #0E0000000H, R14
000005C4 06A00C2E                		TST [R2].L, R14
000005C8 18                   S  		BNE L211
000005C9 2Err                 B  		BRA L214
000005CB                         L210:	; if_else_bb
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",560
000005CB 3E0120                  		MOV.L #00000020H, 04H[R0]
000005CE 38rrrr               W  		BRA L230
000005D1                         L211:	; if_then_bb47
                                 ;     576     {
                                 ;     577         /* Set message mailbox buffer Extended ID, masking off temporary XID flag bit. */      
                                 ;     578         can_block_p->MB[mbox_nr].ID.LONG = (frame_p->id & (~XID_MASK));
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",578
000005D1 A98A                    		MOV.L 1CH[R0], R2
000005D3 EC2E                    		MOV.L [R2], R14
000005D5 742EFFFFFF1F            		AND #1FFFFFFFH, R14
000005DB E31E                    		MOV.L R14, [R1]
000005DD                         L212:	; if_then_bb47.split
                                 ;     579         if (can_block_p->CTLR.BIT.IDFM == MIXED_ID_MODE)
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",579
000005DD A881                    		MOV.L 08H[R0], R1
000005DF 5A1E4106                		MOVU.B 0641H[R1], R14
000005E3 681E                    		SHLR #01H, R14
000005E5 643E                    		AND #03H, R14
000005E7 612E                    		CMP #02H, R14
000005E9 21rr                    		BNE L216
000005EB                         L213:	; if_then_bb72
                                 ;     580         {
                                 ;     581             can_block_p->MB[mbox_nr].ID.BIT.IDE = 1;   /* Mixed mode; select to send extended frame. */
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",581
000005EB AA01                    		MOV.L 20H[R0], R1
000005ED 6C41                    		SHLL #04H, R1
000005EF 06890102                		ADD 08H[R0].L, R1
000005F3 EC1E                    		MOV.L [R1], R14
000005F5 79FE                    		BSET #1FH, R14
000005F7 E31E                    		MOV.L R14, [R1]
000005F9 2Err                 B  		BRA L216
000005FB                         L214:	; if_else_bb88
                                 ;     582         }
                                 ;     583     }
                                 ;     584     else
                                 ;     585     {
                                 ;     586         /* Set message mailbox buffer Standard ID. Put only the lower 11 bit in the SID. */
                                 ;     587         can_block_p->MB[mbox_nr].ID.BIT.SID = (frame_p->id & SID_MASK);
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",587
000005FB A98A                    		MOV.L 1CH[R0], R2
000005FD EC2E                    		MOV.L [R2], R14
000005FF 762EFF07                		AND #07FFH, R14
00000603 6D2E                    		SHLL #12H, R14
00000605 EC1F                    		MOV.L [R1], R15
00000607 742FFFFF03E0            		AND #0E003FFFFH, R15
0000060D 57EF                    		OR R14, R15
0000060F E31F                    		MOV.L R15, [R1]
00000611                         L215:	; if_else_bb88.split
                                 ;     588 
                                 ;     589         /* Always set IDE to 0 (unless mixed mode and extended frame as above). */
                                 ;     590         can_block_p->MB[mbox_nr].ID.BIT.IDE = 0;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",590
00000611 AA01                    		MOV.L 20H[R0], R1
00000613 6C41                    		SHLL #04H, R1
00000615 06890102                		ADD 08H[R0].L, R1
00000619 EC1E                    		MOV.L [R1], R14
0000061B 7BFE                    		BCLR #1FH, R14
0000061D E31E                    		MOV.L R14, [R1]
0000061F                         L216:	; if_break_bb123
                                 ;     591     }
                                 ;     592 
                                 ;     593     /* Set the Data Length Code */
                                 ;     594     can_block_p->MB[mbox_nr].DLC.BIT.DLC = frame_p->dlc;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",594
0000061F AA01                    		MOV.L 20H[R0], R1
00000621 6C41                    		SHLL #04H, R1
00000623 06890102                		ADD 08H[R0].L, R1
00000627 A98A                    		MOV.L 1CH[R0], R2
00000629 B122                    		MOVU.B 04H[R2], R2
0000062B 7543F0                  		MOV.L #000000F0H, R3
0000062E 511305                  		AND 05H[R1].UB, R3
00000631 64F2                    		AND #0FH, R2
00000633 5723                    		OR R2, R3
00000635 811B                    		MOV.B R3, 05H[R1]
00000637                         L217:	; if_break_bb123.split
                                 ;     595     
                                 ;     596     /* Frame select: Data frame = 0, Remote = 1 */
                                 ;     597     if (frame_type == REMOTE_FRAME)
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",597
00000637 AA01                    		MOV.L 20H[R0], R1
00000639 6C41                    		SHLL #04H, R1
0000063B 06890102                		ADD 08H[R0].L, R1
0000063F A982                    		MOV.L 18H[R0], R2
00000641 6112                    		CMP #01H, R2
00000643 18                   S  		BNE L219
00000644                         L218:	; if_then_bb145
                                 ;     598     {
                                 ;     599         can_block_p->MB[mbox_nr].ID.BIT.RTR = 1;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",599
00000644 EC1E                    		MOV.L [R1], R14
00000646 79EE                    		BSET #1EH, R14
00000648 E31E                    		MOV.L R14, [R1]
0000064A 08                   S  		BRA L220
0000064B                         L219:	; if_else_bb160
                                 ;     600     }
                                 ;     601     else
                                 ;     602     { 
                                 ;     603         can_block_p->MB[mbox_nr].ID.BIT.RTR = 0;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",603
0000064B EC1E                    		MOV.L [R1], R14
0000064D 7BEE                    		BCLR #1EH, R14
0000064F E31E                    		MOV.L R14, [R1]
00000651                         L220:	; if_break_bb175
                                 ;     604     }
                                 ;     605       
                                 ;     606     /* Copy frame data into mailbox */
                                 ;     607     for (i = 0; ((i < frame_p->dlc) && (i<8)); i++)
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",607
00000651 3E0300                  		MOV.L #00000000H, 0CH[R0]
00000654 2Err                 B  		BRA L222
00000656                         L221:	; bb176
                                 ;     608     {
                                 ;     609         can_block_p->MB[mbox_nr].DATA[i] = frame_p->data[i];
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",609
00000656 AA02                    		MOV.L 20H[R0], R2
00000658 6C42                    		SHLL #04H, R2
0000065A 4B21                    		ADD R2, R1
0000065C A88A                    		MOV.L 0CH[R0], R2
0000065E 4B21                    		ADD R2, R1
00000660 06890207                		ADD 1CH[R0].L, R2
00000664 C5210506                		MOV.B 05H[R2], 06H[R1]
00000668 A889                    		MOV.L 0CH[R0], R1
0000066A 6211                    		ADD #01H, R1
0000066C A089                    		MOV.L R1, 0CH[R0]
0000066E                         L222:	; bb194
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",607
0000066E A989                    		MOV.L 1CH[R0], R1
00000670 B111                    		MOVU.B 04H[R1], R1
00000672 06850103                		CMP 0CH[R0].L, R1
00000676 25rr                    		BLEU L225
00000678                         L223:	; bb202
00000678 A889                    		MOV.L 0CH[R0], R1
0000067A 6171                    		CMP #07H, R1
0000067C 24rr                    		BGTU L225
0000067E                         L224:	; bb206
0000067E F80601                  		MOV.L #00000001H, [R0]
00000681 08                   S  		BRA L226
00000682                         L225:	; bb207
00000682 F80600                  		MOV.L #00000000H, [R0]
00000685                         L226:	; bb208
00000685 EC01                    		MOV.L [R0], R1
00000687 6101                    		CMP #00H, R1
00000689 A881                    		MOV.L 08H[R0], R1
0000068B 21rr                    		BNE L221
0000068D                         L227:	; bb213
                                 ;     610     }
                                 ;     611     /**********************/
                                 ;     612 
                                 ;     613     #ifndef USE_CAN_POLL
                                 ;     614         /* Interrupt enable the mailbox */
                                 ;     615         can_block_p->MIER |= (bit_set[mbox_nr]);
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",615
0000068D FBE2rrrrrrrr            		MOV.L #__$bit_set, R14
00000693 AA02                    		MOV.L 20H[R0], R2
00000695 FE62EE                  		MOV.L [R2,R14], R14
00000698 06951E8B                		OR 022CH[R1].L, R14
0000069C E71E8B                  		MOV.L R14, 022CH[R1]
0000069F                         L228:	; bb213.split
                                 ;     616     #endif
                                 ;     617 
                                 ;     618     R_CAN_Tx(ch_nr, mbox_nr);
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",618
0000069F AA02                    		MOV.L 20H[R0], R2
000006A1 AA09                    		MOV.L 24H[R0], R1
000006A3 39rrrr               W  		BSR _R_CAN_Tx
000006A6                         L229:	; bb213.split7
                                 ;     619     
                                 ;     620     return api_status;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",620
000006A6 E5000401                		MOV.L 10H[R0], 04H[R0]
000006AA                         L230:	; bb226
000006AA A809                    		MOV.L 04H[R0], R1
000006AC A109                    		MOV.L R1, 14H[R0]
                                 ;     621 } /* end R_CAN_TxSet() */
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",621
000006AE 6712                    		RTSD #48H
000006B0                         _R_CAN_TxSetXid:
                                 		.STACK	_R_CAN_TxSetXid=44
                                 ;     622 
                                 ;     623 /*******************************************************************************
                                 ;     624 Function Name:  R_CAN_TxSetXid
                                 ;     625 Description:    Set up a CAN mailbox to transmit in extended ID mode.
                                 ;     626                 Uses temporary copy of the can_frame data structure to set the 
                                 ;     627                 MSB of the frame ID field to serve as a flag to indicate extended 
                                 ;     628                 ID mode, then calls the regular R_CAN_TxSet() function passing 
                                 ;     629                 along all the parameters.
                                 ;     630 Arguments:      Channel nr.
                                 ;     631                 Mailbox nr.
                                 ;     632                 frame_p - pointer to a data frame structure.
                                 ;     633                 remote - REMOTE_FRAME to send remote request, DATA_FRAME for 
                                 ;     634                 sending normal dataframe.
                                 ;     635 Return value:   R_CAN_OK                The mailbox was set up for transmission.
                                 ;     636                 R_CAN_SW_BAD_MBX        Bad mailbox number.
                                 ;     637                 R_CAN_BAD_CH_NR         The channel number does not exist.
                                 ;     638                 R_CAN_BAD_ACTION_TYPE   No such action type exists for this 
                                 ;     639                                         function.
                                 ;     640 *******************************************************************************/
                                 ;     641 uint32_t R_CAN_TxSetXid(const uint32_t     ch_nr,
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",641
000006B0 7100D8                  		ADD #0FFFFFFD8H, R0
000006B3 A209                    		MOV.L R1, 24H[R0]
000006B5 A202                    		MOV.L R2, 20H[R0]
000006B7 A18B                    		MOV.L R3, 1CH[R0]
000006B9 A184                    		MOV.L R4, 18H[R0]
000006BB 754310                  		MOV.L #00000010H, R3
000006BE 710104                  		ADD #04H, R0, R1
                                 ;     642                         const uint32_t     mbox_nr,
                                 ;     643                         can_frame_t*       frame_p,
                                 ;     644                         const uint32_t     frame_type)
                                 ;     645 {
                                 ;     646     can_frame_t temp_frame;
                                 ;     647     uint32_t    api_status;
                                 ;     648     
                                 ;     649     /* Copy the user frame to a temporary frame to which we add the Xid bit,
                                 ;     650     so that 29-bit ID will be used by R_CAN_TxSet(). The original frame is left
                                 ;     651     untouched (in case user later wants to send the same frame with standard ID). */
                                 ;     652     memcpy(&temp_frame, frame_p, sizeof(can_frame_t));
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",652
000006C1 A98A                    		MOV.L 1CH[R0], R2
000006C3 7F8F                    		SMOVF
000006C5                         L232:	; entry.split
                                 ;     653 
                                 ;     654     temp_frame.id |= XID_MASK;    /* Set XID flag bit set in ID field */
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",654
000006C5 A809                    		MOV.L 04H[R0], R1
000006C7 7431000000E0            		OR #0E0000000H, R1
000006CD A009                    		MOV.L R1, 04H[R0]
000006CF                         L233:	; entry.split1
                                 ;     655     api_status = R_CAN_TxSet(ch_nr, mbox_nr, (can_frame_t*)&temp_frame, frame_type);
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",655
000006CF A984                    		MOV.L 18H[R0], R4
000006D1 AA02                    		MOV.L 20H[R0], R2
000006D3 AA09                    		MOV.L 24H[R0], R1
000006D5 710304                  		ADD #04H, R0, R3
000006D8 39rrrr               W  		BSR _R_CAN_TxSet
000006DB E301                    		MOV.L R1, [R0]
000006DD                         L234:	; entry.split2
                                 ;     656            
                                 ;     657     return api_status; 
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",657
000006DD EC01                    		MOV.L [R0], R1
000006DF A109                    		MOV.L R1, 14H[R0]
000006E1                         L235:	; entry.split3
                                 ;     658 }/* end R_CAN_TxSetXid() */
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",658
000006E1 670A                    		RTSD #28H
000006E3                         _R_CAN_Tx:
                                 		.STACK	_R_CAN_Tx=72
                                 ;     659                         
                                 ;     660 
                                 ;     661 /*******************************************************************************
                                 ;     662 Function Name:  R_CAN_Tx
                                 ;     663 Description:    Starts actual message transmission onto the CAN bus.
                                 ;     664 Parameters:     Channel nr.
                                 ;     665                 Mailbox nr.
                                 ;     666 Return value:   R_CAN_OK            The mailbox was set to transmit a previously 
                                 ;     667                                     configured mailbox.
                                 ;     668                 R_CAN_SW_BAD_MBX    Bad mailbox number.
                                 ;     669                 R_CAN_BAD_CH_NR     The channel number does not exist.
                                 ;     670                 R_CAN_SW_SET_TX_TMO Waiting for previous transmission to finish 
                                 ;     671                                     timed out.
                                 ;     672                 R_CAN_SW_SET_RX_TMO Waiting for previous reception to complete 
                                 ;     673                                     timed out.
                                 ;     674 *******************************************************************************/
                                 ;     675 uint32_t R_CAN_Tx(const uint32_t ch_nr, const uint32_t mbox_nr)
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",675
000006E3 7100BC                  		ADD #0FFFFFFBCH, R0
000006E6 A109                    		MOV.L R1, 14H[R0]
000006E8 A102                    		MOV.L R2, 10H[R0]
                                 ;     676 {
                                 ;     677     uint32_t api_status = R_CAN_OK;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",677
000006EA 3E0200                  		MOV.L #00000000H, 08H[R0]
000006ED                         L237:	; entry.split
                                 ;     678     volatile struct st_can __evenaccess * can_block_p;
                                 ;     679     
                                 ;     680     CHECK_MBX_NR
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",680
000006ED A901                    		MOV.L 10H[R0], R1
000006EF 755120                  		CMP #20H, R1
000006F2 23rr                    		BLTU L239
000006F4                         L238:	; if_then_bb
000006F4 F80640                  		MOV.L #00000040H, [R0]
000006F7 38rrrr               W  		BRA L275
000006FA                         L239:	; if_break_bb
                                 ;     681 
                                 ;     682     if (ch_nr == 0)
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",682
000006FA A909                    		MOV.L 14H[R0], R1
000006FC 6101                    		CMP #00H, R1
000006FE 3Brrrr               W  		BNE L274
00000701                         L240:	; if_then_bb12
                                 ;     683     {
                                 ;     684         can_block_p = (struct st_can __evenaccess *) 0x90200;        /* Point to CAN0 peripheral block. */
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",684
00000701 F90E01000209            		MOV.L #00090200H, 04H[R0]
00000707                         L241:	; if_then_bb12.split
                                 ;     685     }
                                 ;     686     else
                                 ;     687     {
                                 ;     688         return R_CAN_BAD_CH_NR;        /* Channel does not exist for this MCU. */
                                 ;     689     }
                                 ;     690 
                                 ;     691     /* Wait for any previous transmission to complete. */
                                 ;     692     api_status = R_CAN_WaitTxRx(ch_nr, mbox_nr);
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",692
00000707 A901                    		MOV.L 10H[R0], R1
00000709 E500050D                		MOV.L 14H[R0], 34H[R0]
0000070D A301                    		MOV.L R1, 30H[R0]
0000070F                         L242:	; if_then_bb12.split17
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1157
0000070F 3E0A00                  		MOV.L #00000000H, 28H[R0]
00000712                         L243:	; if_then_bb12.split18
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1158
00000712 F90A090020              		MOV.L #00002000H, 24H[R0]
00000717                         L244:	; if_then_bb12.split19
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1161
00000717 AB01                    		MOV.L 30H[R0], R1
00000719 755120                  		CMP #20H, R1
0000071C 23rr                    		BLTU L246
0000071E                         L245:	; if_then_bb.i
0000071E 3E0740                  		MOV.L #00000040H, 1CH[R0]
00000721 38rrrr               W  		BRA L266
00000724                         L246:	; if_break_bb.i
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1162
00000724 AB09                    		MOV.L 34H[R0], R1
00000726 6101                    		CMP #00H, R1
00000728 21rr                    		BNE L249
0000072A                         L247:	; if_then_bb13.i
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1164
0000072A F90E08000209            		MOV.L #00090200H, 20H[R0]
00000730                         L248:	; if_then_bb13.i.split
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1172
00000730 AA01                    		MOV.L 20H[R0], R1
00000732 0689010C                		ADD 30H[R0].L, R1
00000736 754EFF                  		MOV.L #000000FFH, R14
00000739 521E2006                		AND 0620H[R1].UB, R14
0000073D 687E                    		SHLR #07H, R14
0000073F 610E                    		CMP #00H, R14
00000741 18                   S  		BNE L250
00000742 2Err                 B  		BRA L257
00000744                         L249:	; if_else_bb.i
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1168
00000744 3E0720                  		MOV.L #00000020H, 1CH[R0]
00000747 2Err                 B  		BRA L266
00000749                         L250:	; bb34.i
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1174
00000749 AA01                    		MOV.L 20H[R0], R1
0000074B 0689010C                		ADD 30H[R0].L, R1
0000074F F6102006                		BTST #00H, 0620H[R1].B
00000753 21rr                    		BNE L253
00000755                         L251:	; bb51.i
00000755 AA09                    		MOV.L 24H[R0], R1
00000757 6011                    		SUB #01H, R1
00000759 A209                    		MOV.L R1, 24H[R0]
0000075B 6101                    		CMP #00H, R1
0000075D 10                   S  		BEQ L253
0000075E                         L252:	; bb57.i
0000075E 3E0601                  		MOV.L #00000001H, 18H[R0]
00000761 08                   S  		BRA L254
00000762                         L253:	; bb58.i
00000762 3E0600                  		MOV.L #00000000H, 18H[R0]
00000765                         L254:	; bb59.i
00000765 A981                    		MOV.L 18H[R0], R1
00000767 6101                    		CMP #00H, R1
00000769 21rr                    		BNE L250
0000076B                         L255:	; bb64.i
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1178
0000076B AA09                    		MOV.L 24H[R0], R1
0000076D 6101                    		CMP #00H, R1
0000076F 21rr                    		BNE L265
00000771                         L256:	; if_then_bb69.i
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1180
00000771 F90A0A0020              		MOV.L #00002000H, 28H[R0]
00000776 2Err                 B  		BRA L265
00000778                         L257:	; if_else_bb71.i
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1184
00000778 AA01                    		MOV.L 20H[R0], R1
0000077A 0689010C                		ADD 30H[R0].L, R1
0000077E F6162006                		BTST #06H, 0620H[R1].B
00000782 20rr                    		BEQ L265
00000784                         L258:	; bb91.i
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1186
00000784 AA01                    		MOV.L 20H[R0], R1
00000786 0689010C                		ADD 30H[R0].L, R1
0000078A 5A1E2006                		MOVU.B 0620H[R1], R14
0000078E 681E                    		SHLR #01H, R14
00000790 641E                    		AND #01H, R14
00000792 611E                    		CMP #01H, R14
00000794 21rr                    		BNE L261
00000796                         L259:	; bb108.i
00000796 AA09                    		MOV.L 24H[R0], R1
00000798 6011                    		SUB #01H, R1
0000079A A209                    		MOV.L R1, 24H[R0]
0000079C 6101                    		CMP #00H, R1
0000079E 10                   S  		BEQ L261
0000079F                         L260:	; bb114.i
0000079F 3E0601                  		MOV.L #00000001H, 18H[R0]
000007A2 08                   S  		BRA L262
000007A3                         L261:	; bb115.i
000007A3 3E0600                  		MOV.L #00000000H, 18H[R0]
000007A6                         L262:	; bb116.i
000007A6 A981                    		MOV.L 18H[R0], R1
000007A8 6101                    		CMP #00H, R1
000007AA 21rr                    		BNE L258
000007AC                         L263:	; bb121.i
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1190
000007AC AA09                    		MOV.L 24H[R0], R1
000007AE 6101                    		CMP #00H, R1
000007B0 18                   S  		BNE L265
000007B1                         L264:	; if_then_bb126.i
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1192
000007B1 F90A0A0040              		MOV.L #00004000H, 28H[R0]
000007B6                         L265:	; if_break_bb129.i
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1195
000007B6 E5000A07                		MOV.L 28H[R0], 1CH[R0]
000007BA                         L266:	; _$R_CAN_WaitTxRx.exit
000007BA A989                    		MOV.L 1CH[R0], R1
000007BC A289                    		MOV.L R1, 2CH[R0]
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1196
000007BE A081                    		MOV.L R1, 08H[R0]
000007C0                         L267:	; _$R_CAN_WaitTxRx.exit.split
                                 ;     693 
                                 ;     694     /* Clear SentData flag since we are about to send anew. */
                                 ;     695     CanClearSentData(ch_nr, mbox_nr);
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",695
000007C0 A901                    		MOV.L 10H[R0], R1
000007C2 E5000510                		MOV.L 14H[R0], 40H[R0]
000007C6 A389                    		MOV.L R1, 3CH[R0]
000007C8                         L268:	; _$R_CAN_WaitTxRx.exit.split20
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",806
000007C8 AC01                    		MOV.L 40H[R0], R1
000007CA 6101                    		CMP #00H, R1
000007CC 21rr                    		BNE L272
000007CE                         L269:	; if_then_bb.i16
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",808
000007CE F90E0E000209            		MOV.L #00090200H, 38H[R0]
000007D4                         L270:	; if_then_bb.i16.split
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",819
000007D4 AB81                    		MOV.L 38H[R0], R1
000007D6 0689010F                		ADD 3CH[R0].L, R1
000007DA FA14200600              		MOV.B #00H, 0620H[R1]
000007DF                         L271:	; if_then_bb.i16.split21
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",820
000007DF AB81                    		MOV.L 38H[R0], R1
000007E1 0689010F                		ADD 3CH[R0].L, R1
000007E5 FA14200600              		MOV.B #00H, 0620H[R1]
000007EA                         L272:	; _$CanClearSentData.exit
                                 ;     696     
                                 ;     697     /* Set TrmReq bit to "1" */
                                 ;     698 	can_block_p->MCTL[mbox_nr].BIT.TX.TRMREQ = 1;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",698
000007EA A809                    		MOV.L 04H[R0], R1
000007EC 06890104                		ADD 10H[R0].L, R1
000007F0 F2172006                		BSET #07H, 0620H[R1].B
000007F4                         L273:	; _$CanClearSentData.exit.split
                                 ;     699     
                                 ;     700     return api_status;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",700
000007F4 E10002                  		MOV.L 08H[R0], [R0]
000007F7 08                   S  		BRA L275
000007F8                         L274:	; if_else_bb
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",688
000007F8 F80620                  		MOV.L #00000020H, [R0]
000007FB                         L275:	; bb32
000007FB EC01                    		MOV.L [R0], R1
000007FD A089                    		MOV.L R1, 0CH[R0]
                                 ;     701 }/* end R_CAN_Tx() */
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",701
000007FF 6711                    		RTSD #44H
00000801                         _R_CAN_TxCheck:
                                 		.STACK	_R_CAN_TxCheck=40
                                 ;     702 
                                 ;     703 /*****************************************************************************
                                 ;     704 Name:           R_CAN_TxCheck
                                 ;     705 Parameters:     Channel nr.
                                 ;     706                 Mailbox nr.
                                 ;     707 Description:    Use to check a mailbox for a successful data frame transmission.
                                 ;     708                 Primarily used when polling to check that message was sent, so 
                                 ;     709                 that the next in series of messages can be sent. To do this when 
                                 ;     710                 using CAN interrupts, this function can be called to check which 
                                 ;     711                 mailbox caused the interrupt.
                                 ;     712 Return value:   R_CAN_OK            Transmission was completed successfully.
                                 ;     713                 R_CAN_SW_BAD_MBX    Bad mailbox number.
                                 ;     714                 R_CAN_BAD_CH_NR     The channel number does not exist.
                                 ;     715                 R_CAN_MSGLOST        Message was overwritten or lost.
                                 ;     716                 R_CAN_NO_SENTDATA    No message was sent.
                                 ;     717 *****************************************************************************/
                                 ;     718 uint32_t R_CAN_TxCheck(const uint32_t ch_nr, const uint32_t mbox_nr)
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",718
00000801 7100DC                  		ADD #0FFFFFFDCH, R0
00000804 A109                    		MOV.L R1, 14H[R0]
00000806 A102                    		MOV.L R2, 10H[R0]
                                 ;     719 {
                                 ;     720     uint32_t api_status = R_CAN_OK;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",720
00000808 3E0200                  		MOV.L #00000000H, 08H[R0]
0000080B                         L277:	; entry.split
                                 ;     721     volatile struct st_can __evenaccess * can_block_p;
                                 ;     722     
                                 ;     723     CHECK_MBX_NR
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",723
0000080B A901                    		MOV.L 10H[R0], R1
0000080D 755120                  		CMP #20H, R1
00000810 23rr                    		BLTU L279
00000812                         L278:	; if_then_bb
00000812 F80640                  		MOV.L #00000040H, [R0]
00000815 2Err                 B  		BRA L290
00000817                         L279:	; if_break_bb
                                 ;     724     if (ch_nr == 0)
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",724
00000817 A909                    		MOV.L 14H[R0], R1
00000819 6101                    		CMP #00H, R1
0000081B 21rr                    		BNE L282
0000081D                         L280:	; if_then_bb12
                                 ;     725     {
                                 ;     726         can_block_p = (struct st_can __evenaccess *) 0x90200;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",726
0000081D F90E01000209            		MOV.L #00090200H, 04H[R0]
00000823                         L281:	; if_then_bb12.split
                                 ;     727     }
                                 ;     728     else
                                 ;     729     {
                                 ;     730         return R_CAN_BAD_CH_NR;
                                 ;     731     }
                                 ;     732 
                                 ;     733     if (can_block_p->MCTL[mbox_nr].BIT.TX.SENTDATA == 0)
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",733
00000823 A809                    		MOV.L 04H[R0], R1
00000825 06890104                		ADD 10H[R0].L, R1
00000829 F6102006                		BTST #00H, 0620H[R1].B
0000082D 10                   S  		BEQ L283
0000082E 2Err                 B  		BRA L284
00000830                         L282:	; if_else_bb
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",730
00000830 F80620                  		MOV.L #00000020H, [R0]
00000833 2Err                 B  		BRA L290
00000835                         L283:	; if_then_bb32
                                 ;     734     {
                                 ;     735         api_status = R_CAN_NO_SENTDATA;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",735
00000835 3E0208                  		MOV.L #00000008H, 08H[R0]
00000838 2Err                 B  		BRA L289
0000083A                         L284:	; if_else_bb33
                                 ;     736     }
                                 ;     737     else
                                 ;     738     {
                                 ;     739         CanClearSentData(ch_nr, mbox_nr);        /* Clear SentData flag. */
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",739
0000083A A901                    		MOV.L 10H[R0], R1
0000083C E5000508                		MOV.L 14H[R0], 20H[R0]
00000840 A189                    		MOV.L R1, 1CH[R0]
00000842                         L285:	; if_else_bb33.split
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",806
00000842 AA01                    		MOV.L 20H[R0], R1
00000844 6101                    		CMP #00H, R1
00000846 21rr                    		BNE L289
00000848                         L286:	; if_then_bb.i
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",808
00000848 F90E06000209            		MOV.L #00090200H, 18H[R0]
0000084E                         L287:	; if_then_bb.i.split
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",819
0000084E A981                    		MOV.L 18H[R0], R1
00000850 06890107                		ADD 1CH[R0].L, R1
00000854 FA14200600              		MOV.B #00H, 0620H[R1]
00000859                         L288:	; if_then_bb.i.split1
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",820
00000859 A981                    		MOV.L 18H[R0], R1
0000085B 06890107                		ADD 1CH[R0].L, R1
0000085F FA14200600              		MOV.B #00H, 0620H[R1]
00000864                         L289:	; if_break_bb36
                                 ;     740     }
                                 ;     741 
                                 ;     742     return api_status;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",742
00000864 E10002                  		MOV.L 08H[R0], [R0]
00000867                         L290:	; bb39
00000867 EC01                    		MOV.L [R0], R1
00000869 A089                    		MOV.L R1, 0CH[R0]
                                 ;     743 }/* end R_CAN_TxCheck() */
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",743
0000086B 6709                    		RTSD #24H
0000086D                         _R_CAN_TxStopMsg:
                                 		.STACK	_R_CAN_TxStopMsg=36
                                 ;     744 
                                 ;     745 /*****************************************************************************
                                 ;     746 Name:            R_CAN_TxStopMsg
                                 ;     747 Parameters:        Channel nr.
                                 ;     748                 Mailbox nr.
                                 ;     749 Description:      Stop a mailbox that has been asked to transmit a frame. If the 
                                 ;     750                 message was not stopped, R_CAN_SW_ABORT_ERR is returned. Note 
                                 ;     751                 that the cause of this could be that the message was already sent. 
                                 ;     752 Return value:     R_CAN_OK            Action completed successfully.
                                 ;     753                 R_CAN_SW_BAD_MBX    Bad mailbox number.
                                 ;     754                 R_CAN_BAD_CH_NR     The channel number does not exist.
                                 ;     755                 R_CAN_SW_ABORT_ERR    Waiting for an abort timed out.
                                 ;     756 *****************************************************************************/
                                 ;     757 uint32_t R_CAN_TxStopMsg(const uint32_t ch_nr, const uint32_t mbox_nr)
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",757
0000086D 7100E0                  		ADD #0FFFFFFE0H, R0
00000870 A189                    		MOV.L R1, 1CH[R0]
00000872 A182                    		MOV.L R2, 18H[R0]
                                 ;     758 {
                                 ;     759     uint32_t api_status = R_CAN_OK;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",759
00000874 3E0400                  		MOV.L #00000000H, 10H[R0]
00000877                         L292:	; entry.split
                                 ;     760     uint32_t can_tmo_cnt = MAX_CAN_SW_DELAY;   
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",760
00000877 F90A030020              		MOV.L #00002000H, 0CH[R0]
0000087C                         L293:	; entry.split1
                                 ;     761     volatile struct st_can __evenaccess * can_block_p;
                                 ;     762     
                                 ;     763     CHECK_MBX_NR
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",763
0000087C A981                    		MOV.L 18H[R0], R1
0000087E 755120                  		CMP #20H, R1
00000881 23rr                    		BLTU L295
00000883                         L294:	; if_then_bb
00000883 3E0140                  		MOV.L #00000040H, 04H[R0]
00000886 2Err                 B  		BRA L309
00000888                         L295:	; if_break_bb
                                 ;     764     if (ch_nr == 0)
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",764
00000888 A989                    		MOV.L 1CH[R0], R1
0000088A 6101                    		CMP #00H, R1
0000088C 21rr                    		BNE L299
0000088E                         L296:	; if_then_bb13
                                 ;     765     {
                                 ;     766         can_block_p = (struct st_can __evenaccess *) 0x90200;        /* Point to CAN0 peripheral block. */
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",766
0000088E F90E02000209            		MOV.L #00090200H, 08H[R0]
00000894                         L297:	; if_then_bb13.split
                                 ;     767     }
                                 ;     768     else
                                 ;     769     {
                                 ;     770         return R_CAN_BAD_CH_NR;        /* Channel does not exist for this MCU. */
                                 ;     771     }
                                 ;     772     
                                 ;     773     /* Clear message mailbox control register. Setting TRMREQ to 0 should abort. Do a byte-write to avoid read-modify-write with HW writing another bit inbet
                                 ;     774      * Do it twice since "Bits SENTDATA and TRMREQ cannot be set to 0 simultaneously." */
                                 ;     775     can_block_p->MCTL[mbox_nr].BYTE = 0;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",775
00000894 A881                    		MOV.L 08H[R0], R1
00000896 06890106                		ADD 18H[R0].L, R1
0000089A FA14200600              		MOV.B #00H, 0620H[R1]
0000089F                         L298:	; if_then_bb13.split2
                                 ;     776     can_block_p->MCTL[mbox_nr].BYTE = 0;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",776
0000089F A881                    		MOV.L 08H[R0], R1
000008A1 06890106                		ADD 18H[R0].L, R1
000008A5 FA14200600              		MOV.B #00H, 0620H[R1]
000008AA 08                   S  		BRA L300
000008AB                         L299:	; if_else_bb
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",770
000008AB 3E0120                  		MOV.L #00000020H, 04H[R0]
000008AE 2Err                 B  		BRA L309
000008B0                         L300:	; bb29
                                 ;     777 
                                 ;     778     /* Wait for abort. */
                                 ;     779     while ((can_block_p->MCTL[mbox_nr].BIT.TX.TRMABT) && DEC_CHK_CAN_SW_TMR)
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",779
000008B0 A881                    		MOV.L 08H[R0], R1
000008B2 06890106                		ADD 18H[R0].L, R1
000008B6 F6122006                		BTST #02H, 0620H[R1].B
000008BA 20rr                    		BEQ L303
000008BC                         L301:	; bb46
000008BC A889                    		MOV.L 0CH[R0], R1
000008BE 6011                    		SUB #01H, R1
000008C0 A089                    		MOV.L R1, 0CH[R0]
000008C2 6101                    		CMP #00H, R1
000008C4 10                   S  		BEQ L303
000008C5                         L302:	; bb52
000008C5 F80601                  		MOV.L #00000001H, [R0]
000008C8 08                   S  		BRA L304
000008C9                         L303:	; bb53
000008C9 F80600                  		MOV.L #00000000H, [R0]
000008CC                         L304:	; bb54
000008CC EC01                    		MOV.L [R0], R1
000008CE 6101                    		CMP #00H, R1
000008D0 21rr                    		BNE L300
000008D2                         L305:	; bb59
                                 ;     780     {
                                 ;     781     }
                                 ;     782 
                                 ;     783     if (can_tmo_cnt == 0)
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",783
000008D2 A889                    		MOV.L 0CH[R0], R1
000008D4 6101                    		CMP #00H, R1
000008D6 18                   S  		BNE L307
000008D7                         L306:	; if_then_bb64
                                 ;     784     {
                                 ;     785         api_status = R_CAN_SW_ABORT_ERR;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",785
000008D7 F90E04008000            		MOV.L #00008000H, 10H[R0]
000008DD                         L307:	; if_break_bb65
                                 ;     786     }
                                 ;     787     
                                 ;     788     /* Clear abort flag. Do a byte-write to avoid read-modify-write with HW writing another bit inbetween. */
                                 ;     789     can_block_p->MCTL[mbox_nr].BYTE = 0;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",789
000008DD A881                    		MOV.L 08H[R0], R1
000008DF 06890106                		ADD 18H[R0].L, R1
000008E3 FA14200600              		MOV.B #00H, 0620H[R1]
000008E8                         L308:	; if_break_bb65.split
                                 ;     790     
                                 ;     791     return api_status;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",791
000008E8 E5000401                		MOV.L 10H[R0], 04H[R0]
000008EC                         L309:	; bb74
000008EC A809                    		MOV.L 04H[R0], R1
000008EE A109                    		MOV.L R1, 14H[R0]
                                 ;     792 }/* end R_CAN_TxStopMsg() */
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",792
000008F0 6708                    		RTSD #20H
000008F2                         _R_CAN_RxSet:
                                 		.STACK	_R_CAN_RxSet=68
                                 ;     793 
                                 ;     794 /*****************************************************************************
                                 ;     795 Name:            CanClearSentData
                                 ;     796 Parameters:        Channel nr.
                                 ;     797                 Mailbox nr.
                                 ;     798 Description:      Use in poll mode for checking successful data frame transmission.
                                 ;     799 Return value:     CAN API code (CAN_R_CAN_OK if mailbox has sent.)
                                 ;     800 *****************************************************************************/
                                 ;     801 #pragma inline(CanClearSentData)
                                 ;     802 static void CanClearSentData(const uint32_t ch_nr, const uint32_t mbox_nr)
                                 ;     803 { 
                                 ;     804     volatile struct st_can __evenaccess * can_block_p;
                                 ;     805     
                                 ;     806     if (ch_nr == 0)
                                 ;     807     {
                                 ;     808         can_block_p = (struct st_can __evenaccess *) 0x90200;        /* Point to CAN0 peripheral block. */
                                 ;     809     }
                                 ;     810     else
                                 ;     811     {
                                 ;     812         return;        /* Channel does not exist for this MCU. */
                                 ;     813     }
                                 ;     814 
                                 ;     815     /* Clear SENTDATA.
                                 ;     816      * Do a byte-write to avoid read-modify-write with HW writing another bit inbetween. See HW manual footnote.
                                 ;     817      * TRMREQ must be set to 0 (or will send again).
                                 ;     818      * Do it twice since "Bits SENTDATA and TRMREQ cannot be set to 0 simultaneously." */
                                 ;     819      can_block_p->MCTL[mbox_nr].BYTE = 0;
                                 ;     820      can_block_p->MCTL[mbox_nr].BYTE = 0;
                                 ;     821     
                                 ;     822 }/* end CanClearSentData() */   
                                 ;     823 
                                 ;     824 /*******************************************************************************
                                 ;     825 Function Name:  R_CAN_RxSet
                                 ;     826 Description:    Set up a mailbox to receive. The API sets up a given mailbox to 
                                 ;     827                 receive dataframes with the given CAN ID. Incoming data frames 
                                 ;     828                 with the same ID will be stored in the mailbox. 
                                 ;     829 Parameters:     ch_nr
                                 ;     830                 Mailbox nr.
                                 ;     831                 Frame ID value
                                 ;     832                 remote - REMOTE_FRAME to listen for remote requests, DATA_FRAME
                                 ;     833                  for receiving normal dataframes.
                                 ;     834 Return value:     R_CAN_OK            Action completed successfully.
                                 ;     835                 R_CAN_SW_BAD_MBX    Bad mailbox number.
                                 ;     836                 R_CAN_BAD_CH_NR     The channel number does not exist.
                                 ;     837                 R_CAN_SW_SET_TX_TMO    Waiting for previous transmission to finish 
                                 ;     838                                     timed out.
                                 ;     839                 R_CAN_SW_SET_RX_TMO    Waiting for previous reception to complete 
                                 ;     840                                     timed out.
                                 ;     841 *******************************************************************************/
                                 ;     842 uint32_t R_CAN_RxSet(const uint32_t     ch_nr, 
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",842
000008F2 7100C0                  		ADD #0FFFFFFC0H, R0
000008F5 A189                    		MOV.L R1, 1CH[R0]
000008F7 A182                    		MOV.L R2, 18H[R0]
000008F9 A10B                    		MOV.L R3, 14H[R0]
000008FB A104                    		MOV.L R4, 10H[R0]
                                 ;     843                      const uint32_t     mbox_nr, 
                                 ;     844                      const uint32_t     id,
                                 ;     845                      const uint32_t     frame_type)
                                 ;     846 {
                                 ;     847     uint32_t api_status = R_CAN_OK;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",847
000008FD 3E0200                  		MOV.L #00000000H, 08H[R0]
00000900                         L311:	; entry.split
                                 ;     848     volatile struct st_can __evenaccess * can_block_p;
                                 ;     849     
                                 ;     850     CHECK_MBX_NR
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",850
00000900 A981                    		MOV.L 18H[R0], R1
00000902 755120                  		CMP #20H, R1
00000905 23rr                    		BLTU L313
00000907                         L312:	; if_then_bb
00000907 F80640                  		MOV.L #00000040H, [R0]
0000090A 38rrrr               W  		BRA L358
0000090D                         L313:	; if_break_bb
                                 ;     851     if (ch_nr == 0)
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",851
0000090D A989                    		MOV.L 1CH[R0], R1
0000090F 6101                    		CMP #00H, R1
00000911 3Brrrr               W  		BNE L344
00000914                         L314:	; if_then_bb14
                                 ;     852     {
                                 ;     853         can_block_p = (struct st_can __evenaccess *) 0x90200;        /* Point to CAN0 peripheral block. */
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",853
00000914 F90E01000209            		MOV.L #00090200H, 04H[R0]
0000091A                         L315:	; if_then_bb14.split
                                 ;     854     }
                                 ;     855     else
                                 ;     856     {
                                 ;     857         return R_CAN_BAD_CH_NR;        /* Channel does not exist for this MCU. */
                                 ;     858     }
                                 ;     859 
                                 ;     860     /* Wait for any previous transmission/reception to complete. */
                                 ;     861     api_status = R_CAN_WaitTxRx(ch_nr, mbox_nr);
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",861
0000091A A981                    		MOV.L 18H[R0], R1
0000091C E500070F                		MOV.L 1CH[R0], 3CH[R0]
00000920 A381                    		MOV.L R1, 38H[R0]
00000922                         L316:	; if_then_bb14.split1
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1157
00000922 3E0C00                  		MOV.L #00000000H, 30H[R0]
00000925                         L317:	; if_then_bb14.split2
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1158
00000925 F90A0B0020              		MOV.L #00002000H, 2CH[R0]
0000092A                         L318:	; if_then_bb14.split3
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1161
0000092A AB81                    		MOV.L 38H[R0], R1
0000092C 755120                  		CMP #20H, R1
0000092F 23rr                    		BLTU L320
00000931                         L319:	; if_then_bb.i
00000931 3E0940                  		MOV.L #00000040H, 24H[R0]
00000934 38rrrr               W  		BRA L340
00000937                         L320:	; if_break_bb.i
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1162
00000937 AB89                    		MOV.L 3CH[R0], R1
00000939 6101                    		CMP #00H, R1
0000093B 21rr                    		BNE L323
0000093D                         L321:	; if_then_bb13.i
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1164
0000093D F90E0A000209            		MOV.L #00090200H, 28H[R0]
00000943                         L322:	; if_then_bb13.i.split
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1172
00000943 AA81                    		MOV.L 28H[R0], R1
00000945 0689010E                		ADD 38H[R0].L, R1
00000949 754EFF                  		MOV.L #000000FFH, R14
0000094C 521E2006                		AND 0620H[R1].UB, R14
00000950 687E                    		SHLR #07H, R14
00000952 610E                    		CMP #00H, R14
00000954 18                   S  		BNE L324
00000955 2Err                 B  		BRA L331
00000957                         L323:	; if_else_bb.i
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1168
00000957 3E0920                  		MOV.L #00000020H, 24H[R0]
0000095A 2Err                 B  		BRA L340
0000095C                         L324:	; bb34.i
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1174
0000095C AA81                    		MOV.L 28H[R0], R1
0000095E 0689010E                		ADD 38H[R0].L, R1
00000962 F6102006                		BTST #00H, 0620H[R1].B
00000966 21rr                    		BNE L327
00000968                         L325:	; bb51.i
00000968 AA89                    		MOV.L 2CH[R0], R1
0000096A 6011                    		SUB #01H, R1
0000096C A289                    		MOV.L R1, 2CH[R0]
0000096E 6101                    		CMP #00H, R1
00000970 10                   S  		BEQ L327
00000971                         L326:	; bb57.i
00000971 3E0801                  		MOV.L #00000001H, 20H[R0]
00000974 08                   S  		BRA L328
00000975                         L327:	; bb58.i
00000975 3E0800                  		MOV.L #00000000H, 20H[R0]
00000978                         L328:	; bb59.i
00000978 AA01                    		MOV.L 20H[R0], R1
0000097A 6101                    		CMP #00H, R1
0000097C 21rr                    		BNE L324
0000097E                         L329:	; bb64.i
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1178
0000097E AA89                    		MOV.L 2CH[R0], R1
00000980 6101                    		CMP #00H, R1
00000982 21rr                    		BNE L339
00000984                         L330:	; if_then_bb69.i
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1180
00000984 F90A0C0020              		MOV.L #00002000H, 30H[R0]
00000989 2Err                 B  		BRA L339
0000098B                         L331:	; if_else_bb71.i
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1184
0000098B AA81                    		MOV.L 28H[R0], R1
0000098D 0689010E                		ADD 38H[R0].L, R1
00000991 F6162006                		BTST #06H, 0620H[R1].B
00000995 20rr                    		BEQ L339
00000997                         L332:	; bb91.i
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1186
00000997 AA81                    		MOV.L 28H[R0], R1
00000999 0689010E                		ADD 38H[R0].L, R1
0000099D 5A1E2006                		MOVU.B 0620H[R1], R14
000009A1 681E                    		SHLR #01H, R14
000009A3 641E                    		AND #01H, R14
000009A5 611E                    		CMP #01H, R14
000009A7 21rr                    		BNE L335
000009A9                         L333:	; bb108.i
000009A9 AA89                    		MOV.L 2CH[R0], R1
000009AB 6011                    		SUB #01H, R1
000009AD A289                    		MOV.L R1, 2CH[R0]
000009AF 6101                    		CMP #00H, R1
000009B1 10                   S  		BEQ L335
000009B2                         L334:	; bb114.i
000009B2 3E0801                  		MOV.L #00000001H, 20H[R0]
000009B5 08                   S  		BRA L336
000009B6                         L335:	; bb115.i
000009B6 3E0800                  		MOV.L #00000000H, 20H[R0]
000009B9                         L336:	; bb116.i
000009B9 AA01                    		MOV.L 20H[R0], R1
000009BB 6101                    		CMP #00H, R1
000009BD 21rr                    		BNE L332
000009BF                         L337:	; bb121.i
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1190
000009BF AA89                    		MOV.L 2CH[R0], R1
000009C1 6101                    		CMP #00H, R1
000009C3 18                   S  		BNE L339
000009C4                         L338:	; if_then_bb126.i
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1192
000009C4 F90A0C0040              		MOV.L #00004000H, 30H[R0]
000009C9                         L339:	; if_break_bb129.i
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1195
000009C9 E5000C09                		MOV.L 30H[R0], 24H[R0]
000009CD                         L340:	; _$R_CAN_WaitTxRx.exit
000009CD AA09                    		MOV.L 24H[R0], R1
000009CF A309                    		MOV.L R1, 34H[R0]
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1196
000009D1 A081                    		MOV.L R1, 08H[R0]
000009D3                         L341:	; _$R_CAN_WaitTxRx.exit.split
                                 ;     862 
                                 ;     863     /* Interrupt disable the mailbox. */
                                 ;     864     can_block_p->MIER &= ~(bit_set[mbox_nr]);
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",864
000009D3 FBE2rrrrrrrr            		MOV.L #__$bit_set, R14
000009D9 A981                    		MOV.L 18H[R0], R1
000009DB FE61EE                  		MOV.L [R1,R14], R14
000009DE 7E0E                    		NOT R14
000009E0 A809                    		MOV.L 04H[R0], R1
000009E2 06911E8B                		AND 022CH[R1].L, R14
000009E6 E71E8B                  		MOV.L R14, 022CH[R1]
000009E9                         L342:	; _$R_CAN_WaitTxRx.exit.split4
                                 ;     865 
                                 ;     866     /* Clear message mailbox control register. */
                                 ;     867     can_block_p->MCTL[mbox_nr].BYTE = 0;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",867
000009E9 A809                    		MOV.L 04H[R0], R1
000009EB 06890106                		ADD 18H[R0].L, R1
000009EF FA14200600              		MOV.B #00H, 0620H[R1]
000009F4                         L343:	; _$R_CAN_WaitTxRx.exit.split5
                                 ;     868 
                                 ;     869     /*** Set Mailbox ID based on ID mode ***/
                                 ;     870     /* Check for XID flag bit set in ID argument */
                                 ;     871     if (id & XID_MASK)
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",871
000009F4 A981                    		MOV.L 18H[R0], R1
000009F6 6C41                    		SHLL #04H, R1
000009F8 06890101                		ADD 04H[R0].L, R1
000009FC FBE2000000E0            		MOV.L #0E0000000H, R14
00000A02 06A10C0E05              		TST 14H[R0].L, R14
00000A07 18                   S  		BNE L345
00000A08 2Err                 B  		BRA L346
00000A0A                         L344:	; if_else_bb
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",857
00000A0A F80620                  		MOV.L #00000020H, [R0]
00000A0D 38rrrr               W  		BRA L358
00000A10                         L345:	; if_then_bb38
                                 ;     872     {
                                 ;     873         /* Set message mailbox buffer Extended ID, masking off temporary XID flag bit. */
                                 ;     874         can_block_p->MB[mbox_nr].ID.LONG = (id & (~XID_MASK));
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",874
00000A10 A90A                    		MOV.L 14H[R0], R2
00000A12 7422FFFFFF1F            		AND #1FFFFFFFH, R2
00000A18 E312                    		MOV.L R2, [R1]
00000A1A 2Err                 B  		BRA L347
00000A1C                         L346:	; if_else_bb48
                                 ;     875     }     
                                 ;     876     else    
                                 ;     877     {
                                 ;     878         /* Set message mailbox buffer Standard ID */ 
                                 ;     879         can_block_p->MB[mbox_nr].ID.BIT.SID = (id & SID_MASK); /* Now put the lower 11 bit in the SID. */
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",879
00000A1C A90A                    		MOV.L 14H[R0], R2
00000A1E EC1E                    		MOV.L [R1], R14
00000A20 742EFFFF03E0            		AND #0E003FFFFH, R14
00000A26 7622FF07                		AND #07FFH, R2
00000A2A 6D22                    		SHLL #12H, R2
00000A2C 572E                    		OR R2, R14
00000A2E E31E                    		MOV.L R14, [R1]
00000A30                         L347:	; if_break_bb67
                                 ;     880     }
                                 ;     881 
                                 ;     882     /* Set IDE bit depending on if want to receive SID or XID frame. Only for mixed mode. */
                                 ;     883     if (can_block_p->CTLR.BIT.IDFM == MIXED_ID_MODE)
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",883
00000A30 A809                    		MOV.L 04H[R0], R1
00000A32 5A1E4106                		MOVU.B 0641H[R1], R14
00000A36 681E                    		SHLR #01H, R14
00000A38 643E                    		AND #03H, R14
00000A3A 612E                    		CMP #02H, R14
00000A3C 21rr                    		BNE L351
00000A3E                         L348:	; if_then_bb81
                                 ;     884     {
                                 ;     885         if (id & XID_MASK)
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",885
00000A3E A981                    		MOV.L 18H[R0], R1
00000A40 6C41                    		SHLL #04H, R1
00000A42 06890101                		ADD 04H[R0].L, R1
00000A46 FBE2000000E0            		MOV.L #0E0000000H, R14
00000A4C 06A10C0E05              		TST 14H[R0].L, R14
00000A51 10                   S  		BEQ L350
00000A52                         L349:	; if_then_bb87
                                 ;     886         {
                                 ;     887             can_block_p->MB[mbox_nr].ID.BIT.IDE = 1;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",887
00000A52 EC1E                    		MOV.L [R1], R14
00000A54 79FE                    		BSET #1FH, R14
00000A56 E31E                    		MOV.L R14, [R1]
00000A58 2Err                 B  		BRA L352
00000A5A                         L350:	; if_else_bb102
                                 ;     888         }
                                 ;     889         else
                                 ;     890         {
                                 ;     891             can_block_p->MB[mbox_nr].ID.BIT.IDE = 0;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",891
00000A5A EC1E                    		MOV.L [R1], R14
00000A5C 7BFE                    		BCLR #1FH, R14
00000A5E E31E                    		MOV.L R14, [R1]
00000A60 2Err                 B  		BRA L352
00000A62                         L351:	; if_else_bb118
                                 ;     892         }
                                 ;     893     }
                                 ;     894     else
                                 ;     895     {
                                 ;     896         /* When not MIXED mode, IDE should be written with 0. */
                                 ;     897         can_block_p->MB[mbox_nr].ID.BIT.IDE = 0;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",897
00000A62 A981                    		MOV.L 18H[R0], R1
00000A64 6C41                    		SHLL #04H, R1
00000A66 06890101                		ADD 04H[R0].L, R1
00000A6A EC1E                    		MOV.L [R1], R14
00000A6C 7BFE                    		BCLR #1FH, R14
00000A6E E31E                    		MOV.L R14, [R1]
00000A70                         L352:	; if_break_bb133
                                 ;     898     }
                                 ;     899     
                                 ;     900     /* Dataframe = 0, Remote frame = 1    */
                                 ;     901     if (frame_type == REMOTE_FRAME)
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",901
00000A70 A981                    		MOV.L 18H[R0], R1
00000A72 6C41                    		SHLL #04H, R1
00000A74 06890101                		ADD 04H[R0].L, R1
00000A78 A902                    		MOV.L 10H[R0], R2
00000A7A 6112                    		CMP #01H, R2
00000A7C 18                   S  		BNE L354
00000A7D                         L353:	; if_then_bb138
                                 ;     902     {
                                 ;     903         can_block_p->MB[mbox_nr].ID.BIT.RTR = 1;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",903
00000A7D EC1E                    		MOV.L [R1], R14
00000A7F 79EE                    		BSET #1EH, R14
00000A81 E31E                    		MOV.L R14, [R1]
00000A83 08                   S  		BRA L355
00000A84                         L354:	; if_else_bb153
                                 ;     904     }
                                 ;     905     else 
                                 ;     906     {    
                                 ;     907         can_block_p->MB[mbox_nr].ID.BIT.RTR = 0;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",907
00000A84 EC1E                    		MOV.L [R1], R14
00000A86 7BEE                    		BCLR #1EH, R14
00000A88 E31E                    		MOV.L R14, [R1]
00000A8A                         L355:	; if_break_bb168
                                 ;     908     }
                                 ;     909  
                                 ;     910     #if (USE_CAN_POLL == 0)
                                 ;     911         /* Interrupt enable the mailbox */
                                 ;     912         can_block_p->MIER |= (bit_set[mbox_nr]);
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",912
00000A8A FBE2rrrrrrrr            		MOV.L #__$bit_set, R14
00000A90 A981                    		MOV.L 18H[R0], R1
00000A92 FE61EE                  		MOV.L [R1,R14], R14
00000A95 A809                    		MOV.L 04H[R0], R1
00000A97 06951E8B                		OR 022CH[R1].L, R14
00000A9B E71E8B                  		MOV.L R14, 022CH[R1]
00000A9E                         L356:	; if_break_bb168.split
                                 ;     913     #endif
                                 ;     914 
                                 ;     915     /* Request to receive the frame with RecReq bit. */
                                 ;     916     can_block_p->MCTL[mbox_nr].BYTE = 0x40;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",916
00000A9E A809                    		MOV.L 04H[R0], R1
00000AA0 06890106                		ADD 18H[R0].L, R1
00000AA4 FA14200640              		MOV.B #40H, 0620H[R1]
00000AA9                         L357:	; if_break_bb168.split6
                                 ;     917 
                                 ;     918     return api_status;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",918
00000AA9 E10002                  		MOV.L 08H[R0], [R0]
00000AAC                         L358:	; bb184
00000AAC EC01                    		MOV.L [R0], R1
00000AAE A089                    		MOV.L R1, 0CH[R0]
                                 ;     919 } /* end R_CAN_RxSet() */
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",919
00000AB0 6710                    		RTSD #40H
00000AB2                         _R_CAN_RxSetXid:
                                 		.STACK	_R_CAN_RxSetXid=24
                                 ;     920 
                                 ;     921 
                                 ;     922 /*******************************************************************************
                                 ;     923 Function Name:  R_CAN_RxSetXid
                                 ;     924 Description:    Calls R_CAN_RxSet() after setting a bit in the id parameter to
                                 ;     925                 serve as an extended ID mode flag.          
                                 ;     926 Parameters:     ch_nr
                                 ;     927                 Mailbox nr.
                                 ;     928                 Frame ID value
                                 ;     929                 remote - REMOTE_FRAME to listen for remote requests, DATA_FRAME
                                 ;     930                  for receiving normal dataframes.
                                 ;     931 Return value:     value returned by R_CAN_RxSet is passed on.
                                 ;     932 *******************************************************************************/
                                 ;     933 uint32_t R_CAN_RxSetXid(const uint32_t     ch_nr, 
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",933
00000AB2 7100EC                  		ADD #0FFFFFFECH, R0
00000AB5 A101                    		MOV.L R1, 10H[R0]
00000AB7 A08A                    		MOV.L R2, 0CH[R0]
00000AB9 A083                    		MOV.L R3, 08H[R0]
00000ABB A00C                    		MOV.L R4, 04H[R0]
                                 ;     934                         const uint32_t     mbox_nr, 
                                 ;     935                         uint32_t           xid,
                                 ;     936                         const uint32_t     frame_type)
                                 ;     937 {   
                                 ;     938     /* Add the Xid bit so that 29-bit ID will be used by R_CAN_RxSet(). */
                                 ;     939     return R_CAN_RxSet(ch_nr, mbox_nr, (xid | XID_MASK) , frame_type);
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",939
00000ABD A883                    		MOV.L 08H[R0], R3
00000ABF A88A                    		MOV.L 0CH[R0], R2
00000AC1 A901                    		MOV.L 10H[R0], R1
00000AC3 7433000000E0            		OR #0E0000000H, R3
00000AC9 39rrrr               W  		BSR _R_CAN_RxSet
00000ACC E301                    		MOV.L R1, [R0]
00000ACE                         L360:	; entry.split
                                 ;     940 } /* end R_CAN_RxSetXid() */
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",940
00000ACE 6705                    		RTSD #14H
00000AD0                         _R_CAN_RxPoll:
                                 		.STACK	_R_CAN_RxPoll=36
                                 ;     941 
                                 ;     942 /*******************************************************************************
                                 ;     943 Function Name:    R_CAN_RxPoll
                                 ;     944 Description:    Checks for received message in mailbox.
                                 ;     945 Parameters:        Channel nr.
                                 ;     946                 Mailbox nr.
                                 ;     947 Return value:    R_CAN_OK            There is a message waiting.
                                 ;     948                 R_CAN_NOT_OK        No message waiting.
                                 ;     949                 R_CAN_RXPOLL_TMO    Message pending but timed out.
                                 ;     950                 R_CAN_SW_BAD_MBX    Bad mailbox number.
                                 ;     951                 R_CAN_BAD_CH_NR     The channel number does not exist.
                                 ;     952 *******************************************************************************/
                                 ;     953 uint32_t R_CAN_RxPoll(const uint32_t ch_nr, const uint32_t mbox_nr)
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",953
00000AD0 7100E0                  		ADD #0FFFFFFE0H, R0
00000AD3 A189                    		MOV.L R1, 1CH[R0]
00000AD5 A182                    		MOV.L R2, 18H[R0]
                                 ;     954 {
                                 ;     955     uint32_t api_status = R_CAN_NOT_OK;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",955
00000AD7 3E0401                  		MOV.L #00000001H, 10H[R0]
00000ADA                         L362:	; entry.split
                                 ;     956     uint32_t poll_delay = MAX_CAN_REG_POLLTIME;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",956
00000ADA 3E0304                  		MOV.L #00000004H, 0CH[R0]
00000ADD                         L363:	; entry.split1
                                 ;     957     volatile struct st_can __evenaccess * can_block_p;
                                 ;     958     
                                 ;     959     CHECK_MBX_NR
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",959
00000ADD A981                    		MOV.L 18H[R0], R1
00000ADF 755120                  		CMP #20H, R1
00000AE2 23rr                    		BLTU L365
00000AE4                         L364:	; if_then_bb
00000AE4 3E0140                  		MOV.L #00000040H, 04H[R0]
00000AE7 2Err                 B  		BRA L379
00000AE9                         L365:	; if_break_bb
                                 ;     960     if (ch_nr == 0)
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",960
00000AE9 A989                    		MOV.L 1CH[R0], R1
00000AEB 6101                    		CMP #00H, R1
00000AED 18                   S  		BNE L367
00000AEE                         L366:	; if_then_bb13
                                 ;     961     {
                                 ;     962         can_block_p = (struct st_can __evenaccess *) 0x90200;         /* Point to CAN0 peripheral block. */
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",962
00000AEE F90E02000209            		MOV.L #00090200H, 08H[R0]
00000AF4 08                   S  		BRA L369
00000AF5                         L367:	; if_else_bb
                                 ;     963     }
                                 ;     964     else
                                 ;     965     {
                                 ;     966         return R_CAN_BAD_CH_NR;        /* Channel does not exist for this MCU. */
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",966
00000AF5 3E0120                  		MOV.L #00000020H, 04H[R0]
00000AF8 2Err                 B  		BRA L379
00000AFA                         L368:	; bb16
                                 ;     967     }
                                 ;     968     
                                 ;     969     /* Wait if new data is currently being received. */
                                 ;     970     while ((can_block_p->MCTL[mbox_nr].BIT.RX.INVALDATA) && poll_delay)
                                 ;     971     {
                                 ;     972         poll_delay--;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",972
00000AFA 6011                    		SUB #01H, R1
00000AFC A089                    		MOV.L R1, 0CH[R0]
00000AFE                         L369:	; bb19
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",970
00000AFE A881                    		MOV.L 08H[R0], R1
00000B00 06890106                		ADD 18H[R0].L, R1
00000B04 F6112006                		BTST #01H, 0620H[R1].B
00000B08 10                   S  		BEQ L372
00000B09                         L370:	; bb36
00000B09 A889                    		MOV.L 0CH[R0], R1
00000B0B 6101                    		CMP #00H, R1
00000B0D 10                   S  		BEQ L372
00000B0E                         L371:	; bb40
00000B0E F80601                  		MOV.L #00000001H, [R0]
00000B11 08                   S  		BRA L373
00000B12                         L372:	; bb41
00000B12 F80600                  		MOV.L #00000000H, [R0]
00000B15                         L373:	; bb42
00000B15 EC01                    		MOV.L [R0], R1
00000B17 6101                    		CMP #00H, R1
00000B19 A889                    		MOV.L 0CH[R0], R1
00000B1B 21rr                    		BNE L368
00000B1D                         L374:	; bb47
                                 ;     973     }
                                 ;     974 
                                 ;     975     if (poll_delay == 0)
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",975
00000B1D 6101                    		CMP #00H, R1
00000B1F 18                   S  		BNE L376
00000B20                         L375:	; if_then_bb52
                                 ;     976     {
                                 ;     977         api_status = R_CAN_RXPOLL_TMO;     /* Still updating mailbox. Come back later. */
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",977
00000B20 3E0410                  		MOV.L #00000010H, 10H[R0]
00000B23 2Err                 B  		BRA L378
00000B25                         L376:	; if_else_bb53
                                 ;     978     }
                                 ;     979     else /* Message received? */
                                 ;     980     {
                                 ;     981     	/* If message received, tell user. */
                                 ;     982         if (can_block_p->MCTL[mbox_nr].BIT.RX.NEWDATA == 1)
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",982
00000B25 A881                    		MOV.L 08H[R0], R1
00000B27 06890106                		ADD 18H[R0].L, R1
00000B2B 5A1E2006                		MOVU.B 0620H[R1], R14
00000B2F 641E                    		AND #01H, R14
00000B31 611E                    		CMP #01H, R14
00000B33 18                   S  		BNE L378
00000B34                         L377:	; if_then_bb71
                                 ;     983         {
                                 ;     984             api_status = R_CAN_OK;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",984
00000B34 3E0400                  		MOV.L #00000000H, 10H[R0]
00000B37                         L378:	; if_break_bb73
                                 ;     985         }
                                 ;     986     }
                                 ;     987     return api_status;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",987
00000B37 E5000401                		MOV.L 10H[R0], 04H[R0]
00000B3B                         L379:	; bb76
00000B3B A809                    		MOV.L 04H[R0], R1
00000B3D A109                    		MOV.L R1, 14H[R0]
                                 ;     988 }/* end R_CAN_RxPoll() */
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",988
00000B3F 6708                    		RTSD #20H
00000B41                         _R_CAN_RxRead:
                                 		.STACK	_R_CAN_RxRead=36
                                 ;     989 
                                 ;     990 /*******************************************************************************
                                 ;     991 Function Name:  R_CAN_RxRead
                                 ;     992 Parameters:        Mailbox nr.
                                 ;     993                 frame_p: Data frame structure
                                 ;     994 Description:    Call from CAN receive interrupt. Copies received data from 
                                 ;     995                 message mailbox to memory.
                                 ;     996 Return value:    R_CAN_OK            There is a message waiting.
                                 ;     997                 R_CAN_SW_BAD_MBX    Bad mailbox number.
                                 ;     998                 R_CAN_BAD_CH_NR     The channel number does not exist.
                                 ;     999                 R_CAN_MSGLOST      Message was overwritten or lost.
                                 ;    1000 *******************************************************************************/
                                 ;    1001 uint32_t R_CAN_RxRead( const uint32_t           ch_nr,
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1001
00000B41 7100E0                  		ADD #0FFFFFFE0H, R0
00000B44 A189                    		MOV.L R1, 1CH[R0]
00000B46 A182                    		MOV.L R2, 18H[R0]
00000B48 A10B                    		MOV.L R3, 14H[R0]
                                 ;    1002                        const uint32_t           mbox_nr,
                                 ;    1003                        can_frame_t * const  frame_p )
                                 ;    1004 {
                                 ;    1005     uint32_t i;
                                 ;    1006     uint32_t api_status = R_CAN_OK;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1006
00000B4A 3E0200                  		MOV.L #00000000H, 08H[R0]
00000B4D                         L381:	; entry.split
                                 ;    1007     volatile struct st_can __evenaccess * can_block_p;
                                 ;    1008     
                                 ;    1009     CHECK_MBX_NR
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1009
00000B4D A981                    		MOV.L 18H[R0], R1
00000B4F 755120                  		CMP #20H, R1
00000B52 23rr                    		BLTU L383
00000B54                         L382:	; if_then_bb
00000B54 F80640                  		MOV.L #00000040H, [R0]
00000B57 38rrrr               W  		BRA L401
00000B5A                         L383:	; if_break_bb
                                 ;    1010     if (ch_nr == 0)
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1010
00000B5A A989                    		MOV.L 1CH[R0], R1
00000B5C 6101                    		CMP #00H, R1
00000B5E 21rr                    		BNE L386
00000B60                         L384:	; if_then_bb14
                                 ;    1011     {
                                 ;    1012         can_block_p = (struct st_can __evenaccess *) 0x90200; /* Point to CAN0 peripheral block. */
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1012
00000B60 F90E01000209            		MOV.L #00090200H, 04H[R0]
00000B66                         L385:	; if_then_bb14.split
                                 ;    1013     }
                                 ;    1014     else
                                 ;    1015     {
                                 ;    1016         return R_CAN_BAD_CH_NR;    /* Channel does not exist for this MCU. */
                                 ;    1017     }
                                 ;    1018     
                                 ;    1019     /* EXT_ID_MODE */
                                 ;    1020     /* Copy received data from message mailbox to memory. The IDE bit is only valid in mixed mode. */
                                 ;    1021     if (can_block_p->CTLR.BIT.IDFM == EXT_ID_MODE)
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1021
00000B66 A809                    		MOV.L 04H[R0], R1
00000B68 5A1E4106                		MOVU.B 0641H[R1], R14
00000B6C 681E                    		SHLR #01H, R14
00000B6E 643E                    		AND #03H, R14
00000B70 611E                    		CMP #01H, R14
00000B72 10                   S  		BEQ L387
00000B73 2Err                 B  		BRA L388
00000B75                         L386:	; if_else_bb
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1016
00000B75 F80620                  		MOV.L #00000020H, [R0]
00000B78 38rrrr               W  		BRA L401
00000B7B                         L387:	; if_then_bb30
                                 ;    1022     {
                                 ;    1023         /* Get mailbox Extended ID, keeping only lower 29 bits. */
                                 ;    1024         frame_p->id = (can_block_p->MB[mbox_nr].ID.LONG & (~XID_MASK));
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1024
00000B7B A981                    		MOV.L 18H[R0], R1
00000B7D 6C41                    		SHLL #04H, R1
00000B7F 06890101                		ADD 04H[R0].L, R1
00000B83 A90A                    		MOV.L 14H[R0], R2
00000B85 EC1E                    		MOV.L [R1], R14
00000B87 742EFFFFFF1F            		AND #1FFFFFFFH, R14
00000B8D E32E                    		MOV.L R14, [R2]
00000B8F 2Err                 B  		BRA L393
00000B91                         L388:	; if_else_bb42
                                 ;    1025     }
                                 ;    1026     /* MIXED_ID_MODE */
                                 ;    1027     else if (can_block_p->CTLR.BIT.IDFM == MIXED_ID_MODE)
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1027
00000B91 A809                    		MOV.L 04H[R0], R1
00000B93 5A1E4106                		MOVU.B 0641H[R1], R14
00000B97 681E                    		SHLR #01H, R14
00000B99 643E                    		AND #03H, R14
00000B9B 612E                    		CMP #02H, R14
00000B9D 21rr                    		BNE L392
00000B9F                         L389:	; if_then_bb56
                                 ;    1028     {
                                 ;    1029         if (can_block_p->MB[mbox_nr].ID.BIT.IDE == 1) /* Check for XID control bit set. */
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1029
00000B9F A981                    		MOV.L 18H[R0], R1
00000BA1 6C41                    		SHLL #04H, R1
00000BA3 06890101                		ADD 04H[R0].L, R1
00000BA7 EC1E                    		MOV.L [R1], R14
00000BA9 A981                    		MOV.L 18H[R0], R1
00000BAB 6C41                    		SHLL #04H, R1
00000BAD 06890101                		ADD 04H[R0].L, R1
00000BB1 69FE                    		SHLR #1FH, R14
00000BB3 611E                    		CMP #01H, R14
00000BB5 A90A                    		MOV.L 14H[R0], R2
00000BB7 21rr                    		BNE L391
00000BB9                         L390:	; if_then_bb73
                                 ;    1030         {
                                 ;    1031             /* Get mailbox Extended ID, keeping only lower 29 bits. */
                                 ;    1032             frame_p->id = (can_block_p->MB[mbox_nr].ID.LONG & (~XID_MASK));
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1032
00000BB9 EC1E                    		MOV.L [R1], R14
00000BBB 742EFFFFFF1F            		AND #1FFFFFFFH, R14
00000BC1 E32E                    		MOV.L R14, [R2]
00000BC3 2Err                 B  		BRA L393
00000BC5                         L391:	; if_else_bb85
                                 ;    1033         }
                                 ;    1034         else
                                 ;    1035         {
                                 ;    1036             /* Get only the lower 11 bits from the SID. */
                                 ;    1037             frame_p->id = can_block_p->MB[mbox_nr].ID.BIT.SID;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1037
00000BC5 EC1E                    		MOV.L [R1], R14
00000BC7 6C3E                    		SHLL #03H, R14
00000BC9 695E                    		SHLR #15H, R14
00000BCB E32E                    		MOV.L R14, [R2]
00000BCD 2Err                 B  		BRA L393
00000BCF                         L392:	; if_else_bb103
                                 ;    1038         }
                                 ;    1039     }
                                 ;    1040     /* STD_ID_MODE */
                                 ;    1041     else
                                 ;    1042     {
                                 ;    1043         /* Get lower 11 bits from SID. */
                                 ;    1044         frame_p->id = can_block_p->MB[mbox_nr].ID.BIT.SID;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1044
00000BCF A981                    		MOV.L 18H[R0], R1
00000BD1 6C41                    		SHLL #04H, R1
00000BD3 06890101                		ADD 04H[R0].L, R1
00000BD7 A90A                    		MOV.L 14H[R0], R2
00000BD9 EC1E                    		MOV.L [R1], R14
00000BDB 6C3E                    		SHLL #03H, R14
00000BDD 695E                    		SHLR #15H, R14
00000BDF E32E                    		MOV.L R14, [R2]
00000BE1                         L393:	; if_break_bb121
                                 ;    1045     }
                                 ;    1046 
                                 ;    1047     frame_p->dlc = (uint8_t)can_block_p->MB[mbox_nr].DLC.BIT.DLC;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1047
00000BE1 A981                    		MOV.L 18H[R0], R1
00000BE3 6C41                    		SHLL #04H, R1
00000BE5 06890101                		ADD 04H[R0].L, R1
00000BE9 A90A                    		MOV.L 14H[R0], R2
00000BEB B119                    		MOVU.B 05H[R1], R1
00000BED 64F1                    		AND #0FH, R1
00000BEF 8121                    		MOV.B R1, 04H[R2]
00000BF1                         L394:	; if_break_bb121.split
                                 ;    1048 
                                 ;    1049     for (i = 0; i < can_block_p->MB[mbox_nr].DLC.BIT.DLC; i++)
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1049
00000BF1 3E0300                  		MOV.L #00000000H, 0CH[R0]
00000BF4 2Err                 B  		BRA L396
00000BF6                         L395:	; bb137
                                 ;    1050     {
                                 ;    1051         frame_p->data[i] = can_block_p->MB[mbox_nr].DATA[i];
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1051
00000BF6 A981                    		MOV.L 18H[R0], R1
00000BF8 6C41                    		SHLL #04H, R1
00000BFA 06890101                		ADD 04H[R0].L, R1
00000BFE A88A                    		MOV.L 0CH[R0], R2
00000C00 4B21                    		ADD R2, R1
00000C02 06890205                		ADD 14H[R0].L, R2
00000C06 C5120605                		MOV.B 06H[R1], 05H[R2]
00000C0A A889                    		MOV.L 0CH[R0], R1
00000C0C 6211                    		ADD #01H, R1
00000C0E A089                    		MOV.L R1, 0CH[R0]
00000C10                         L396:	; bb155
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1049
00000C10 A981                    		MOV.L 18H[R0], R1
00000C12 6C41                    		SHLL #04H, R1
00000C14 06890101                		ADD 04H[R0].L, R1
00000C18 B119                    		MOVU.B 05H[R1], R1
00000C1A 64F1                    		AND #0FH, R1
00000C1C 06850103                		CMP 0CH[R0].L, R1
00000C20 24rr                    		BGTU L395
00000C22                         L397:	; bb174
                                 ;    1052     }
                                 ;    1053 
                                 ;    1054     /* Check if message was lost/overwritten. */
                                 ;    1055     if (can_block_p->MCTL[mbox_nr].BIT.RX.MSGLOST)
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1055
00000C22 A809                    		MOV.L 04H[R0], R1
00000C24 06890106                		ADD 18H[R0].L, R1
00000C28 F6122006                		BTST #02H, 0620H[R1].B
00000C2C 10                   S  		BEQ L399
00000C2D                         L398:	; if_then_bb192
                                 ;    1056     {
                                 ;    1057         api_status = R_CAN_MSGLOST;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1057
00000C2D 3E0204                  		MOV.L #00000004H, 08H[R0]
00000C30                         L399:	; if_break_bb193
                                 ;    1058         /* MSGLOST bit will be cleared below. */
                                 ;    1059     }
                                 ;    1060 
                                 ;    1061     /* Clear MSGLOST.
                                 ;    1062      * Also set NEWDATA to 0 since the mailbox was just emptied and start over with new RxPolls.
                                 ;    1063      * Do a byte-write to avoid read-modify-write with HW writing another bit inbetween. See HW manual footnote.*/
                                 ;    1064     can_block_p->MCTL[mbox_nr].BYTE = 0x40;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1064
00000C30 A809                    		MOV.L 04H[R0], R1
00000C32 06890106                		ADD 18H[R0].L, R1
00000C36 FA14200640              		MOV.B #40H, 0620H[R1]
00000C3B                         L400:	; if_break_bb193.split
                                 ;    1065     
                                 ;    1066     return api_status;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1066
00000C3B E10002                  		MOV.L 08H[R0], [R0]
00000C3E                         L401:	; bb202
00000C3E EC01                    		MOV.L [R0], R1
00000C40 A101                    		MOV.L R1, 10H[R0]
                                 ;    1067 }/* end R_CAN_RxRead() */
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1067
00000C42 6708                    		RTSD #20H
00000C44                         _R_CAN_RxSetMask:
                                 		.STACK	_R_CAN_RxSetMask=24
                                 ;    1068 
                                 ;    1069 /*******************************************************************************
                                 ;    1070 Function Name:  R_CAN_RxSetMask
                                 ;    1071 Description:    Set a CAN bus mask for specified mask register. Note that the 
                                 ;    1072                 MKIVLR register is used to disable the acceptance filtering 
                                 ;    1073                 function individually for each mailbox.
                                 ;    1074 Parameters:     ch_nr
                                 ;    1075                 mask_value. For each bit that is 1; corresponding SID bit
                                 ;    1076                                 is compared.
                                 ;    1077                 mbox_nr            0-31. The mailbox nr translates to mask_reg_nr:
                                 ;    1078                                 0 for mailboxes 0-3
                                 ;    1079                                 1 for mailboxes 4-7
                                 ;    1080                                 2 for mailboxes 8-11
                                 ;    1081                                 3 for mailboxes 12-15
                                 ;    1082                                 4 for mailboxes 16-19
                                 ;    1083                                 5 for mailboxes 20-23
                                 ;    1084                                 6 for mailboxes 24-27
                                 ;    1085                                 7 for mailboxes 28-31
                                 ;    1086 Return value:     -
                                 ;    1087 *******************************************************************************/
                                 ;    1088 void R_CAN_RxSetMask( const uint32_t ch_nr,
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1088
00000C44 7100EC                  		ADD #0FFFFFFECH, R0
00000C47 A101                    		MOV.L R1, 10H[R0]
00000C49 A08A                    		MOV.L R2, 0CH[R0]
00000C4B A083                    		MOV.L R3, 08H[R0]
                                 ;    1089                       const uint32_t mbox_nr,
                                 ;    1090                       const uint32_t mask_value)
                                 ;    1091 {
                                 ;    1092     volatile struct st_can __evenaccess * can_block_p;
                                 ;    1093     
                                 ;    1094     if (ch_nr == 0)
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1094
00000C4D A901                    		MOV.L 10H[R0], R1
00000C4F 6101                    		CMP #00H, R1
00000C51 3Brrrr               W  		BNE L414
00000C54                         L403:	; if_then_bb
                                 ;    1095     {
                                 ;    1096         can_block_p = (struct st_can __evenaccess *) 0x90200;/* Point to CAN0 peripheral block. */
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1096
00000C54 F90E01000209            		MOV.L #00090200H, 04H[R0]
00000C5A                         L404:	; if_then_bb.split
                                 ;    1097     }
                                 ;    1098     else
                                 ;    1099     {
                                 ;    1100         return; /* Channel does not exist for this MCU. */
                                 ;    1101     }
                                 ;    1102 
                                 ;    1103     /* Write to MKR0 to MKR7 in CAN reset mode or CAN halt mode. */
                                 ;    1104     R_CAN_Control(ch_nr, HALT_CANMODE);
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1104
00000C5A A901                    		MOV.L 10H[R0], R1
00000C5C 6652                    		MOV.L #00000005H, R2
00000C5E 39rrrr               W  		BSR _R_CAN_Control
00000C61                         L405:	; if_then_bb.split1
                                 ;    1105     
                                 ;    1106     /* Set mask for the group of mailboxes. */
                                 ;    1107     if ((can_block_p->CTLR.BIT.IDFM == EXT_ID_MODE) || (can_block_p->CTLR.BIT.IDFM == MIXED_ID_MODE))
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1107
00000C61 A809                    		MOV.L 04H[R0], R1
00000C63 5A1E4106                		MOVU.B 0641H[R1], R14
00000C67 681E                    		SHLR #01H, R14
00000C69 643E                    		AND #03H, R14
00000C6B 611E                    		CMP #01H, R14
00000C6D 20rr                    		BEQ L407
00000C6F                         L406:	; bb21
00000C6F A809                    		MOV.L 04H[R0], R1
00000C71 5A1E4106                		MOVU.B 0641H[R1], R14
00000C75 681E                    		SHLR #01H, R14
00000C77 643E                    		AND #03H, R14
00000C79 612E                    		CMP #02H, R14
00000C7B 18                   S  		BNE L408
00000C7C                         L407:	; bb34
00000C7C F80601                  		MOV.L #00000001H, [R0]
00000C7F 08                   S  		BRA L409
00000C80                         L408:	; bb35
00000C80 F80600                  		MOV.L #00000000H, [R0]
00000C83                         L409:	; bb36
00000C83 A889                    		MOV.L 0CH[R0], R1
00000C85 7521FC                  		AND #0FFFFFFFCH, R1
00000C88 06890101                		ADD 04H[R0].L, R1
00000C8C 72110002                		ADD #0200H, R1
00000C90 EC02                    		MOV.L [R0], R2
00000C92 6102                    		CMP #00H, R2
00000C94 20rr                    		BEQ L411
00000C96                         L410:	; if_then_bb41
                                 ;    1108     {
                                 ;    1109         /* Set XID 29-bit mask value in mask register. */
                                 ;    1110         can_block_p->MKR[mbox_nr/4].LONG = (mask_value & (~XID_MASK));
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1110
00000C96 A882                    		MOV.L 08H[R0], R2
00000C98 7422FFFFFF1F            		AND #1FFFFFFFH, R2
00000C9E E312                    		MOV.L R2, [R1]
00000CA0 2Err                 B  		BRA L412
00000CA2                         L411:	; if_else_bb51
                                 ;    1111     }
                                 ;    1112     else
                                 ;    1113     {
                                 ;    1114         /* Set SID 11-bit mask value in mask register. */
                                 ;    1115         can_block_p->MKR[mbox_nr/4].BIT.SID = mask_value;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1115
00000CA2 A882                    		MOV.L 08H[R0], R2
00000CA4 EC1E                    		MOV.L [R1], R14
00000CA6 742EFFFF03E0            		AND #0E003FFFFH, R14
00000CAC 6D22                    		SHLL #12H, R2
00000CAE 74220000FC1F            		AND #1FFC0000H, R2
00000CB4 572E                    		OR R2, R14
00000CB6 E31E                    		MOV.L R14, [R1]
00000CB8                         L412:	; if_break_bb69
                                 ;    1116     }
                                 ;    1117 
                                 ;    1118     /* Set mailbox mask to be used. (0 = mask VALID.) */
                                 ;    1119     can_block_p->MKIVLR &= ~(bit_set[mbox_nr]);
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1119
00000CB8 FBE2rrrrrrrr            		MOV.L #__$bit_set, R14
00000CBE A889                    		MOV.L 0CH[R0], R1
00000CC0 FE61EE                  		MOV.L [R1,R14], R14
00000CC3 7E0E                    		NOT R14
00000CC5 A809                    		MOV.L 04H[R0], R1
00000CC7 06911E8A                		AND 0228H[R1].L, R14
00000CCB E71E8A                  		MOV.L R14, 0228H[R1]
00000CCE                         L413:	; if_break_bb69.split
                                 ;    1120     
                                 ;    1121     R_CAN_Control(ch_nr, OPERATE_CANMODE);
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1121
00000CCE A901                    		MOV.L 10H[R0], R1
00000CD0 6662                    		MOV.L #00000006H, R2
00000CD2 39rrrr               W  		BSR _R_CAN_Control
00000CD5 6705                    		RTSD #14H
00000CD7                         L414:	; return
                                 ;    1122             
                                 ;    1123 }/* end R_CAN_RxSetMask() */
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1123
00000CD7 6705                    		RTSD #14H
00000CD9                         _R_CAN_CheckErr:
                                 		.STACK	_R_CAN_CheckErr=24
                                 ;    1124 
                                 ;    1125 /*****************************************************************************
                                 ;    1126 Name:           R_CAN_WaitTxRx
                                 ;    1127 
                                 ;    1128 Parameters:     Channel nr.
                                 ;    1129                 Mailbox nr.
                                 ;    1130 
                                 ;    1131 Description:    Wait for communicating mailbox to complete action. This is 
                                 ;    1132                 appropriate if a mailbox needs to be reconfigured to do some-
                                 ;    1133                 thing else, but the user wants any pending receive or transmit 
                                 ;    1134                 to finish.
                                 ;    1135                     Note that the function does not always wait. If the mailbox
                                 ;    1136                 is idle, it will not wait at all.
                                 ;    1137                     If you want to send in a hurry, use another mailbox, alter-
                                 ;    1138                 nate mailboxes, or even use the FIFO that can transmit/receive 
                                 ;    1139                 from four mailboxes. 
                                 ;    1140                     The max wait MAX_CAN_SW_DELAY is kind of superficial. "Ideal-
                                 ;    1141                 ly" you would wait as long as it takes for the previous frame to 
                                 ;    1142                 finish its transmit, but that may could cause the program to 
                                 ;    1143                 block a long time if the bus is busy. This would be bad espec-
                                 ;    1144                 ially if the system is not using an RTOS.
                                 ;    1145 
                                 ;    1146 Return value:   R_CAN_OK            There is a message waiting.
                                 ;    1147                 R_CAN_SW_BAD_MBX    Bad mailbox number.
                                 ;    1148                 R_CAN_BAD_CH_NR     The channel number does not exist.
                                 ;    1149                 R_CAN_SW_SET_TX_TMO    Waiting for previous transmission to finish 
                                 ;    1150                                     timed out.
                                 ;    1151                 R_CAN_SW_SET_RX_TMO    Waiting for previous reception to complete 
                                 ;    1152                                     timed out.
                                 ;    1153 *****************************************************************************/
                                 ;    1154 #pragma inline(R_CAN_WaitTxRx)
                                 ;    1155 static uint32_t R_CAN_WaitTxRx(const uint32_t ch_nr, const uint32_t mbox_nr)
                                 ;    1156 {
                                 ;    1157     uint32_t api_status = R_CAN_OK;
                                 ;    1158     uint32_t can_tmo_cnt = MAX_CAN_SW_DELAY;
                                 ;    1159     volatile struct st_can __evenaccess * can_block_p;
                                 ;    1160     
                                 ;    1161     CHECK_MBX_NR
                                 ;    1162     if (ch_nr == 0)
                                 ;    1163     {
                                 ;    1164         can_block_p = (struct st_can __evenaccess *) 0x90200;        /* Point to CAN0 peripheral block. */
                                 ;    1165     }
                                 ;    1166     else
                                 ;    1167     {
                                 ;    1168         return R_CAN_BAD_CH_NR;        /* Channel does not exist for this MCU. */
                                 ;    1169     }
                                 ;    1170 
                                 ;    1171     /* Wait for any previous transmission to complete. */
                                 ;    1172     if (can_block_p->MCTL[mbox_nr].BIT.TX.TRMREQ)
                                 ;    1173     {
                                 ;    1174         while ((can_block_p->MCTL[mbox_nr].BIT.TX.SENTDATA == 0) && DEC_CHK_CAN_SW_TMR) 
                                 ;    1175         {
                                 ;    1176         }
                                 ;    1177 
                                 ;    1178         if (can_tmo_cnt == 0) 
                                 ;    1179         {
                                 ;    1180             api_status = R_CAN_SW_SET_TX_TMO;
                                 ;    1181         }
                                 ;    1182     }
                                 ;    1183     /* Wait for any previous reception to complete. */
                                 ;    1184     else if (can_block_p->MCTL[mbox_nr].BIT.TX.RECREQ)    //Strange; but iodefine has TX here..
                                 ;    1185     {
                                 ;    1186         while ((can_block_p->MCTL[mbox_nr].BIT.RX.INVALDATA == 1) && DEC_CHK_CAN_SW_TMR) 
                                 ;    1187         {
                                 ;    1188         }
                                 ;    1189 
                                 ;    1190         if (can_tmo_cnt == 0) 
                                 ;    1191         {
                                 ;    1192             api_status = R_CAN_SW_SET_RX_TMO;
                                 ;    1193         }
                                 ;    1194     }
                                 ;    1195     return api_status;
                                 ;    1196 }/* end R_CAN_WaitTxRx() */
                                 ;    1197 
                                 ;    1198 /*******************************************************************************
                                 ;    1199 Function Name:  R_CAN_CheckErr
                                 ;    1200 Description:    Checks CAN peripheraol error state.
                                 ;    1201 Parameters:        -
                                 ;    1202 Return value:     0 = No error
                                 ;    1203                 1 = CAN is in error active state
                                 ;    1204                 2 = CAN is in error passive state
                                 ;    1205                 4 = CAN is in bus-off state
                                 ;    1206 *******************************************************************************/
                                 ;    1207 uint32_t R_CAN_CheckErr(const uint32_t    ch_nr)
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1207
00000CD9 7100EC                  		ADD #0FFFFFFECH, R0
00000CDC A101                    		MOV.L R1, 10H[R0]
                                 ;    1208 {
                                 ;    1209     uint32_t api_status = R_CAN_STATUS_ERROR_ACTIVE; /* Store return value */
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1209
00000CDE 3E0201                  		MOV.L #00000001H, 08H[R0]
00000CE1                         L416:	; entry.split
                                 ;    1210     volatile struct st_can __evenaccess * can_block_p;
                                 ;    1211     
                                 ;    1212     if (ch_nr == 0)
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1212
00000CE1 A901                    		MOV.L 10H[R0], R1
00000CE3 6101                    		CMP #00H, R1
00000CE5 21rr                    		BNE L419
00000CE7                         L417:	; if_then_bb
                                 ;    1213     {
                                 ;    1214         can_block_p = (struct st_can __evenaccess *) 0x90200;        /* Point to CAN0 peripheral block. */
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1214
00000CE7 F90E01000209            		MOV.L #00090200H, 04H[R0]
00000CED                         L418:	; if_then_bb.split
                                 ;    1215     }
                                 ;    1216     else
                                 ;    1217     {
                                 ;    1218         return R_CAN_BAD_CH_NR;        /* Channel does not exist for this MCU. */
                                 ;    1219     }
                                 ;    1220 
                                 ;    1221     /* Check CAN error state */
                                 ;    1222     if (can_block_p->STR.BIT.EST)
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1222
00000CED A809                    		MOV.L 04H[R0], R1
00000CEF 754EFF                  		MOV.L #000000FFH, R14
00000CF2 521E4306                		AND 0643H[R1].UB, R14
00000CF6 687E                    		SHLR #07H, R14
00000CF8 610E                    		CMP #00H, R14
00000CFA 18                   S  		BNE L420
00000CFB 2Err                 B  		BRA L424
00000CFD                         L419:	; if_else_bb
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1218
00000CFD F80620                  		MOV.L #00000020H, [R0]
00000D00 2Err                 B  		BRA L425
00000D02                         L420:	; if_then_bb19
                                 ;    1223     {
                                 ;    1224         /* Check error-passive state */
                                 ;    1225         if (can_block_p->STR.BIT.EPST)
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1225
00000D02 A809                    		MOV.L 04H[R0], R1
00000D04 F6134206                		BTST #03H, 0642H[R1].B
00000D08 10                   S  		BEQ L422
00000D09                         L421:	; if_then_bb33
                                 ;    1226         {
                                 ;    1227             api_status = R_CAN_STATUS_ERROR_PASSIVE;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1227
00000D09 3E0202                  		MOV.L #00000002H, 08H[R0]
00000D0C 2Err                 B  		BRA L424
00000D0E                         L422:	; if_else_bb34
                                 ;    1228         }
                                 ;    1229 
                                 ;    1230         /* Check bus-off state */
                                 ;    1231         else if (can_block_p->STR.BIT.BOST)
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1231
00000D0E A809                    		MOV.L 04H[R0], R1
00000D10 F6144206                		BTST #04H, 0642H[R1].B
00000D14 10                   S  		BEQ L424
00000D15                         L423:	; if_then_bb48
                                 ;    1232         {
                                 ;    1233             api_status = R_CAN_STATUS_BUSOFF;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1233
00000D15 3E0204                  		MOV.L #00000004H, 08H[R0]
00000D18                         L424:	; if_break_bb51
                                 ;    1234         }
                                 ;    1235     }
                                 ;    1236     
                                 ;    1237     return api_status;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1237
00000D18 E10002                  		MOV.L 08H[R0], [R0]
00000D1B                         L425:	; bb54
00000D1B EC01                    		MOV.L [R0], R1
00000D1D A089                    		MOV.L R1, 0CH[R0]
                                 ;    1238 } /* end R_CAN_CheckErr() */
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1238
00000D1F 6705                    		RTSD #14H
00000D21                         _R_CAN_SetBitrate:
                                 		.STACK	_R_CAN_SetBitrate=12
                                 ;    1239 
                                 ;    1240 /*******************************************************************************
                                 ;    1241 Function Name:  R_CAN_SetBitrate
                                 ;    1242 Description:    Sets clock speed and bit rate for CAN as defined in 
                                 ;    1243                 config.h.
                                 ;    1244 Parameters:     -
                                 ;    1245 Return value:     -
                                 ;    1246 *******************************************************************************/
                                 ;    1247 void R_CAN_SetBitrate(const uint32_t ch_nr)
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1247
00000D21 6080                    		SUB #08H, R0
00000D23 A009                    		MOV.L R1, 04H[R0]
                                 ;    1248 {    
                                 ;    1249     volatile struct st_can __evenaccess * can_block_p;
                                 ;    1250     
                                 ;    1251     if (ch_nr == 0)
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1251
00000D25 6101                    		CMP #00H, R1
00000D27 21rr                    		BNE L432
00000D29                         L427:	; if_then_bb
                                 ;    1252     {
                                 ;    1253         can_block_p = (struct st_can __evenaccess *) 0x90200;        /* Point to CAN0 peripheral block. */
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1253
00000D29 F80E000209              		MOV.L #00090200H, [R0]
00000D2E                         L428:	; if_then_bb.split
                                 ;    1254     }
                                 ;    1255     else
                                 ;    1256     {
                                 ;    1257         return;        /* Channel does not exist for this MCU. */
                                 ;    1258     }
                                 ;    1259 
                                 ;    1260     /* Set TSEG1, TSEG2 and SJW. */
                                 ;    1261     can_block_p->BCR.BIT.BRP   = CAN_BRP - 1;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1261
00000D2E EC01                    		MOV.L [R0], R1
00000D30 EE1E9101                		MOV.L 0644H[R1], R14
00000D34 773E000003              		OR #00030000H, R14
00000D39 742EFFFF03FC            		AND #0FC03FFFFH, R14
00000D3F EB1E9101                		MOV.L R14, 0644H[R1]
00000D43                         L429:	; if_then_bb.split1
                                 ;    1262     can_block_p->BCR.BIT.TSEG1 = CAN_TSEG1 - 1;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1262
00000D43 EC01                    		MOV.L [R0], R1
00000D45 EE1E9101                		MOV.L 0644H[R1], R14
00000D49 743E000000E0            		OR #0E0000000H, R14
00000D4F 7BCE                    		BCLR #1CH, R14
00000D51 EB1E9101                		MOV.L R14, 0644H[R1]
00000D55                         L430:	; if_then_bb.split2
                                 ;    1263     can_block_p->BCR.BIT.TSEG2 = CAN_TSEG2 - 1;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1263
00000D55 EC01                    		MOV.L [R0], R1
00000D57 EE1E9101                		MOV.L 0644H[R1], R14
00000D5B 763E0007                		OR #0700H, R14
00000D5F EB1E9101                		MOV.L R14, 0644H[R1]
00000D63                         L431:	; if_then_bb.split3
                                 ;    1264     can_block_p->BCR.BIT.SJW   = CAN_SJW - 1;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1264
00000D63 EC01                    		MOV.L [R0], R1
00000D65 EE1E9101                		MOV.L 0644H[R1], R14
00000D69 78CE                    		BSET #0CH, R14
00000D6B 7ADE                    		BCLR #0DH, R14
00000D6D EB1E9101                		MOV.L R14, 0644H[R1]
00000D71 6702                    		RTSD #08H
00000D73                         L432:	; return
                                 ;    1265 }/* end R_CAN_SetBitrate() */
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1265
00000D73 6702                    		RTSD #08H
00000D75                         __$R_CAN_ConfigCANinterrupts:
                                 		.STACK	__$R_CAN_ConfigCANinterrupts=12
                                 ;    1266 
                                 ;    1267 /**********************************************************************************
                                 ;    1268 Function Name:  R_CAN_ConfigCANinterrupts
                                 ;    1269 Description  :  Configuration of CAN interrupts.
                                 ;    1270                 
                                 ;    1271                 CAN0 interrupts:
                                 ;    1272                 Source    Name    Vector    Address        IER, BIT        IPR
                                 ;    1273                                 nr.        offset
                                 ;    1274                 ============================================================
                                 ;    1275                 CAN0     ERS0     56         00E0         IER07, IEN0        IPR18
                                 ;    1276                 "        RXF0     57         00E4         IER07, IEN1        "
                                 ;    1277                 "        TXM0     58         00E8         IER07, IEN2        "
                                 ;    1278                 "        RXM0     59         00EC         IER07, IEN3        "
                                 ;    1279                 "        TXM0     60         00F0         IER07, IEN4        "
                                 ;    1280 Parameters   :     -
                                 ;    1281 Return value :     -
                                 ;    1282 ***********************************************************************************/
                                 ;    1283 void R_CAN_ConfigCANinterrupts(const uint32_t ch_nr)
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1283
00000D75 6080                    		SUB #08H, R0
00000D77 A009                    		MOV.L R1, 04H[R0]
                                 ;    1284 {
                                 ;    1285     volatile struct st_can __evenaccess * can_block_p;
                                 ;    1286     
                                 ;    1287     if (ch_nr == 0)
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1287
00000D79 6101                    		CMP #00H, R1
00000D7B 21rr                    		BNE L445
00000D7D                         L434:	; if_then_bb
                                 ;    1288     {
                                 ;    1289         can_block_p = (struct st_can __evenaccess *) 0x90200;        /* Point to CAN0 peripheral block. */
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1289
00000D7D F80E000209              		MOV.L #00090200H, [R0]
00000D82                         L435:	; if_then_bb.split
                                 ;    1290     }
                                 ;    1291     else
                                 ;    1292     {
                                 ;    1293         return;        /* Channel does not exist for this MCU. */
                                 ;    1294     }
                                 ;    1295     
                                 ;    1296     if (ch_nr == 0)
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1296
00000D82 A809                    		MOV.L 04H[R0], R1
00000D84 6101                    		CMP #00H, R1
00000D86 21rr                    		BNE L445
00000D88                         L436:	; if_then_bb9
                                 ;    1297     {
                                 ;    1298         /* Mailbox interrupt enable registers. Disable interrupts for all slots. 
                                 ;    1299         They will be enabled individually by the API. */
                                 ;    1300         can_block_p->MIER = 0x00000000;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1300
00000D88 EC01                    		MOV.L [R0], R1
00000D8A F9168B00                		MOV.L #00000000H, 022CH[R1]
00000D8E                         L437:	; if_then_bb9.split
00000D8E FBEE077208              		MOV.L #00087207H, R14
                                 ;    1301 
                                 ;    1302 #if (USE_CAN_POLL == 0)
                                 ;    1303             /* Configure CAN Tx interrupt. */
                                 ;    1304             //ICU.IER[IER_CAN0_TXM0].BIT.IEN4 = 1;
                                 ;    1305             //ICU.IPR[IPR_CAN0_TXM0].BIT.IPR = 3;
                                 ;    1306             /* ..or use the macros! */
                                 ;    1307             IEN(CAN0, TXM0) = 1;    //1 = interrupt enabled.
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1307
00000D93 F0E4                    		BSET #04H, [R14].B
00000D95                         L438:	; if_then_bb9.split1
00000D95 FBEE187308              		MOV.L #00087318H, R14
                                 ;    1308             IPR(CAN0, TXM0) = CAN0_INT_LVL;    //priority
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1308
00000D9A 58EF                    		MOVU.B [R14], R15
00000D9C 781F                    		BSET #01H, R15
00000D9E 762FF200                		AND #0F2H, R15
00000DA2 C3EF                    		MOV.B R15, [R14]
00000DA4                         L439:	; if_then_bb9.split2
00000DA4 FBEE077208              		MOV.L #00087207H, R14
                                 ;    1309     
                                 ;    1310             /* Configure CAN Rx interrupt. */
                                 ;    1311             IEN(CAN0, RXM0) = 1;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1311
00000DA9 F0E3                    		BSET #03H, [R14].B
00000DAB                         L440:	; if_then_bb9.split3
00000DAB FBEE187308              		MOV.L #00087318H, R14
                                 ;    1312             IPR(CAN0, RXM0) = CAN0_INT_LVL;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1312
00000DB0 58EF                    		MOVU.B [R14], R15
00000DB2 781F                    		BSET #01H, R15
00000DB4 762FF200                		AND #0F2H, R15
00000DB8 C3EF                    		MOV.B R15, [R14]
00000DBA                         L441:	; if_then_bb9.split4
00000DBA FBEE077208              		MOV.L #00087207H, R14
                                 ;    1313     
                                 ;    1314             /* Configure CAN Error interrupt. */
                                 ;    1315             IEN(CAN0, ERS0) = 1;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1315
00000DBF F0E0                    		BSET #00H, [R14].B
00000DC1                         L442:	; if_then_bb9.split5
00000DC1 FBEE187308              		MOV.L #00087318H, R14
                                 ;    1316             IPR(CAN0, ERS0) = CAN0_INT_LVL;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1316
00000DC6 58EF                    		MOVU.B [R14], R15
00000DC8 781F                    		BSET #01H, R15
00000DCA 762FF200                		AND #0F2H, R15
00000DCE C3EF                    		MOV.B R15, [R14]
00000DD0                         L443:	; if_then_bb9.split6
00000DD0 FBEE4C0809              		MOV.L #0009084CH, R14
                                 ;    1317             CAN0.EIER.BYTE = 0xFF;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1317
00000DD5 F8E4FF                  		MOV.B #0FFH, [R14]
00000DD8                         L444:	; if_then_bb9.split7
00000DD8 FBEE127308              		MOV.L #00087312H, R14
                                 ;    1318 
                                 ;    1319             /* RX CAN0 uses:
                                 ;    1320             - Interrupt Priority Register 18, IPR18. 
                                 ;    1321             - Interrupt Request Enable Register 7, IER07.
                                 ;    1322             - Vector 57 RXF0, and 58 TXM0. */
                                 ;    1323             ICU.IPR[18].BIT.IPR = CAN0_INT_LVL;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1323
00000DDD 58EF                    		MOVU.B [R14], R15
00000DDF 781F                    		BSET #01H, R15
00000DE1 762FF200                		AND #0F2H, R15
00000DE5 C3EF                    		MOV.B R15, [R14]
00000DE7 6702                    		RTSD #08H
00000DE9                         L445:	; return
                                 ;    1324             /* Interrupt enable bit per mailbox (can_block_p->MIER) set by 
                                 ;    1325             R_CAN_TxSet() and R_CAN_RxSet() */        
                                 ;    1326 #endif
                                 ;    1327     }
                                 ;    1328     else
                                 ;    1329     {
                                 ;    1330         return;
                                 ;    1331     }
                                 ;    1332 }/* end R_CAN_ConfigCANinterrupts() */
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\r_can_api.c",1332
00000DE9 6702                    		RTSD #08H
                                 ;    1333 
                                 ;    1334 
                                 ;    1335 /*********************************************************************************
                                 ;    1336 
                                 ;    1337         CAN interrupts are in application.
                                 ;    1338 
                                 ;    1339 **********************************************************************************/
                                 ;    1340 /* eof */
                                 		.SECTION	C,ROMDATA,ALIGN=4
00000000                         __$bit_set:
00000000 01000000                		.lword	00000001H,00000002H,00000004H,00000008H,00000010H,00000020H,00000040H,00000080H
         02000000                
         04000000                
         08000000                
         10000000                
         20000000                
         40000000                
         80000000                
00000020 00010000                		.lword	00000100H,00000200H,00000400H,00000800H,00001000H,00002000H,00004000H,00008000H
         00020000                
         00040000                
         00080000                
         00100000                
         00200000                
         00400000                
         00800000                
00000040 00000100                		.lword	00010000H,00020000H,00040000H,00080000H,00100000H,00200000H,00400000H,00800000H
         00000200                
         00000400                
         00000800                
         00001000                
         00002000                
         00004000                
         00008000                
00000060 00000001                		.lword	01000000H,02000000H,04000000H,08000000H,10000000H,20000000H,40000000H,80000000H
         00000002                
         00000004                
         00000008                
         00000010                
         00000020                
         00000040                
         00000080                
                                 		.END

Information List

TOTAL ERROR(S)    00000
TOTAL WARNING(S)  00000
TOTAL LINE(S)     03568   LINES

Section List

Attr         Size               Name
CODE     0000003563(00000DEBH)  P
ROMDATA  0000000128(00000080H)  C

Cpu Type

-CPU=RX600

Command Parameter

-subcommand=C:\Users\fpolo\AppData\Local\Temp\$ccrx3EC2142\$ccrx\r_can_api.src.cmd
    -nologo
    -cpu=rx600
    -fpu
    -fint_register=0
    -debug
    -endian=little
-listfile=C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\Debug\src\r_can_api.lst
-output=C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\Debug\src\r_can_api.obj
