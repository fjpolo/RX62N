* RX FAMILY ASSEMBLER V2.08.00.01 [06 Oct 2017] *  SOURCE LIST  Fri Jul 06 11:36:25 2018

LOC.     OBJ.              0XMDA SOURCE STATEMENT

                                 ;RX Family C/C++ Compiler (V2.08.00 [30 Nov 2017])  06-Jul-2018 11:36:25
                                 
                                 ;*** CPU TYPE ***
                                 
                                 ;-CPU=RX600
                                 
                                 ;*** COMMAND PARAMETER ***
                                 
                                 ;-output=src=api_demo.src
                                 ;-cpu=rx600
                                 ;-fpu
                                 ;-include=C:\PROGRA~2\RENESA~1\CS_~1\CC\CC-RX\V208~1.00\include,C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src
                                 ;-define=NOT_USE_CAN_POLL=1
                                 ;-lang=c99
                                 ;-nomessage
                                 ;-change_message=information
                                 ;-obj_path=src
                                 ;-debug
                                 ;-listfile=src/api_demo.lst
                                 ;-show=source
                                 ;-optimize=0
                                 ;-nologo
                                 ;api_demo.c
                                 
                                 		.glb	_tx_dataframe
                                 		.glb	_rx_dataframe
                                 		.glb	_remote_frame
                                 		.glb	_g_tx_id_default
                                 		.glb	_g_rx_id_default
                                 		.glb	_can0_tx_sentdata_flag
                                 		.glb	_can0_tx_remote_sentdata_flag
                                 		.glb	_can0_rx_newdata_flag
                                 		.glb	_can0_rx_test_newdata_flag
                                 		.glb	_can0_rx_remote_frame_flag
                                 		.glb	_app_err_nr
                                 		.glb	_main
                                 		.glb	_HardwareSetup
                                 		.glb	_InitialiseDisplay
                                 		.glb	_DisplayString
                                 		.glb	_R_CAN_Create
                                 		.glb	_R_CAN_PortSet
                                 		.glb	_R_CAN_TxSet
                                 		.glb	_R_CAN_Tx
                                 		.glb	_ReadSwitches
                                 		.glb	_LcdShow4DigHex
                                 		.glb	_R_CAN_RxRead
                                 		.glb	_R_CAN_Control
                                 		.glb	_R_CAN_RxSet
                                 		.glb	_R_CAN_RxSetMask
                                 		.glb	_LcdShow2DigHex
                                 		.glb	_R_CAN_CheckErr
                                 		.glb	_ResetAllErrors
                                 		.glb	_Delay
                                 		.glb	_CAN0_TXM0_ISR
                                 		.glb	_R_CAN_TxCheck
                                 		.glb	_CAN0_RXM0_ISR
                                 		.glb	_R_CAN_RxPoll
                                 		.glb	_CAN0_ERS0_ISR
                                 ;LineNo. C-SOURCE STATEMENT
                                 
                                 		.SECTION	P,CODE
00000000                         _main:
                                 		.STACK	_main=16
                                 ;       1 /******************************************************************************
                                 ;       2 * DISCLAIMER
                                 ;       3 
                                 ;       4 * This software is supplied by Renesas Electronics Corp. and is only 
                                 ;       5 * intended for use with Renesas products. No other uses are authorized.
                                 ;       6 
                                 ;       7 * This software is owned by Renesas Electronics Corp. and is protected under 
                                 ;       8 * all applicable laws, including copyright laws.
                                 ;       9 
                                 ;      10 * THIS SOFTWARE IS PROVIDED "AS IS" AND RENESAS MAKES NO WARRANTIES
                                 ;      11 * REGARDING THIS SOFTWARE, WHETHER EXPRESS, IMPLIED OR STATUTORY, 
                                 ;      12 * INCLUDING BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
                                 ;      13 * PARTICULAR PURPOSE AND NON-INFRINGEMENT.  ALL SUCH WARRANTIES ARE EXPRESSLY 
                                 ;      14 * DISCLAIMED.
                                 ;      15 
                                 ;      16 * TO THE MAXIMUM EXTENT PERMITTED NOT PROHIBITED BY LAW, NEITHER RENESAS 
                                 ;      17 * ELECTRONICS CORP. NOR ANY OF ITS AFFILIATED COMPANIES SHALL BE LIABLE 
                                 ;      18 * FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES 
                                 ;      19 * FOR ANY REASON RELATED TO THIS SOFTWARE, EVEN IF RENESAS OR ITS 
                                 ;      20 * AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
                                 ;      21 
                                 ;      22 * Renesas reserves the right, without notice, to make changes to this 
                                 ;      23 * software and to discontinue the availability of this software.  
                                 ;      24 * By using this software, you agree to the additional terms and 
                                 ;      25 * conditions found by accessing the following link:
                                 ;      26 * http://www.renesas.com/disclaimer
                                 ;      27 ******************************************************************************
                                 ;      28 * Copyright (C) 2017. Renesas Electronics Corp., All Rights Reserved.
                                 ;      29 ******************************************************************************
                                 ;      30 * File Name		API_DEMO.C
                                 ;      31 * Version		2.05
                                 ;      32 * Tool-Chain	RX Standard Toolchain 2.0.7
                                 ;      33 * Platform		RSK-RX62N (ROK5562N0C001BR), RX/62N Eval-board (ROK5562N0C010BR).
                                 ;      34 * Description	Demo application program
                                 ;      35 
                                 ;      36 				CAN Buadrate: 500 kbps.
                                 ;      37 
                                 ;      38 				Demonstration of CAN receive and transmit using the CAN API.
                                 ;      39 				
                                 ;      40 				The demo can be run in three ways:
                                 ;      41 				1) Program two boards and connect them together over the CAN 
                                 ;      42 					bus.
                                 ;      43 				2) With CANPORT_TEST_1_INT_LOOPBACK used in the R_CAN_PortSet
                                 ;      44 					API you can communicate internally, no external bus needed!
                                 ;      45 				3) Use a CAN bus monitor, e.g. SysTec's low-cost monitor 
                                 ;      46 					3204000, to send and receive frames to/from the demo. 
                                 ;      47 					Remote frames can also be demonstrated if CAN interrupts 
                                 ;      48 					are enabled. See last paragraph below.
                                 ;      49 
                                 ;      50 				OPERATION:
                                 ;      51 				The demo transmits and receives frames with CAN-ID 1 for standard
                                 ;      52                 ID mode, or 0x000A0001 for extended or mixed ID mode by 
                                 ;      53 				default. The default demo CAN-ID value is set in main().
                                 ;      54 				
                                 ;      55 				The software starts up by immediately sending ten test frames. 
                                 ;      56 				This has two purposes, to check the link and to demonstrate 
                                 ;      57 				how messages are sent back-to-back as quickly as possible.
                                 ;      58 				
                                 ;      59 				Press SW1 to send one CAN frame. The frame will be received 
                                 ;      60 				and displayed by the other RSK as long as that board's receive
                                 ;      61 				ID (RxID) matches the sending boards transmit ID (TxID).
                                 ;      62 				
                                 ;      63 				Press SW2 to display the current demo TxID on the LCD. To inc-
                                 ;      64 				rement the TxID hold SW2 down and press SW3. The actual send 
                                 ;      65 				command is invoked by the Sw1Func function.
                                 ;      66 
                                 ;      67 				Press SW3 to display current demo RxID on the LCD. To change 
                                 ;      68 				RxID hold SW3 down and press SW2.
                                 ;      69 
                                 ;      70 				By default, polled CAN is used. To use the CAN interrupts for 
                                 ;      71 				faster processing, uncomment USE_CAN_POLL in file 
                                 ;      72 				config_r_can_rapi.h.
                                 ;      73 
                                 ;      74 				REMOTE frames:
                                 ;      75 				Besides demonstrating Tx and Rx of Standard CAN frames, the 
                                 ;      76 				demo will also send remote frame responses for CAN-ID 50h 
                                 ;      77 				remote frame requests. Remote frames demo is only done in 
                                 ;      78 				interrupt mode; with USE_CAN_POLL commented in the CAN API 
                                 ;      79 				config file. Remote requests are not sent by this demo as it 
                                 ;      80 				is, and so must come from an outside source, e.g. the CAN 
                                 ;      81 				monitor mentioned above.
                                 ;      82 				
                                 ;      83 * Limitations	-
                                 ;      84 *******************************************************************************
                                 ;      85 * History
                                 ;      86 * Mar 22 '10	REA		For RX62N with new CAN API on 62N Eval Board.
                                 ;      87 * Apr 15 '10	REA 	Test mode changes.
                                 ;      88 * Aug 13 '10	REA		Release for RSK-RX62N (ROK5562N0C001BR). Also runs on 
                                 ;      89 						RX/62N Eval-board (ROK5562N0C010BR).
                                 ;      90 * DEC 16 2011   REA     Added support for extended ID frame mode.
                                 ;      91 * 12.14.2017    2.05        Version update
                                 ;      92 ******************************************************************************/ 
                                 ;      93 //Set TAB = 4 spaces
                                 ;      94 
                                 ;      95 /******************************************************************************
                                 ;      96 Includes	<System Includes> , "Project Includes"
                                 ;      97 ******************************************************************************/
                                 ;      98 #include <machine.h>
                                 ;      99 #include "hwsetup.h"
                                 ;     100 #include "api_demo.h"
                                 ;     101 #include "r_can_api.h"
                                 ;     102 #include "config_r_can_rapi.h"
                                 ;     103 #include "lcd.h"
                                 ;     104 #include "stdint.h"
                                 ;     105 #include "switches.h"
                                 ;     106 #include "rskRX62Ndef.h"
                                 ;     107 
                                 ;     108 /******************************************************************************
                                 ;     109 Typedef definitions
                                 ;     110 ******************************************************************************/
                                 ;     111 /******************************************************************************
                                 ;     112 Macro definitions
                                 ;     113 ******************************************************************************/
                                 ;     114 #define LED_DELAY				0x00080000
                                 ;     115 #define NR_STARTUP_TEST_FRAMES	10
                                 ;     116 
                                 ;     117 #define MAX_CHANNELS 2 /* Some parts have moe than one channel. */
                                 ;     118 
                                 ;     119 /******************************************************************************
                                 ;     120 Global variables and functions imported (externs)
                                 ;     121 ******************************************************************************/
                                 ;     122 /* Data */
                                 ;     123 /* Functions */
                                 ;     124 /******************************************************************************
                                 ;     125 Constant definitions
                                 ;     126 *****************************************************************************/
                                 ;     127 /******************************************************************************
                                 ;     128 Global variables and functions exported
                                 ;     129 ******************************************************************************/
                                 ;     130 /* Demo data */
                                 ;     131 can_frame_t		tx_dataframe, rx_dataframe, remote_frame;
                                 ;     132 #if TEST_FIFO
                                 ;     133 	can_frame_t	    tx_fifo_dataframe;
                                 ;     134     uint8_t         tx_fifo_flag = 0;
                                 ;     135 #endif
                                 ;     136 
                                 ;     137 /* TEST CAN ID */
                                 ;     138 uint32_t g_tx_id_default;
                                 ;     139 uint32_t g_rx_id_default;
                                 ;     140 
                                 ;     141 /* Demo flags. */
                                 ;     142 #ifndef USE_CAN_POLL
                                 ;     143 uint32_t			can0_tx_sentdata_flag = 0;
                                 ;     144 uint32_t			can0_tx_remote_sentdata_flag = 0;
                                 ;     145 uint32_t			can0_rx_newdata_flag = 0;
                                 ;     146 uint32_t			can0_rx_test_newdata_flag = 0;
                                 ;     147 uint32_t			can0_rx_remote_frame_flag = 0;
                                 ;     148 #endif //USE_CAN_POLL
                                 ;     149 enum app_err_enum	app_err_nr;
                                 ;     150 
                                 ;     151 /* Functions */
                                 ;     152 
                                 ;     153 /******************************************************************************
                                 ;     154 Global variables and functions private to the file
                                 ;     155 ******************************************************************************/
                                 ;     156 /* Data */
                                 ;     157 /* Errors. Peripheral and bus errors. Prepared for two buses, but only one in 
                                 ;     158 RX62N. */
                                 ;     159 static uint32_t		error_bus_status[2] = {R_CAN_STATUS_ERROR_ACTIVE, R_CAN_STATUS_ERROR_ACTIVE}; 
                                 ;     160 static uint32_t     error_bus_status_prev[2] = {R_CAN_STATUS_ERROR_ACTIVE, R_CAN_STATUS_ERROR_ACTIVE}; 
                                 ;     161 static uint32_t		can_state[MAX_CHANNELS];
                                 ;     162 static uint32_t		nr_times_reached_busoff[MAX_CHANNELS];
                                 ;     163 
                                 ;     164 /* Functions */
                                 ;     165 static uint32_t InitCanApp(void);
                                 ;     166 static void CheckCANerrors(void);
                                 ;     167 static void HandleCanBusState(uint8_t ch_nr);
                                 ;     168 static void TestLEDs(uint32_t nr_led_flashes);
                                 ;     169 
                                 ;     170 #ifdef USE_CAN_POLL
                                 ;     171 static void CanPollDemo(void);
                                 ;     172 #else 
                                 ;     173 static void CanIntDemo(void);
                                 ;     174 #endif //USE_CAN_POLL
                                 ;     175 
                                 ;     176 /*****************************************************************************
                                 ;     177 User Program Code
                                 ;     178 *****************************************************************************/
                                 ;     179 /*****************************************************************************
                                 ;     180 Name		: main
                                 ;     181 Parameters : none
                                 ;     182 Returns	 : nothing
                                 ;     183 Description: Main Can D-Kit demo program
                                 ;     184 *****************************************************************************/
                                 ;     185 void main(void)
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",185
00000000 7EA6                    		PUSH.L R6
00000002 6080                    		SUB #08H, R0
                                 ;     186 {
                                 ;     187 	uint32_t i, api_status = R_CAN_OK;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",187
00000004 F80600                  		MOV.L #00000000H, [R0]
00000007                         L26:	; entry.split
                                 ;     188 	
                                 ;     189 	/* Configure MCU for 100MHz CPU Clock, ports, peripherals,... */
                                 ;     190 	HardwareSetup();
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",190
00000007 05rrrrrr             A  		BSR _HardwareSetup
0000000B                         L27:	; entry.split1
                                 ;     191 	
                                 ;     192 	/* Setup LCD. */
                                 ;     193 	InitialiseDisplay();
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",193
0000000B 05rrrrrr             A  		BSR _InitialiseDisplay
0000000F                         L28:	; entry.split2
                                 ;     194 	DisplayString(LCD_LINE1, "RX62N   ");
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",194
0000000F FB22rrrrrrrr            		MOV.L #_L10, R2
00000015 6601                    		MOV.L #00000000H, R1
00000017 05rrrrrr             A  		BSR _DisplayString
0000001B                         L29:	; entry.split3
                                 ;     195 	DisplayString(LCD_LINE2, "TxRxDemo");
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",195
0000001B FB22rrrrrrrr            		MOV.L #_L11, R2
00000021 754110                  		MOV.L #00000010H, R1
00000024 05rrrrrr             A  		BSR _DisplayString
00000028                         L30:	; entry.split4
00000028 754114                  		MOV.L #00000014H, R1
                                 ;     196 	
                                 ;     197 	/* Blink LEDs. */
                                 ;     198 	TestLEDs(20);
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",198
0000002B 39rrrr               W  		BSR __$TestLEDs
0000002E                         L31:	; entry.split6
                                 ;     199 
                                 ;     200     /* Set starting mailbox IDs for the demo*/
                                 ;     201     if (FRAME_ID_MODE == STD_ID_MODE)
                                 ;     202     {
                                 ;     203         g_tx_id_default = 0x001;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",203
0000002E FBE2rrrrrrrr            		MOV.L #_g_tx_id_default, R14
00000034 F8E601                  		MOV.L #00000001H, [R14]
00000037                         L32:	; entry.split7
                                 ;     204         g_rx_id_default = 0x001;    
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",204
00000037 FBE2rrrrrrrr            		MOV.L #_g_rx_id_default, R14
0000003D F8E601                  		MOV.L #00000001H, [R14]
00000040                         L33:	; entry.split8
00000040 6601                    		MOV.L #00000000H, R1
                                 ;     205     }
                                 ;     206     else
                                 ;     207     {
                                 ;     208         g_tx_id_default = 0x000A0001;
                                 ;     209         g_rx_id_default = 0x000A0001;    
                                 ;     210     }
                                 ;     211 
                                 ;     212 	/* Init CAN. */
                                 ;     213 	api_status = R_CAN_Create(0);
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",213
00000042 05rrrrrr             A  		BSR _R_CAN_Create
00000046 E301                    		MOV.L R1, [R0]
00000048                         L34:	; entry.split9
00000048 6612                    		MOV.L #00000001H, R2
0000004A 6601                    		MOV.L #00000000H, R1
                                 ;     214 						
                                 ;     215 	/*************************************
                                 ;     216 	* Pick ONE R_CAN_PortSet call below! *
                                 ;     217 	**************************************/
                                 ;     218 	/* Normal CAN bus usage. */
                                 ;     219 	R_CAN_PortSet(0, ENABLE);
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",219
0000004C 05rrrrrr             A  		BSR _R_CAN_PortSet
00000050                         L35:	; entry.split10
                                 ;     220 	/* Test modes. With Internal loopback mode you only need 
                                 ;     221 	one board! */
                                 ;     222 	//R_CAN_PortSet(0, CANPORT_TEST_1_INT_LOOPBACK);
                                 ;     223 	//R_CAN_PortSet(0, CANPORT_TEST_0_EXT_LOOPBACK);
                                 ;     224 	//R_CAN_PortSet(0, CANPORT_TEST_LISTEN_ONLY);
                                 ;     225 	
                                 ;     226 	/* Init CAN mailboxes. */
                                 ;     227 	api_status |= InitCanApp();
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",227
00000050 39rrrr               W  		BSR __$InitCanApp
00000053 069401                  		OR [R0].L, R1
00000056 E301                    		MOV.L R1, [R0]
00000058                         L36:	; entry.split11
                                 ;     228 	
                                 ;     229 	/* Is all OK after all CAN initialization? */
                                 ;     230 	if (api_status != R_CAN_OK)
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",230
00000058 EC01                    		MOV.L [R0], R1
0000005A 6101                    		CMP #00H, R1
0000005C 20rr                    		BEQ L39
0000005E                         L37:	; if_then_bb10
                                 ;     231 	{
                                 ;     232 		api_status = R_CAN_OK;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",232
0000005E F80600                  		MOV.L #00000000H, [R0]
00000061                         L38:	; if_then_bb10.split
                                 ;     233 		app_err_nr = APP_ERR_CAN_INIT;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",233
00000061 FBE2rrrrrrrr            		MOV.L #_app_err_nr, R14
00000067 F8E602                  		MOV.L #00000002H, [R14]
0000006A                         L39:	; if_then_bb12.split
                                 ;     234 	}
                                 ;     235 	
                                 ;     236 	/* Interrupt Enable flag is set by default. */
                                 ;     237 	
                                 ;     238 	/* Send several test messages back to back to demonstrate how to do this as fast as possible. */
                                 ;     239 	if (FRAME_ID_MODE == STD_ID_MODE )
                                 ;     240     {
                                 ;     241 	    api_status |= R_CAN_TxSet(0, CANBOX_TX, &tx_dataframe, DATA_FRAME);   
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",241
0000006A FB32rrrrrrrr            		MOV.L #_tx_dataframe, R3
00000070 6612                    		MOV.L #00000001H, R2
00000072 6601                    		MOV.L #00000000H, R1
00000074 EF14                    		MOV.L R1, R4
00000076 05rrrrrr             A  		BSR _R_CAN_TxSet
0000007A 069401                  		OR [R0].L, R1
0000007D E301                    		MOV.L R1, [R0]
0000007F                         L40:	; bb21
                                 ;     242     }
                                 ;     243     else
                                 ;     244     {
                                 ;     245 	    api_status |= R_CAN_TxSetXid(0, CANBOX_TX, &tx_dataframe, DATA_FRAME);
                                 ;     246     }
                                 ;     247     
                                 ;     248 	#ifdef USE_CAN_POLL
                                 ;     249 		while (R_CAN_TxCheck(0, CANBOX_TX))
                                 ;     250 			;
                                 ;     251 		for (i = 0; i < NR_STARTUP_TEST_FRAMES; i++)
                                 ;     252 		{
                                 ;     253 			api_status |= R_CAN_Tx(0, CANBOX_TX);
                                 ;     254 			while (R_CAN_TxCheck(0, CANBOX_TX))
                                 ;     255 				;
                                 ;     256 		}
                                 ;     257 	#else	//Using CAN interrupts.
                                 ;     258 		while (can0_tx_sentdata_flag == 0)
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",258
0000007F FBE2rrrrrrrr            		MOV.L #_can0_tx_sentdata_flag, R14
00000085 ECEE                    		MOV.L [R14], R14
00000087 610E                    		CMP #00H, R14
00000089 20rr                    		BEQ L40
0000008B                         L41:	; bb26
                                 ;     259 			;
                                 ;     260 		can0_tx_sentdata_flag = 0;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",260
0000008B FBE2rrrrrrrr            		MOV.L #_can0_tx_sentdata_flag, R14
00000091 F8E600                  		MOV.L #00000000H, [R14]
00000094                         L42:	; bb26.split
                                 ;     261 		for (i = 0; i < NR_STARTUP_TEST_FRAMES; i++)
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",261
00000094 3E0100                  		MOV.L #00000000H, 04H[R0]
00000097 2Err                 B  		BRA L46
00000099                         L43:	; bb27
00000099 6612                    		MOV.L #00000001H, R2
0000009B 6601                    		MOV.L #00000000H, R1
                                 ;     262 		{
                                 ;     263 			api_status |= R_CAN_Tx(0, CANBOX_TX);
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",263
0000009D 05rrrrrr             A  		BSR _R_CAN_Tx
000000A1 069401                  		OR [R0].L, R1
000000A4 E301                    		MOV.L R1, [R0]
000000A6                         L44:	; bb32
                                 ;     264 			while (can0_tx_sentdata_flag == 0)
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",264
000000A6 FBE2rrrrrrrr            		MOV.L #_can0_tx_sentdata_flag, R14
000000AC ECEE                    		MOV.L [R14], R14
000000AE 610E                    		CMP #00H, R14
000000B0 20rr                    		BEQ L44
000000B2                         L45:	; bb37
                                 ;     265 				;
                                 ;     266 			can0_tx_sentdata_flag = 0;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",266
000000B2 FBE2rrrrrrrr            		MOV.L #_can0_tx_sentdata_flag, R14
000000B8 F8E600                  		MOV.L #00000000H, [R14]
000000BB A809                    		MOV.L 04H[R0], R1
000000BD 6211                    		ADD #01H, R1
000000BF A009                    		MOV.L R1, 04H[R0]
000000C1                         L46:	; bb40
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",261
000000C1 A809                    		MOV.L 04H[R0], R1
000000C3 61A1                    		CMP #0AH, R1
000000C5 23rr                    		BLTU L43
000000C7 2Err                 B  		BRA L53
000000C9                         L47:	; if_then_bb51
                                 ;     267 		}
                                 ;     268 	#endif
                                 ;     269 	
                                 ;     270 	/*	M A I N	L O O P	* * * * * * * * * * * * * * * * * * * * * * * * * */	
                                 ;     271 	while(1)
                                 ;     272 	{
                                 ;     273 		/* User pressing switch(es)? */
                                 ;     274 		ReadSwitches();
                                 ;     275 
                                 ;     276 		/* Check for CAN errors. */
                                 ;     277 		 CheckCANerrors();
                                 ;     278             
                                 ;     279 		if (can_state[0] != R_CAN_STATUS_BUSOFF)
                                 ;     280 		{
                                 ;     281 			#ifdef USE_CAN_POLL
                                 ;     282 				CanPollDemo();
                                 ;     283 			#else
                                 ;     284 				CanIntDemo();
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",284
000000C9 39rrrr               W  		BSR __$CanIntDemo
000000CC 2Err                 B  		BRA L51
000000CE                         L48:	; if_else_bb52
                                 ;     285 			#endif //USE_CAN_POLL
                                 ;     286 		}
                                 ;     287 		 else
                                 ;     288 		/* Bus Off. */
                                 ;     289 		{
                                 ;     290 			DisplayString(LCD_LINE1, "App in  ");
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",290
000000CE FB22rrrrrrrr            		MOV.L #_L12, R2
000000D4 6601                    		MOV.L #00000000H, R1
000000D6 05rrrrrr             A  		BSR _DisplayString
000000DA                         L49:	; if_else_bb52.split
                                 ;     291 			DisplayString(LCD_LINE2, "Bus Off ");
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",291
000000DA FB22rrrrrrrr            		MOV.L #_L13, R2
000000E0 754110                  		MOV.L #00000010H, R1
000000E3 05rrrrrr             A  		BSR _DisplayString
000000E7                         L50:	; if_else_bb52.split12
000000E7 FB1E000040              		MOV.L #00400000H, R1
                                 ;     292 			
                                 ;     293 			/* HandleCanBusState() will restart app. */
                                 ;     294 			LCD_FLASH
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",294
000000EC 39rrrr               W  		BSR _Delay
000000EF FB62rrrrrrrr            		MOV.L #_L14, R6
000000F5 6601                    		MOV.L #00000000H, R1
000000F7 EF62                    		MOV.L R6, R2
000000F9 05rrrrrr             A  		BSR _DisplayString
000000FD 754110                  		MOV.L #00000010H, R1
00000100 EF62                    		MOV.L R6, R2
00000102 05rrrrrr             A  		BSR _DisplayString
00000106 FB1A0020                		MOV.L #00002000H, R1
0000010A 39rrrr               W  		BSR _Delay
0000010D                         L51:	; if_break_bb53
0000010D FBEE20C008              		MOV.L #0008C020H, R14
                                 ;     295 		}
                                 ;     296 		/* Reset receive/transmit indication. */
                                 ;     297 		YLW_LED1 = LED_OFF;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",297
00000112 F0E3                    		BSET #03H, [R14].B
00000114                         L52:	; if_break_bb53.split
00000114 FBEE20C008              		MOV.L #0008C020H, R14
                                 ;     298 		GRN_LED0 = LED_OFF;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",298
00000119 F0E2                    		BSET #02H, [R14].B
0000011B                         L53:	; bb54.split
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",274
0000011B 05rrrrrr             A  		BSR _ReadSwitches
0000011F                         L54:	; bb54.split13
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",277
0000011F 39rrrr               W  		BSR __$CheckCANerrors
00000122                         L55:	; bb54.split14
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",279
00000122 FBE2rrrrrrrr            		MOV.L #__$can_state, R14
00000128 ECEE                    		MOV.L [R14], R14
0000012A 614E                    		CMP #04H, R14
0000012C 21rr                    		BNE L47
0000012E 2Err                 B  		BRA L48
00000130                         __$CanIntDemo:
                                 		.STACK	__$CanIntDemo=16
                                 ;     299 	}
                                 ;     300 }/* end main() */
                                 ;     301 
                                 ;     302 #ifdef USE_CAN_POLL
                                 ;     303 /*****************************************************************************
                                 ;     304 Name:			CanPollDemo
                                 ;     305 Parameters:		-
                                 ;     306 Returns:		-
                                 ;     307 Description:	POLLED CAN demo version
                                 ;     308 *****************************************************************************/
                                 ;     309 static void CanPollDemo(void)
                                 ;     310 {
                                 ;     311 	uint32_t	api_status = R_CAN_OK;
                                 ;     312 	
                                 ;     313 	/*** TRANSMITTED any frames? */
                                 ;     314 	api_status = R_CAN_TxCheck(0, CANBOX_TX);
                                 ;     315 	if (api_status == R_CAN_OK)
                                 ;     316 	{
                                 ;     317 		YLW_LED1 = LED_ON;
                                 ;     318 		DisplayString(LCD_LINE1, "TxChk OK");
                                 ;     319 		LcdShow4DigHex(tx_dataframe.data[0], tx_dataframe.data[1], 16);
                                 ;     320 		LcdShow4DigHex(tx_dataframe.data[2], tx_dataframe.data[3], 20); LCD_FLASH
                                 ;     321 	} /* 
                                 ;     322     else
                                 ;     323     {
                                 ;     324         Since we are always polling for transmits, api_status for R_CAN_TxCheck 
                                 ;     325 	    will most often be other than R_CAN_OK, don't show that in this demo.
                                 ;     326     }*/
                                 ;     327 	
                                 ;     328 	#if TEST_FIFO
                                 ;     329 	if (tx_fifo_flag == 1)
                                 ;     330     /* Note that this function may be called to fast from the time between 
                                 ;     331     SW1 being executed, and the time this if statement is run. This means that the CAN frames 
                                 ;     332     have not gone out yet, and so TxCheck will not be OK. */
                                 ;     333     {
                                 ;     334         tx_fifo_flag = 0;
                                 ;     335         api_status = R_CAN_TxCheck(0, TX_FIFO_MBX);
                                 ;     336 		if (api_status == R_CAN_OK)
                                 ;     337 		{
                                 ;     338             /* $REA FIX - Never gets here. */
                                 ;     339             ORG_LED2 = LED_ON;
                                 ;     340 			DisplayString(LCD_LINE1, "TxFifoOK");
                                 ;     341 			LcdShow4DigHex(tx_dataframe.data[0], tx_dataframe.data[1], 16);
                                 ;     342 			LcdShow4DigHex(tx_dataframe.data[2], tx_dataframe.data[3], 20); LCD_FLASH
                                 ;     343 	    }
                                 ;     344         else
                                 ;     345             DisplayString(LCD_LINE1, "TxFifoNo");
                                 ;     346     }
                                 ;     347 	#endif
                                 ;     348 	
                                 ;     349 	/*** RECEIVED any frames? */
                                 ;     350 	api_status = R_CAN_RxPoll(0, CANBOX_RX);
                                 ;     351 	if (api_status == R_CAN_OK)
                                 ;     352 	{
                                 ;     353 		GRN_LED0 = LED_ON;
                                 ;     354 		DisplayString(LCD_LINE1, "RxPollOK"); LCD_FLASH
                                 ;     355 		DisplayString(LCD_LINE1, "RxRead: ");
                                 ;     356 		
                                 ;     357 		/* Read CAN data and show. */
                                 ;     358 		api_status = R_CAN_RxRead(0, CANBOX_RX, &rx_dataframe);
                                 ;     359 		LcdShow4DigHex(rx_dataframe.data[0], rx_dataframe.data[1], 16);
                                 ;     360 		LcdShow4DigHex(rx_dataframe.data[2], rx_dataframe.data[3], 20); LCD_FLASH
                                 ;     361 		if (api_status == R_CAN_MSGLOST)
                                 ;     362 		{
                                 ;     363 			DisplayString(LCD_LINE2, "MSGLOST"); LCD_FLASH
                                 ;     364 		}
                                 ;     365 	}
                                 ;     366 }/* end CanPollDemo() */
                                 ;     367 
                                 ;     368 #else
                                 ;     369 
                                 ;     370 /*****************************************************************************
                                 ;     371 Name:			CanIntDemo
                                 ;     372 Parameters:		-
                                 ;     373 Returns:		-
                                 ;     374 Description:	INTERRUPT driven CAN demo version
                                 ;     375 *****************************************************************************/
                                 ;     376 static void CanIntDemo(void)
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",376
00000130 6E67                    		PUSHM R6-R7
00000132 6040                    		SUB #04H, R0
                                 ;     377 {
                                 ;     378 	uint32_t	api_status = R_CAN_OK;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",378
00000134 F80600                  		MOV.L #00000000H, [R0]
00000137                         L57:	; entry.split
                                 ;     379 	
                                 ;     380 	/************************************************************************
                                 ;     381 	* Using CAN INTERRUPTS.													*
                                 ;     382 	* See also r_can_api.c for the ISR example.								*
                                 ;     383 	*************************************************************************/
                                 ;     384 	/* TRANSMITTED any frames? If flag can0_tx_sentdata_flag was set by the 
                                 ;     385     CAN Tx ISR, the frame was sent successfully. */
                                 ;     386     if (can0_tx_sentdata_flag)
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",386
00000137 FBE2rrrrrrrr            		MOV.L #_can0_tx_sentdata_flag, R14
0000013D ECEE                    		MOV.L [R14], R14
0000013F 610E                    		CMP #00H, R14
00000141 20rr                    		BEQ L63
00000143                         L58:	; if_then_bb
                                 ;     387 	{
                                 ;     388 		can0_tx_sentdata_flag = 0;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",388
00000143 FBE2rrrrrrrr            		MOV.L #_can0_tx_sentdata_flag, R14
00000149 F8E600                  		MOV.L #00000000H, [R14]
0000014C                         L59:	; if_then_bb.split
0000014C FBEE20C008              		MOV.L #0008C020H, R14
                                 ;     389 		YLW_LED1 = LED_ON;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",389
00000151 F0EB                    		BCLR #03H, [R14].B
00000153                         L60:	; if_then_bb.split1
                                 ;     390 
                                 ;     391 		/* Show CAN frame was sent. */
                                 ;     392 		DisplayString(LCD_LINE1, "Tx OK   ");
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",392
00000153 FB22rrrrrrrr            		MOV.L #_L15, R2
00000159 6601                    		MOV.L #00000000H, R1
0000015B 05rrrrrr             A  		BSR _DisplayString
0000015F                         L61:	; if_then_bb.split2
                                 ;     393 		LcdShow4DigHex(tx_dataframe.data[0], tx_dataframe.data[1], 16);
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",393
0000015F FB12rrrrrrrr            		MOV.L #_tx_dataframe, R1
00000165 B192                    		MOVU.B 06H[R1], R2
00000167 B119                    		MOVU.B 05H[R1], R1
00000169 754310                  		MOV.L #00000010H, R3
0000016C 05rrrrrr             A  		BSR _LcdShow4DigHex
00000170                         L62:	; if_then_bb.split3
                                 ;     394 		LcdShow4DigHex(tx_dataframe.data[2], tx_dataframe.data[3], 20); LCD_FLASH
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",394
00000170 FB12rrrrrrrr            		MOV.L #_tx_dataframe, R1
00000176 B212                    		MOVU.B 08H[R1], R2
00000178 B199                    		MOVU.B 07H[R1], R1
0000017A 754314                  		MOV.L #00000014H, R3
0000017D 05rrrrrr             A  		BSR _LcdShow4DigHex
00000181 FB1E000040              		MOV.L #00400000H, R1
00000186 39rrrr               W  		BSR _Delay
00000189 FB62rrrrrrrr            		MOV.L #_L14, R6
0000018F 6601                    		MOV.L #00000000H, R1
00000191 EF62                    		MOV.L R6, R2
00000193 05rrrrrr             A  		BSR _DisplayString
00000197 754110                  		MOV.L #00000010H, R1
0000019A EF62                    		MOV.L R6, R2
0000019C 05rrrrrr             A  		BSR _DisplayString
000001A0 FB1A0020                		MOV.L #00002000H, R1
000001A4 39rrrr               W  		BSR _Delay
000001A7                         L63:	; if_break_bb
                                 ;     395 	}
                                 ;     396 	if (can0_tx_remote_sentdata_flag)
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",396
000001A7 FBE2rrrrrrrr            		MOV.L #_can0_tx_remote_sentdata_flag, R14
000001AD ECEE                    		MOV.L [R14], R14
000001AF 610E                    		CMP #00H, R14
000001B1 20rr                    		BEQ L66
000001B3                         L64:	; if_then_bb12
                                 ;     397 	{
                                 ;     398 		can0_tx_remote_sentdata_flag = 0;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",398
000001B3 FBE2rrrrrrrr            		MOV.L #_can0_tx_remote_sentdata_flag, R14
000001B9 F8E600                  		MOV.L #00000000H, [R14]
000001BC                         L65:	; if_then_bb12.split
000001BC 6606                    		MOV.L #00000000H, R6
                                 ;     399 		DisplayString(LCD_LINE1, "TxRemote"); LCD_FLASH
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",399
000001BE FB22rrrrrrrr            		MOV.L #_L16, R2
000001C4 EF61                    		MOV.L R6, R1
000001C6 05rrrrrr             A  		BSR _DisplayString
000001CA FB1E000040              		MOV.L #00400000H, R1
000001CF 39rrrr               W  		BSR _Delay
000001D2 FB72rrrrrrrr            		MOV.L #_L14, R7
000001D8 EF61                    		MOV.L R6, R1
000001DA EF72                    		MOV.L R7, R2
000001DC 05rrrrrr             A  		BSR _DisplayString
000001E0 754110                  		MOV.L #00000010H, R1
000001E3 EF72                    		MOV.L R7, R2
000001E5 05rrrrrr             A  		BSR _DisplayString
000001E9 FB1A0020                		MOV.L #00002000H, R1
000001ED 39rrrr               W  		BSR _Delay
000001F0                         L66:	; if_break_bb13
                                 ;     400 	}					
                                 ;     401 	
                                 ;     402 	#if TEST_FIFO
                                 ;     403     	if (tx_fifo_flag == 1)
                                 ;     404         /* Success detected by FIFO TX interrupt. */
                                 ;     405         {
                                 ;     406             tx_fifo_flag = 0;
                                 ;     407             ORG_LED2 = LED_ON;
                                 ;     408     		DisplayString(LCD_LINE1, "TxFifoOK");
                                 ;     409     		LcdShow4DigHex(tx_dataframe.data[0], tx_dataframe.data[1], 16);
                                 ;     410     		LcdShow4DigHex(tx_dataframe.data[2], tx_dataframe.data[3], 20); LCD_FLASH
                                 ;     411         }
                                 ;     412     #endif
                                 ;     413 
                                 ;     414 	/*** RECEIVED any frames? Only need to check if flag is set by CAN Rx ISR.
                                 ;     415 	 Will only receive own frames in CAN port test modes 0 and 1. */
                                 ;     416 	if (can0_rx_newdata_flag)
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",416
000001F0 FBE2rrrrrrrr            		MOV.L #_can0_rx_newdata_flag, R14
000001F6 ECEE                    		MOV.L [R14], R14
000001F8 610E                    		CMP #00H, R14
000001FA 3Arrrr               W  		BEQ L74
000001FD                         L67:	; if_then_bb18
                                 ;     417 	{
                                 ;     418 		can0_rx_newdata_flag = 0;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",418
000001FD FBE2rrrrrrrr            		MOV.L #_can0_rx_newdata_flag, R14
00000203 F8E600                  		MOV.L #00000000H, [R14]
00000206                         L68:	; if_then_bb18.split
00000206 FBEE20C008              		MOV.L #0008C020H, R14
                                 ;     419 		GRN_LED0 = LED_ON;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",419
0000020B F0EA                    		BCLR #02H, [R14].B
0000020D                         L69:	; if_then_bb18.split4
0000020D 6607                    		MOV.L #00000000H, R7
                                 ;     420 		DisplayString(LCD_LINE1, "Rx OK   "); LCD_FLASH
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",420
0000020F FB22rrrrrrrr            		MOV.L #_L17, R2
00000215 EF71                    		MOV.L R7, R1
00000217 05rrrrrr             A  		BSR _DisplayString
0000021B FB1E000040              		MOV.L #00400000H, R1
00000220 39rrrr               W  		BSR _Delay
00000223 FB62rrrrrrrr            		MOV.L #_L14, R6
00000229 EF71                    		MOV.L R7, R1
0000022B EF62                    		MOV.L R6, R2
0000022D 05rrrrrr             A  		BSR _DisplayString
00000231 754110                  		MOV.L #00000010H, R1
00000234 EF62                    		MOV.L R6, R2
00000236 05rrrrrr             A  		BSR _DisplayString
0000023A FB1A0020                		MOV.L #00002000H, R1
0000023E 39rrrr               W  		BSR _Delay
00000241                         L70:	; if_then_bb18.split5
                                 ;     421 		DisplayString(LCD_LINE1, "Rx Read:");
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",421
00000241 FB22rrrrrrrr            		MOV.L #_L18, R2
00000247 6601                    		MOV.L #00000000H, R1
00000249 05rrrrrr             A  		BSR _DisplayString
0000024D                         L71:	; if_then_bb18.split6
                                 ;     422 	
                                 ;     423 		/* Read CAN data and show. */
                                 ;     424 		api_status = R_CAN_RxRead(0, CANBOX_RX, &rx_dataframe);
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",424
0000024D FB32rrrrrrrr            		MOV.L #_rx_dataframe, R3
00000253 6642                    		MOV.L #00000004H, R2
00000255 6601                    		MOV.L #00000000H, R1
00000257 05rrrrrr             A  		BSR _R_CAN_RxRead
0000025B E301                    		MOV.L R1, [R0]
0000025D                         L72:	; if_then_bb18.split7
                                 ;     425 		LcdShow4DigHex(rx_dataframe.data[0], rx_dataframe.data[1], 16);
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",425
0000025D FB12rrrrrrrr            		MOV.L #_rx_dataframe, R1
00000263 B192                    		MOVU.B 06H[R1], R2
00000265 B119                    		MOVU.B 05H[R1], R1
00000267 754310                  		MOV.L #00000010H, R3
0000026A 05rrrrrr             A  		BSR _LcdShow4DigHex
0000026E                         L73:	; if_then_bb18.split8
                                 ;     426 		LcdShow4DigHex(rx_dataframe.data[2], rx_dataframe.data[3], 20); LCD_FLASH
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",426
0000026E FB12rrrrrrrr            		MOV.L #_rx_dataframe, R1
00000274 B212                    		MOVU.B 08H[R1], R2
00000276 B199                    		MOVU.B 07H[R1], R1
00000278 754314                  		MOV.L #00000014H, R3
0000027B 05rrrrrr             A  		BSR _LcdShow4DigHex
0000027F FB1E000040              		MOV.L #00400000H, R1
00000284 39rrrr               W  		BSR _Delay
00000287 FB72rrrrrrrr            		MOV.L #_L14, R7
0000028D 6601                    		MOV.L #00000000H, R1
0000028F EF72                    		MOV.L R7, R2
00000291 05rrrrrr             A  		BSR _DisplayString
00000295 754110                  		MOV.L #00000010H, R1
00000298 EF72                    		MOV.L R7, R2
0000029A 05rrrrrr             A  		BSR _DisplayString
0000029E FB1A0020                		MOV.L #00002000H, R1
000002A2 39rrrr               W  		BSR _Delay
000002A5                         L74:	; if_break_bb30
                                 ;     427 		if (api_status == R_CAN_MSGLOST)
                                 ;     428 		{
                                 ;     429 			//DisplayString(LCD_LINE2, "MSGLOST"); LCD_FLASH
                                 ;     430 		}
                                 ;     431 	}
                                 ;     432 	if (can0_rx_test_newdata_flag)
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",432
000002A5 FBE2rrrrrrrr            		MOV.L #_can0_rx_test_newdata_flag, R14
000002AB ECEE                    		MOV.L [R14], R14
000002AD 610E                    		CMP #00H, R14
000002AF 20rr                    		BEQ L78
000002B1                         L75:	; if_then_bb35
                                 ;     433 	{
                                 ;     434 		can0_rx_test_newdata_flag = 0;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",434
000002B1 FBE2rrrrrrrr            		MOV.L #_can0_rx_test_newdata_flag, R14
000002B7 F8E600                  		MOV.L #00000000H, [R14]
000002BA                         L76:	; if_then_bb35.split
000002BA FBEE20C008              		MOV.L #0008C020H, R14
                                 ;     435 		GRN_LED0 = LED_ON;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",435
000002BF F0EA                    		BCLR #02H, [R14].B
000002C1                         L77:	; if_then_bb35.split10
000002C1 6607                    		MOV.L #00000000H, R7
                                 ;     436 		DisplayString(LCD_LINE1, "Rx Test"); LCD_FLASH
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",436
000002C3 FB22rrrrrrrr            		MOV.L #_L19, R2
000002C9 EF71                    		MOV.L R7, R1
000002CB 05rrrrrr             A  		BSR _DisplayString
000002CF FB1E000040              		MOV.L #00400000H, R1
000002D4 39rrrr               W  		BSR _Delay
000002D7 FB62rrrrrrrr            		MOV.L #_L14, R6
000002DD EF71                    		MOV.L R7, R1
000002DF EF62                    		MOV.L R6, R2
000002E1 05rrrrrr             A  		BSR _DisplayString
000002E5 754110                  		MOV.L #00000010H, R1
000002E8 EF62                    		MOV.L R6, R2
000002EA 05rrrrrr             A  		BSR _DisplayString
000002EE FB1A0020                		MOV.L #00002000H, R1
000002F2 39rrrr               W  		BSR _Delay
000002F5                         L78:	; if_break_bb36
                                 ;     437 	}
                                 ;     438 	/* Set up remote reply if remote request came in. */
                                 ;     439 	if (can0_rx_remote_frame_flag == 1)
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",439
000002F5 FBE2rrrrrrrr            		MOV.L #_can0_rx_remote_frame_flag, R14
000002FB ECEE                    		MOV.L [R14], R14
000002FD 611E                    		CMP #01H, R14
000002FF 21rr                    		BNE L82
00000301                         L79:	; if_then_bb41
                                 ;     440 	{
                                 ;     441 		can0_rx_remote_frame_flag = 0;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",441
00000301 FBE2rrrrrrrr            		MOV.L #_can0_rx_remote_frame_flag, R14
00000307 F8E600                  		MOV.L #00000000H, [R14]
0000030A                         L80:	; if_then_bb41.split
                                 ;     442 		remote_frame.data[0]++;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",442
0000030A FB12rrrrrrrr            		MOV.L #_remote_frame, R1
00000310 B11A                    		MOVU.B 05H[R1], R2
00000312 6212                    		ADD #01H, R2
00000314 811A                    		MOV.B R2, 05H[R1]
00000316                         L81:	; if_then_bb41.split12
                                 ;     443         
                                 ;     444         if (FRAME_ID_MODE == STD_ID_MODE )
                                 ;     445         {
                                 ;     446             R_CAN_TxSet(0, CANBOX_REMOTE_TX, &remote_frame, DATA_FRAME);   
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",446
00000316 FB32rrrrrrrr            		MOV.L #_remote_frame, R3
0000031C 66C2                    		MOV.L #0000000CH, R2
0000031E 6601                    		MOV.L #00000000H, R1
00000320 EF14                    		MOV.L R1, R4
00000322 05rrrrrr             A  		BSR _R_CAN_TxSet
00000326 3F6703                  		RTSD #0CH, R6-R7
00000329                         L82:	; return
                                 ;     447         }
                                 ;     448         else
                                 ;     449         {
                                 ;     450             R_CAN_TxSetXid(0, CANBOX_REMOTE_TX, &remote_frame, DATA_FRAME);             
                                 ;     451         }     
                                 ;     452 		
                                 ;     453 	}
                                 ;     454 }/* end CanIntDemo() */
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",454
00000329 3F6703                  		RTSD #0CH, R6-R7
0000032C                         __$InitCanApp:
                                 		.STACK	__$InitCanApp=16
                                 ;     455 #endif //USE_CAN_POLL
                                 ;     456 
                                 ;     457 /*****************************************************************************
                                 ;     458 Name:			InitCanApp
                                 ;     459 Parameters:		-
                                 ;     460 Returns:		-
                                 ;     461 Description:	Initialize CAN demo application
                                 ;     462 *****************************************************************************/
                                 ;     463 static uint32_t InitCanApp(void)
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",463
0000032C 60C0                    		SUB #0CH, R0
                                 ;     464 {	
                                 ;     465 	uint32_t	api_status = R_CAN_OK;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",465
0000032E 3E0100                  		MOV.L #00000000H, 04H[R0]
00000331                         L84:	; entry.split
                                 ;     466 	uint8_t 	i;
                                 ;     467 	
                                 ;     468 	can_state[0] = R_CAN_STATUS_ERROR_ACTIVE;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",468
00000331 FBE2rrrrrrrr            		MOV.L #__$can_state, R14
00000337 F8E601                  		MOV.L #00000001H, [R14]
0000033A                         L85:	; entry.split1
0000033A 6652                    		MOV.L #00000005H, R2
0000033C 6601                    		MOV.L #00000000H, R1
                                 ;     469 	
                                 ;     470 	/* Configure mailboxes in Halt mode. */
                                 ;     471 	api_status |= R_CAN_Control(0, HALT_CANMODE);
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",471
0000033E 05rrrrrr             A  		BSR _R_CAN_Control
00000342 06950101                		OR 04H[R0].L, R1
00000346 A009                    		MOV.L R1, 04H[R0]
00000348                         L86:	; entry.split3
                                 ;     472 	
                                 ;     473 	/********	Init demo to recieve data	********/	
                                 ;     474 	/* Use API to set one CAN mailbox for demo receive. */
                                 ;     475 	/* Standard id. Choose value 0-0x07FF (2047). */
                                 ;     476     if (FRAME_ID_MODE == STD_ID_MODE)
                                 ;     477     { 
                                 ;     478 	    api_status |= R_CAN_RxSet(0, CANBOX_RX, g_rx_id_default, DATA_FRAME);
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",478
00000348 FBE2rrrrrrrr            		MOV.L #_g_rx_id_default, R14
0000034E ECE3                    		MOV.L [R14], R3
00000350 6642                    		MOV.L #00000004H, R2
00000352 6601                    		MOV.L #00000000H, R1
00000354 EF14                    		MOV.L R1, R4
00000356 05rrrrrr             A  		BSR _R_CAN_RxSet
0000035A 06950101                		OR 04H[R0].L, R1
0000035E A009                    		MOV.L R1, 04H[R0]
00000360                         L87:	; entry.split4
                                 ;     479     }
                                 ;     480     else
                                 ;     481     {
                                 ;     482 	    api_status |= R_CAN_RxSetXid(0, CANBOX_RX, g_rx_id_default, DATA_FRAME);        
                                 ;     483     }
                                 ;     484 	
                                 ;     485 	/********	Init. demo Tx dataframe RAM structure	********/	
                                 ;     486 	/* Standard id. Choose value 0-0x07FF (2047). */
                                 ;     487 	tx_dataframe.id		=	g_tx_id_default;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",487
00000360 FBE2rrrrrrrr            		MOV.L #_tx_dataframe, R14
00000366 FBF2rrrrrrrr            		MOV.L #_g_tx_id_default, R15
0000036C E0FE                    		MOV.L [R15], [R14]
0000036E                         L88:	; entry.split5
                                 ;     488 	tx_dataframe.dlc		=	8;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",488
0000036E FB12rrrrrrrr            		MOV.L #_tx_dataframe, R1
00000374 3C1408                  		MOV.B #08H, 04H[R1]
00000377                         L89:	; entry.split6
                                 ;     489 	tx_dataframe.data[0]	=	0x00;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",489
00000377 FB12rrrrrrrr            		MOV.L #_tx_dataframe, R1
0000037D 3C1500                  		MOV.B #00H, 05H[R1]
00000380                         L90:	; entry.split7
                                 ;     490 	tx_dataframe.data[1]	=	0x11;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",490
00000380 FB12rrrrrrrr            		MOV.L #_tx_dataframe, R1
00000386 3C1611                  		MOV.B #11H, 06H[R1]
00000389                         L91:	; entry.split8
                                 ;     491 	tx_dataframe.data[2]	=	0x22;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",491
00000389 FB12rrrrrrrr            		MOV.L #_tx_dataframe, R1
0000038F 3C1722                  		MOV.B #22H, 07H[R1]
00000392                         L92:	; entry.split9
                                 ;     492 	tx_dataframe.data[3]	=	0x33;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",492
00000392 FB12rrrrrrrr            		MOV.L #_tx_dataframe, R1
00000398 3C1833                  		MOV.B #33H, 08H[R1]
0000039B                         L93:	; entry.split10
                                 ;     493 	tx_dataframe.data[4]	=	0x44;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",493
0000039B FB12rrrrrrrr            		MOV.L #_tx_dataframe, R1
000003A1 3C1944                  		MOV.B #44H, 09H[R1]
000003A4                         L94:	; entry.split11
                                 ;     494 	tx_dataframe.data[5]	=	0x55;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",494
000003A4 FB12rrrrrrrr            		MOV.L #_tx_dataframe, R1
000003AA 3C1A55                  		MOV.B #55H, 0AH[R1]
000003AD                         L95:	; entry.split12
                                 ;     495 	tx_dataframe.data[6]	=	0x66;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",495
000003AD FB12rrrrrrrr            		MOV.L #_tx_dataframe, R1
000003B3 3C1B66                  		MOV.B #66H, 0BH[R1]
000003B6                         L96:	; entry.split13
                                 ;     496 	tx_dataframe.data[7]	=	0x77;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",496
000003B6 FB12rrrrrrrr            		MOV.L #_tx_dataframe, R1
000003BC 3C1C77                  		MOV.B #77H, 0CH[R1]
000003BF                         L97:	; entry.split14
000003BF FB3AFF07                		MOV.L #000007FFH, R3
000003C3 6642                    		MOV.L #00000004H, R2
000003C5 6601                    		MOV.L #00000000H, R1
                                 ;     497 
                                 ;     498 	#if TEST_FIFO
                                 ;     499 		tx_fifo_dataframe.id		=	g_tx_id_default+1;
                                 ;     500 		tx_fifo_dataframe.dlc		=	4;
                                 ;     501 		tx_fifo_dataframe.data[0]		=	0x00;
                                 ;     502 		tx_fifo_dataframe.data[1]		=	0x11;
                                 ;     503 		tx_fifo_dataframe.data[2]		=	0x22;
                                 ;     504 		tx_fifo_dataframe.data[3]		=	0x33;
                                 ;     505 	#endif
                                 ;     506 
                                 ;     507 	/* Mask for receive box. Write to mask only in Halt mode. */
                                 ;     508 	/* 0x7FF = no mask. 0x7FD = mask bit 1, for example; If receive ID is set 
                                 ;     509 	to 1, both ID 1 and 3 should be received. */
                                 ;     510 	R_CAN_RxSetMask( 0, CANBOX_RX, 0x7FF);
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",510
000003C7 05rrrrrr             A  		BSR _R_CAN_RxSetMask
000003CB                         L98:	; entry.split15
000003CB 6662                    		MOV.L #00000006H, R2
000003CD 6601                    		MOV.L #00000000H, R1
                                 ;     511 		
                                 ;     512 	/* API to send will be set up in SW1Func() in file switches.c. */
                                 ;     513 
                                 ;     514 	api_status |= R_CAN_Control(0, OPERATE_CANMODE);
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",514
000003CF 05rrrrrr             A  		BSR _R_CAN_Control
000003D3 06950101                		OR 04H[R0].L, R1
000003D7 A009                    		MOV.L R1, 04H[R0]
000003D9                         L99:	; entry.split16
                                 ;     515 
                                 ;     516 	
                                 ;     517 	/*************** Init. remote dataframe response **********************/
                                 ;     518 	remote_frame.id = REMOTE_TEST_ID;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",518
000003D9 FBE2rrrrrrrr            		MOV.L #_remote_frame, R14
000003DF F8E650                  		MOV.L #00000050H, [R14]
000003E2                         L100:	; entry.split17
                                 ;     519 
                                 ;     520 	/* Length is specified by the remote request. */
                                 ;     521 	
                                 ;     522 	/* Some data.. */
                                 ;     523 	for (i = 0; i < 8; i++)
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",523
000003E2 3C0300                  		MOV.B #00H, 03H[R0]
000003E5 2Err                 B  		BRA L102
000003E7                         L101:	; bb
                                 ;     524 		remote_frame.data[i] = i;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",524
000003E7 B089                    		MOVU.B 03H[R0], R1
000003E9 FB22rrrrrrrr            		MOV.L #_remote_frame, R2
000003EF 4B12                    		ADD R1, R2
000003F1 8129                    		MOV.B R1, 05H[R2]
000003F3 B089                    		MOVU.B 03H[R0], R1
000003F5 6211                    		ADD #01H, R1
000003F7 8089                    		MOV.B R1, 03H[R0]
000003F9                         L102:	; bb23
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",523
000003F9 B089                    		MOVU.B 03H[R0], R1
000003FB 6181                    		CMP #08H, R1
000003FD 29rr                    		BLT L101
000003FF                         L103:	; if_then_bb29.split
000003FF 6614                    		MOV.L #00000001H, R4
00000401 754350                  		MOV.L #00000050H, R3
00000404 6682                    		MOV.L #00000008H, R2
00000406 6601                    		MOV.L #00000000H, R1
                                 ;     525 	
                                 ;     526 	/* Prepare mailbox for Tx. */
                                 ;     527 	if (FRAME_ID_MODE == STD_ID_MODE)
                                 ;     528     {
                                 ;     529         R_CAN_RxSet(0, CANBOX_REMOTE_RX, REMOTE_TEST_ID, REMOTE_FRAME);
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",529
00000408 05rrrrrr             A  		BSR _R_CAN_RxSet
0000040C                         L104:	; if_then_bb29.split18
                                 ;     530     }
                                 ;     531     else
                                 ;     532     {
                                 ;     533         R_CAN_RxSetXid(0, CANBOX_REMOTE_RX, REMOTE_TEST_ID, REMOTE_FRAME);        
                                 ;     534     }
                                 ;     535 	/***********************************************************************/
                                 ;     536 	
                                 ;     537 	/* Set frame buffer id so LCD shows correct receive ID from start. */
                                 ;     538 	 rx_dataframe.id = g_rx_id_default;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",538
0000040C FBE2rrrrrrrr            		MOV.L #_rx_dataframe, R14
00000412 FBF2rrrrrrrr            		MOV.L #_g_rx_id_default, R15
00000418 E0FE                    		MOV.L [R15], [R14]
0000041A                         L105:	; if_then_bb29.split19
                                 ;     539 	
                                 ;     540 	 return api_status;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",540
0000041A A809                    		MOV.L 04H[R0], R1
0000041C A081                    		MOV.L R1, 08H[R0]
0000041E                         L106:	; if_then_bb29.split20
                                 ;     541 
                                 ;     542 } /* end InitCanApp */
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",542
0000041E 6703                    		RTSD #0CH
00000420                         __$CheckCANerrors:
                                 		.STACK	__$CheckCANerrors=8
                                 ;     543 
                                 ;     544 /*****************************************************************************
                                 ;     545 Name:			CheckCANerrors
                                 ;     546 Parameters:		-
                                 ;     547 Returns:		-
                                 ;     548 Description:	Check for all possible errors, in app and peripheral. Add 
                                 ;     549 				checking for your app here.
                                 ;     550 *****************************************************************************/
                                 ;     551 static void CheckCANerrors(void)
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",551
00000420 7EA6                    		PUSH.L R6
00000422 6601                    		MOV.L #00000000H, R1
                                 ;     552 {
                                 ;     553 	/* Error passive or more? */
                                 ;     554 	 HandleCanBusState(0);
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",554
00000424 39rrrr               W  		BSR __$HandleCanBusState
00000427                         L108:	; entry.split
                                 ;     555 		
                                 ;     556 	if (app_err_nr)
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",556
00000427 FBE2rrrrrrrr            		MOV.L #_app_err_nr, R14
0000042D ECEE                    		MOV.L [R14], R14
0000042F 610E                    		CMP #00H, R14
00000431 20rr                    		BEQ L114
00000433                         L109:	; if_then_bb
00000433 FBEE23C008              		MOV.L #0008C023H, R14
                                 ;     557 	{
                                 ;     558 		/* Show error to user */
                                 ;     559 		/* RESET ERRORs with SW1. */
                                 ;     560 		RED_LED3 = LED_ON;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",560
00000438 F0EC                    		BCLR #04H, [R14].B
0000043A                         L110:	; if_then_bb.split
                                 ;     561 		DisplayString(LCD_LINE1,"App err");
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",561
0000043A FB22rrrrrrrr            		MOV.L #_L20, R2
00000440 6601                    		MOV.L #00000000H, R1
00000442 05rrrrrr             A  		BSR _DisplayString
00000446                         L111:	; if_then_bb.split1
                                 ;     562 		LcdShow2DigHex(app_err_nr, 1*16 + 4);
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",562
00000446 FBE2rrrrrrrr            		MOV.L #_app_err_nr, R14
0000044C 58E1                    		MOVU.B [R14], R1
0000044E 754214                  		MOV.L #00000014H, R2
00000451 05rrrrrr             A  		BSR _LcdShow2DigHex
00000455                         L112:	; if_then_bb.split2
00000455 FB1E000040              		MOV.L #00400000H, R1
                                 ;     563 		LCD_FLASH
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",563
0000045A 39rrrr               W  		BSR _Delay
0000045D FB62rrrrrrrr            		MOV.L #_L14, R6
00000463 6601                    		MOV.L #00000000H, R1
00000465 EF62                    		MOV.L R6, R2
00000467 05rrrrrr             A  		BSR _DisplayString
0000046B 754110                  		MOV.L #00000010H, R1
0000046E EF62                    		MOV.L R6, R2
00000470 05rrrrrr             A  		BSR _DisplayString
00000474 FB1A0020                		MOV.L #00002000H, R1
00000478 39rrrr               W  		BSR _Delay
0000047B                         L113:	; if_then_bb.split3
0000047B FBEE23C008              		MOV.L #0008C023H, R14
                                 ;     564 		RED_LED3 = LED_OFF;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",564
00000480 F0E4                    		BSET #04H, [R14].B
00000482 3F6601                  		RTSD #04H, R6-R6
00000485                         L114:	; return
                                 ;     565 	}
                                 ;     566 }/* end CheckCANerrors() */
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",566
00000485 3F6601                  		RTSD #04H, R6-R6
00000488                         __$HandleCanBusState:
                                 		.STACK	__$HandleCanBusState=28
                                 ;     567 
                                 ;     568 /*****************************************************************************
                                 ;     569 Name:				HandleCanBusState
                                 ;     570 Parameters:			Bus number, 0 or 1.
                                 ;     571 Returns:			-
                                 ;     572 Description:		Check CAN peripheral bus state.
                                 ;     573 *****************************************************************************/
                                 ;     574 static void HandleCanBusState(uint8_t	ch_nr)
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",574
00000488 7EA6                    		PUSH.L R6
0000048A 7100EC                  		ADD #0FFFFFFECH, R0
0000048D 8489                    		MOV.B R1, 13H[R0]
                                 ;     575 {
                                 ;     576 	can_frame_t err_tx_dataframe;
                                 ;     577 	
                                 ;     578 	/* Has the status register reached error passive or more? */
                                 ;     579 	if (ch_nr == 0)
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",579
0000048F 6101                    		CMP #00H, R1
00000491 21rr                    		BNE L117
00000493                         L116:	; if_then_bb
                                 ;     580 		error_bus_status[ch_nr] = R_CAN_CheckErr(0);
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",580
00000493 B48E                    		MOVU.B 13H[R0], R6
00000495 6601                    		MOV.L #00000000H, R1
00000497 05rrrrrr             A  		BSR _R_CAN_CheckErr
0000049B FBE2rrrrrrrr            		MOV.L #__$error_bus_status, R14
000004A1 FE26E1                  		MOV.L R1, [R6,R14]
000004A4                         L117:	; if_break_bb
                                 ;     581 	/*else
                                 ;     582 		error_bus_status[ch_nr] = R_CAN1_CheckErr(1);*/
                                 ;     583 
                                 ;     584 	/* Tell user if CAN bus status changed.
                                 ;     585 		All Status bits are read only. */
                                 ;     586 	if (error_bus_status[ch_nr] != error_bus_status_prev[ch_nr])
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",586
000004A4 B489                    		MOVU.B 13H[R0], R1
000004A6 FBE2rrrrrrrr            		MOV.L #__$error_bus_status, R14
000004AC FE61EE                  		MOV.L [R1,R14], R14
000004AF FBF2rrrrrrrr            		MOV.L #__$error_bus_status_prev, R15
000004B5 FE61FF                  		MOV.L [R1,R15], R15
000004B8 47FE                    		CMP R15, R14
000004BA 3Arrrr               W  		BEQ L139
000004BD                         L118:	; if_then_bb21
                                 ;     587 	{	
                                 ;     588 		 switch (error_bus_status[ch_nr])
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",588
000004BD FBE2rrrrrrrr            		MOV.L #__$error_bus_status, R14
000004C3 B489                    		MOVU.B 13H[R0], R1
000004C5 FE61EE                  		MOV.L [R1,R14], R14
000004C8 611E                    		CMP #01H, R14
000004CA 21rr                    		BNE L128
000004CC                         L119:	; switch_clause_bb
                                 ;     589 		{
                                 ;     590 			/* Error Active. */
                                 ;     591 			 case R_CAN_STATUS_ERROR_ACTIVE:
                                 ;     592 				/* Only report if there was a previous error. */
                                 ;     593 				 if (error_bus_status_prev[ch_nr] > R_CAN_STATUS_ERROR_ACTIVE)
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",593
000004CC FBE2rrrrrrrr            		MOV.L #__$error_bus_status_prev, R14
000004D2 FE61EE                  		MOV.L [R1,R14], R14
000004D5 612E                    		CMP #02H, R14
000004D7 23rr                    		BLTU L124
000004D9                         L120:	; if_then_bb33
                                 ;     594 				{
                                 ;     595 					if (ch_nr == 0)
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",595
000004D9 B489                    		MOVU.B 13H[R0], R1
000004DB 6101                    		CMP #00H, R1
000004DD 21rr                    		BNE L122
000004DF                         L121:	; if_then_bb39
                                 ;     596 					{
                                 ;     597 						DisplayString(LCD_LINE1, "Bus0: OK");
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",597
000004DF FB22rrrrrrrr            		MOV.L #_L21, R2
000004E5 6601                    		MOV.L #00000000H, R1
000004E7 05rrrrrr             A  		BSR _DisplayString
000004EB 2Err                 B  		BRA L123
000004ED                         L122:	; if_else_bb
                                 ;     598 					}
                                 ;     599 					else
                                 ;     600 					{
                                 ;     601 						DisplayString(LCD_LINE1, "Bus1: OK");
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",601
000004ED FB22rrrrrrrr            		MOV.L #_L22, R2
000004F3 6601                    		MOV.L #00000000H, R1
000004F5 05rrrrrr             A  		BSR _DisplayString
000004F9                         L123:	; if_break_bb40
000004F9 FB1E000040              		MOV.L #00400000H, R1
                                 ;     602 					}
                                 ;     603 					/* Show user */
                                 ;     604 					 Delay(0x400000);
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",604
000004FE 39rrrr               W  		BSR _Delay
00000501                         L124:	; if_break_bb41
                                 ;     605 				}
                                 ;     606 				/* Restart if returned from Bus Off. */
                                 ;     607 				 if (error_bus_status_prev[ch_nr] == R_CAN_STATUS_BUSOFF)
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",607
00000501 FBE2rrrrrrrr            		MOV.L #__$error_bus_status_prev, R14
00000507 B489                    		MOVU.B 13H[R0], R1
00000509 FE61EE                  		MOV.L [R1,R14], R14
0000050C 614E                    		CMP #04H, R14
0000050E 21rr                    		BNE L134
00000510                         L125:	; if_then_bb49
00000510 6601                    		MOV.L #00000000H, R1
                                 ;     608 				{
                                 ;     609 					/* Restart CAN */
                                 ;     610 					 if (R_CAN_Create(0) != R_CAN_OK)
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",610
00000512 05rrrrrr             A  		BSR _R_CAN_Create
00000516 6101                    		CMP #00H, R1
00000518 20rr                    		BEQ L127
0000051A                         L126:	; if_then_bb54
                                 ;     611 						app_err_nr |= APP_ERR_CAN_PERIPH;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",611
0000051A FBE2rrrrrrrr            		MOV.L #_app_err_nr, R14
00000520 ECEF                    		MOV.L [R14], R15
00000522 780F                    		BSET #00H, R15
00000524 E3EF                    		MOV.L R15, [R14]
00000526                         L127:	; if_break_bb57
                                 ;     612 					
                                 ;     613 					/* Restart CAN demos even if only one channel failed. */
                                 ;     614 					 InitCanApp();
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",614
00000526 39rrrr               W  		BSR __$InitCanApp
00000529 2Err                 B  		BRA L134
0000052B                         L128:	; switch_clause_bb60
                                 ;     615 				}
                                 ;     616 				 break;	
                                 ;     617 
                                 ;     618 			/* Error Passive. */
                                 ;     619 			 case R_CAN_STATUS_ERROR_PASSIVE:
                                 ;     620 			/* Continue into Busoff case to display. */
                                 ;     621 
                                 ;     622 			/* Bus Off. */
                                 ;     623 			 case R_CAN_STATUS_BUSOFF:
                                 ;     624 			 default:
                                 ;     625 				//demo_state[ch_nr] = CAN_BUS_OFF;
                                 ;     626 				 if (ch_nr == 0)
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",626
0000052B 6101                    		CMP #00H, R1
0000052D 21rr                    		BNE L130
0000052F                         L129:	; if_then_bb66
                                 ;     627 					DisplayString(LCD_LINE1,"bus0:   ");
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",627
0000052F FB22rrrrrrrr            		MOV.L #_L23, R2
00000535 6601                    		MOV.L #00000000H, R1
00000537 05rrrrrr             A  		BSR _DisplayString
0000053B 2Err                 B  		BRA L131
0000053D                         L130:	; if_else_bb67
                                 ;     628 				else
                                 ;     629 					DisplayString(LCD_LINE2,"bus1:   ");
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",629
0000053D FB22rrrrrrrr            		MOV.L #_L24, R2
00000543 754110                  		MOV.L #00000010H, R1
00000546 05rrrrrr             A  		BSR _DisplayString
0000054A                         L131:	; if_break_bb68
                                 ;     630 				
                                 ;     631 				/* Show user */
                                 ;     632 				 LcdShow2DigHex((uint8_t)error_bus_status[ch_nr], ch_nr*16 + 6);
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",632
0000054A B48A                    		MOVU.B 13H[R0], R2
0000054C FDC22E                  		SHLL #02H, R2, R14
0000054F FBF2rrrrrrrr            		MOV.L #__$error_bus_status, R15
00000555 FECFE1                  		MOVU.B [R15,R14], R1
00000558 6C42                    		SHLL #04H, R2
0000055A 6562                    		OR #06H, R2
0000055C 5B22                    		MOVU.B R2, R2
0000055E 05rrrrrr             A  		BSR _LcdShow2DigHex
00000562                         L132:	; if_break_bb68.split
00000562 FB1E000040              		MOV.L #00400000H, R1
                                 ;     633 				 Delay(0x400000);
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",633
00000567 39rrrr               W  		BSR _Delay
0000056A                         L133:	; if_break_bb68.split1
                                 ;     634 				 nr_times_reached_busoff[ch_nr]++;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",634
0000056A FBE2rrrrrrrr            		MOV.L #__$nr_times_reached_busoff, R14
00000570 B489                    		MOVU.B 13H[R0], R1
00000572 FE61EF                  		MOV.L [R1,R14], R15
00000575 621F                    		ADD #01H, R15
00000577 FE21EF                  		MOV.L R15, [R1,R14]
0000057A                         L134:	; switch_break_bb
                                 ;     635 				 break;
                                 ;     636 		}
                                 ;     637 		 error_bus_status_prev[ch_nr] = error_bus_status[ch_nr];
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",637
0000057A B489                    		MOVU.B 13H[R0], R1
0000057C FBE2rrrrrrrr            		MOV.L #__$error_bus_status, R14
00000582 FE61EE                  		MOV.L [R1,R14], R14
00000585 FBF2rrrrrrrr            		MOV.L #__$error_bus_status_prev, R15
0000058B FE21FE                  		MOV.L R14, [R1,R15]
0000058E                         L135:	; switch_break_bb.split
                                 ;     638 
                                 ;     639 		/* Transmit CAN bus status change */
                                 ;     640 		err_tx_dataframe.id = 0x700 + ch_nr;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",640
0000058E B489                    		MOVU.B 13H[R0], R1
00000590 76310007                		OR #0700H, R1
00000594 E301                    		MOV.L R1, [R0]
00000596                         L136:	; switch_break_bb.split2
                                 ;     641 		err_tx_dataframe.dlc =	1;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",641
00000596 3C0401                  		MOV.B #01H, 04H[R0]
00000599                         L137:	; switch_break_bb.split3
                                 ;     642 		err_tx_dataframe.data[0] = error_bus_status[ch_nr];
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",642
00000599 FBE2rrrrrrrr            		MOV.L #__$error_bus_status, R14
0000059F B489                    		MOVU.B 13H[R0], R1
000005A1 FE61E1                  		MOV.L [R1,R14], R1
000005A4 8109                    		MOV.B R1, 05H[R0]
000005A6                         L138:	; switch_break_bb.split5
                                 ;     643 		
                                 ;     644 		/* Send Error state on both channels. Maybe at least one is up. 
                                 ;     645 		 Warning: If CAN0 and CAN1 are connected to eachother, they will try to
                                 ;     646 		 send practically simultaneously. Let this be a lesson; sending the same 
                                 ;     647 		 ID from two nodes onto the same bus at the same time is very hazardous
                                 ;     648 		 as the arbitration cannot take place. Only use both lines below if 
                                 ;     649 		 CAN0 and CAN1 are on different buses. */
                                 ;     650          if (FRAME_ID_MODE == STD_ID_MODE )
                                 ;     651          {
                                 ;     652 		    R_CAN_TxSet(0, g_tx_id_default, &err_tx_dataframe, DATA_FRAME);
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",652
000005A6 FBE2rrrrrrrr            		MOV.L #_g_tx_id_default, R14
000005AC ECE2                    		MOV.L [R14], R2
000005AE EF03                    		MOV.L R0, R3
000005B0 6601                    		MOV.L #00000000H, R1
000005B2 EF14                    		MOV.L R1, R4
000005B4 05rrrrrr             A  		BSR _R_CAN_TxSet
000005B8 3F6606                  		RTSD #18H, R6-R6
000005BB                         L139:	; return
                                 ;     653          }
                                 ;     654          else
                                 ;     655          {
                                 ;     656 		    R_CAN_TxSetXid(0, g_tx_id_default, &err_tx_dataframe, DATA_FRAME);             
                                 ;     657          }
                                 ;     658 		//R_CAN_TxSet(1, g_tx_id_default, &err_tx_dataframe, DATA_FRAME);
                                 ;     659 	 }
                                 ;     660 }/* end HandleCanBusState() */
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",660
000005BB 3F6606                  		RTSD #18H, R6-R6
000005BE                         _ResetAllErrors:
                                 		.STACK	_ResetAllErrors=12
                                 ;     661 
                                 ;     662 /*******************************************************************************
                                 ;     663 Function Name:	ResetAllErrors
                                 ;     664 Description:	Reset all types of errors, application and CAN peripeheral errors.
                                 ;     665 Parameters:	 	-
                                 ;     666 Return value:	CAN API code
                                 ;     667 *******************************************************************************/
                                 ;     668 uint32_t ResetAllErrors(void)
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",668
000005BE 6080                    		SUB #08H, R0
                                 ;     669 {		
                                 ;     670 	 uint32_t status = 0;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",670
000005C0 F80600                  		MOV.L #00000000H, [R0]
000005C3                         L141:	; entry.split
                                 ;     671 	
                                 ;     672 	/* Reset errors */
                                 ;     673 	 app_err_nr = APP_NO_ERR;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",673
000005C3 FBE2rrrrrrrr            		MOV.L #_app_err_nr, R14
000005C9 F8E600                  		MOV.L #00000000H, [R14]
000005CC                         L142:	; entry.split1
                                 ;     674 	
                                 ;     675 	 error_bus_status[0] = 0;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",675
000005CC FBE2rrrrrrrr            		MOV.L #__$error_bus_status, R14
000005D2 F8E600                  		MOV.L #00000000H, [R14]
000005D5                         L143:	; entry.split2
                                 ;     676 	 error_bus_status[1] = 0;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",676
000005D5 FB12rrrrrrrr            		MOV.L #__$error_bus_status, R1
000005DB 3E1100                  		MOV.L #00000000H, 04H[R1]
000005DE                         L144:	; entry.split3
                                 ;     677 
                                 ;     678 	/* You can chooose to not reset error_bus_status_prev; if there was an error, 
                                 ;     679 	 keep info to signal recovery */
                                 ;     680 	 error_bus_status_prev[0] = 0; 
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",680
000005DE FBE2rrrrrrrr            		MOV.L #__$error_bus_status_prev, R14
000005E4 F8E600                  		MOV.L #00000000H, [R14]
000005E7                         L145:	; entry.split4
                                 ;     681 	 error_bus_status_prev[1] = 0;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",681
000005E7 FB12rrrrrrrr            		MOV.L #__$error_bus_status_prev, R1
000005ED 3E1100                  		MOV.L #00000000H, 04H[R1]
000005F0                         L146:	; entry.split5
                                 ;     682 	
                                 ;     683 	 nr_times_reached_busoff[0] = 0;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",683
000005F0 FBE2rrrrrrrr            		MOV.L #__$nr_times_reached_busoff, R14
000005F6 F8E600                  		MOV.L #00000000H, [R14]
000005F9                         L147:	; entry.split6
                                 ;     684 	 nr_times_reached_busoff[1] = 0;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",684
000005F9 FB12rrrrrrrr            		MOV.L #__$nr_times_reached_busoff, R1
000005FF 3E1100                  		MOV.L #00000000H, 04H[R1]
00000602                         L148:	; entry.split7
                                 ;     685 	
                                 ;     686 	/* Reset Error Judge Factor and Error Code registers */
                                 ;     687 	 CAN0.EIFR.BYTE /*= CAN1.EIFR.BYTE*/ = 0;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",687
00000602 FBEE4D0809              		MOV.L #0009084DH, R14
00000607 F8E400                  		MOV.B #00H, [R14]
0000060A                         L149:	; entry.split8
                                 ;     688 	
                                 ;     689 	/* Reset CAN0 Error Code Store Register (ECSR). */
                                 ;     690 	CAN0.ECSR.BYTE = 0;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",690
0000060A FB1E4D0809              		MOV.L #0009084DH, R1
0000060F 3C1300                  		MOV.B #00H, 03H[R1]
00000612                         L150:	; entry.split9
                                 ;     691 	
                                 ;     692 	/* Reset CAN0 Error Counters. */
                                 ;     693 	CAN0.RECR = 0;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",693
00000612 FB1E4D0809              		MOV.L #0009084DH, R1
00000617 3C1100                  		MOV.B #00H, 01H[R1]
0000061A                         L151:	; entry.split10
                                 ;     694 	CAN0.TECR = 0;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",694
0000061A FB1E4D0809              		MOV.L #0009084DH, R1
0000061F 3C1200                  		MOV.B #00H, 02H[R1]
00000622                         L152:	; entry.split11
                                 ;     695 
                                 ;     696 	return status;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",696
00000622 EC01                    		MOV.L [R0], R1
00000624 A009                    		MOV.L R1, 04H[R0]
00000626                         L153:	; entry.split12
                                 ;     697 }/* end ResetAllErrors() */
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",697
00000626 6702                    		RTSD #08H
00000628                         __$TestLEDs:
                                 		.STACK	__$TestLEDs=16
                                 ;     698 
                                 ;     699 /******************************************************************************
                                 ;     700 Function Name:		TestLEDs
                                 ;     701 Parameters:			-
                                 ;     702 Return value:		-
                                 ;     703 Description:		Blink the LEDs
                                 ;     704 ******************************************************************************/
                                 ;     705 void TestLEDs(uint32_t nr_led_flashes)
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",705
00000628 60C0                    		SUB #0CH, R0
0000062A A081                    		MOV.L R1, 08H[R0]
                                 ;     706 {
                                 ;     707 	uint32_t i = LED_DELAY;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",707
0000062C F90E01000008            		MOV.L #00080000H, 04H[R0]
00000632                         L155:	; entry.split
00000632 FBEE20C008              		MOV.L #0008C020H, R14
                                 ;     708 	uint32_t j;
                                 ;     709 	
                                 ;     710 	GRN_LED0 = LED_ON;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",710
00000637 F0EA                    		BCLR #02H, [R14].B
00000639                         L156:	; entry.split1
00000639 FBEE20C008              		MOV.L #0008C020H, R14
                                 ;     711 	YLW_LED1 = LED_OFF;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",711
0000063E F0E3                    		BSET #03H, [R14].B
00000640                         L157:	; entry.split2
00000640 FBEE20C008              		MOV.L #0008C020H, R14
                                 ;     712 	ORG_LED2 = LED_ON;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",712
00000645 F0ED                    		BCLR #05H, [R14].B
00000647                         L158:	; entry.split3
00000647 FBEE23C008              		MOV.L #0008C023H, R14
                                 ;     713 	RED_LED3 = LED_OFF;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",713
0000064C F0E4                    		BSET #04H, [R14].B
0000064E                         L159:	; entry.split4
0000064E FBEE26C008              		MOV.L #0008C026H, R14
                                 ;     714 	RED_LED4 = LED_ON;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",714
00000653 F0E8                    		BCLR #00H, [R14].B
00000655                         L160:	; entry.split5
00000655 FBEE27C008              		MOV.L #0008C027H, R14
                                 ;     715 	RED_LED5 = LED_OFF;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",715
0000065A F0E3                    		BSET #03H, [R14].B
0000065C                         L161:	; entry.split6
                                 ;     716 	
                                 ;     717 	for (j = 0; j < nr_led_flashes; j++)
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",717
0000065C F80600                  		MOV.L #00000000H, [R0]
0000065F 38rrrr               W  		BRA L170
00000662                         L162:	; bb5
                                 ;     718 	{
                                 ;     719 		while(i--)
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",719
00000662 A809                    		MOV.L 04H[R0], R1
00000664 7112FF                  		ADD #0FFFFFFFFH, R1, R2
00000667 A00A                    		MOV.L R2, 04H[R0]
00000669 6101                    		CMP #00H, R1
0000066B 21rr                    		BNE L162
0000066D                         L163:	; bb10
                                 ;     720 			;
                                 ;     721 		
                                 ;     722 		i = LED_DELAY;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",722
0000066D F90E01000008            		MOV.L #00080000H, 04H[R0]
00000673                         L164:	; bb10.split
00000673 FBEE20C008              		MOV.L #0008C020H, R14
                                 ;     723 		
                                 ;     724 		GRN_LED0 ^= 1;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",724
00000678 58EF                    		MOVU.B [R14], R15
0000067A EFF5                    		MOV.L R15, R5
0000067C 7A25                    		BCLR #02H, R5
0000067E 682F                    		SHLR #02H, R15
00000680 641F                    		AND #01H, R15
00000682 FDE0FF                  		BNOT #00H, R15
00000685 6C2F                    		SHLL #02H, R15
00000687 57F5                    		OR R15, R5
00000689 C3E5                    		MOV.B R5, [R14]
0000068B                         L165:	; bb10.split7
0000068B FBEE20C008              		MOV.L #0008C020H, R14
                                 ;     725 			YLW_LED1 ^= 1;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",725
00000690 58EF                    		MOVU.B [R14], R15
00000692 EFF5                    		MOV.L R15, R5
00000694 7A35                    		BCLR #03H, R5
00000696 683F                    		SHLR #03H, R15
00000698 641F                    		AND #01H, R15
0000069A FDE0FF                  		BNOT #00H, R15
0000069D 6C3F                    		SHLL #03H, R15
0000069F 57F5                    		OR R15, R5
000006A1 C3E5                    		MOV.B R5, [R14]
000006A3                         L166:	; bb10.split8
000006A3 FBEE20C008              		MOV.L #0008C020H, R14
                                 ;     726 		ORG_LED2 ^= 1;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",726
000006A8 58EF                    		MOVU.B [R14], R15
000006AA EFF5                    		MOV.L R15, R5
000006AC 7A55                    		BCLR #05H, R5
000006AE 685F                    		SHLR #05H, R15
000006B0 641F                    		AND #01H, R15
000006B2 FDE0FF                  		BNOT #00H, R15
000006B5 6C5F                    		SHLL #05H, R15
000006B7 57F5                    		OR R15, R5
000006B9 C3E5                    		MOV.B R5, [R14]
000006BB                         L167:	; bb10.split9
000006BB FBEE23C008              		MOV.L #0008C023H, R14
                                 ;     727 		RED_LED3 ^= 1;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",727
000006C0 58EF                    		MOVU.B [R14], R15
000006C2 EFF5                    		MOV.L R15, R5
000006C4 7A45                    		BCLR #04H, R5
000006C6 684F                    		SHLR #04H, R15
000006C8 641F                    		AND #01H, R15
000006CA FDE0FF                  		BNOT #00H, R15
000006CD 6C4F                    		SHLL #04H, R15
000006CF 57F5                    		OR R15, R5
000006D1 C3E5                    		MOV.B R5, [R14]
000006D3                         L168:	; bb10.split10
000006D3 FBEE26C008              		MOV.L #0008C026H, R14
                                 ;     728 		RED_LED4 ^= 1;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",728
000006D8 58EF                    		MOVU.B [R14], R15
000006DA EFF5                    		MOV.L R15, R5
000006DC 7625FE00                		AND #0FEH, R5
000006E0 641F                    		AND #01H, R15
000006E2 FDE0FF                  		BNOT #00H, R15
000006E5 57F5                    		OR R15, R5
000006E7 C3E5                    		MOV.B R5, [R14]
000006E9                         L169:	; bb10.split11
000006E9 FBEE27C008              		MOV.L #0008C027H, R14
                                 ;     729 		RED_LED5 ^= 1;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",729
000006EE 58EF                    		MOVU.B [R14], R15
000006F0 EFF5                    		MOV.L R15, R5
000006F2 7A35                    		BCLR #03H, R5
000006F4 683F                    		SHLR #03H, R15
000006F6 641F                    		AND #01H, R15
000006F8 FDE0FF                  		BNOT #00H, R15
000006FB 6C3F                    		SHLL #03H, R15
000006FD 57F5                    		OR R15, R5
000006FF C3E5                    		MOV.B R5, [R14]
00000701 EC01                    		MOV.L [R0], R1
00000703 6211                    		ADD #01H, R1
00000705 E301                    		MOV.L R1, [R0]
00000707                         L170:	; bb72
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",717
00000707 EC01                    		MOV.L [R0], R1
00000709 06850102                		CMP 08H[R0].L, R1
0000070D 22rr                  * 		BLTU L162
         38rrrr                  
00000712                         L171:	; bb78
00000712 FBEE27C008              		MOV.L #0008C027H, R14
                                 ;     730 	}
                                 ;     731 	ALL_LEDS_OFF
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",731
00000717 F0E3                    		BSET #03H, [R14].B
00000719 58EE                    		MOVU.B [R14], R14
0000071B FBFE26C008              		MOV.L #0008C026H, R15
00000720 58F5                    		MOVU.B [R15], R5
00000722 7A05                    		BCLR #00H, R5
00000724 683E                    		SHLR #03H, R14
00000726 641E                    		AND #01H, R14
00000728 57E5                    		OR R14, R5
0000072A C3F5                    		MOV.B R5, [R15]
0000072C 58FE                    		MOVU.B [R15], R14
0000072E FBFE23C008              		MOV.L #0008C023H, R15
00000733 58F5                    		MOVU.B [R15], R5
00000735 7A45                    		BCLR #04H, R5
00000737 6C4E                    		SHLL #04H, R14
00000739 752E10                  		AND #10H, R14
0000073C 57E5                    		OR R14, R5
0000073E C3F5                    		MOV.B R5, [R15]
00000740 58FE                    		MOVU.B [R15], R14
00000742 FBFE20C008              		MOV.L #0008C020H, R15
00000747 7545DF                  		MOV.L #000000DFH, R5
0000074A 50F5                    		AND [R15].UB, R5
0000074C 6C1E                    		SHLL #01H, R14
0000074E 752E20                  		AND #20H, R14
00000751 57E5                    		OR R14, R5
00000753 C3F5                    		MOV.B R5, [R15]
00000755 58FE                    		MOVU.B [R15], R14
00000757 58F5                    		MOVU.B [R15], R5
00000759 7A35                    		BCLR #03H, R5
0000075B 682E                    		SHLR #02H, R14
0000075D 648E                    		AND #08H, R14
0000075F 57E5                    		OR R14, R5
00000761 C3F5                    		MOV.B R5, [R15]
00000763 58FE                    		MOVU.B [R15], R14
00000765 58F5                    		MOVU.B [R15], R5
00000767 7A25                    		BCLR #02H, R5
00000769 681E                    		SHLR #01H, R14
0000076B 644E                    		AND #04H, R14
0000076D 57E5                    		OR R14, R5
0000076F C3F5                    		MOV.B R5, [R15]
00000771 6703                    		RTSD #0CH
00000773                         _Delay:
                                 		.STACK	_Delay=12
                                 ;     732 } /* end TestLEDs() */
                                 ;     733 
                                 ;     734 /*******************************************************************************
                                 ;     735 Function Name:	Delay
                                 ;     736 Description:	Demo delay
                                 ;     737 Parameters:	 	32-bit delay count value
                                 ;     738 Return value:	-
                                 ;     739 *******************************************************************************/
                                 ;     740 void Delay(uint32_t n)
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",740
00000773 6080                    		SUB #08H, R0
00000775 A009                    		MOV.L R1, 04H[R0]
                                 ;     741 {
                                 ;     742 	uint32_t i;
                                 ;     743 	
                                 ;     744 	 for(i = 0; i < n; i++)
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",744
00000777 F80600                  		MOV.L #00000000H, [R0]
0000077A 08                   S  		BRA L174
0000077B                         L173:	; bb
                                 ;     745 		 nop();
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",745
0000077B 03                      		NOP
0000077C EC01                    		MOV.L [R0], R1
0000077E 6211                    		ADD #01H, R1
00000780 E301                    		MOV.L R1, [R0]
00000782                         L174:	; bb4
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",744
00000782 EC01                    		MOV.L [R0], R1
00000784 06850101                		CMP 04H[R0].L, R1
00000788 23rr                    		BLTU L173
0000078A                         L175:	; return
                                 ;     746 }/* end Delay() */
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",746
0000078A 6702                    		RTSD #08H
0000078C                         _CAN0_TXM0_ISR:
                                 		.STACK	_CAN0_TXM0_ISR=40
                                 		.RVECTOR	60,_CAN0_TXM0_ISR
                                 ;     747 
                                 ;     748 
                                 ;     749 /*******************************************************************************
                                 ;     750 
                                 ;     751 
                                 ;     752 						CAN INTERRRUPTS 
                                 ;     753 
                                 ;     754 
                                 ;     755 *******************************************************************************/
                                 ;     756 #ifndef USE_CAN_POLL
                                 ;     757 /*****************************************************************************
                                 ;     758 Name:				CAN0 ISRs
                                 ;     759 Parameters:		-
                                 ;     760 Returns:			-
                                 ;     761 Description:		CAN interrupt routine examples.
                                 ;     762 *****************************************************************************/
                                 ;     763 /*****************************************************************************
                                 ;     764 Name:			CAN0_TXM0_ISR
                                 ;     765 Parameters:		-
                                 ;     766 Returns:		-
                                 ;     767 Description:	CAN0 Transmit interrupt.
                                 ;     768 				Check which mailbox transmitted data and process it.
                                 ;     769 *****************************************************************************/
                                 ;     770 #pragma interrupt CAN0_TXM0_ISR(vect=VECT_CAN0_TXM0, enable) 
                                 ;     771 void CAN0_TXM0_ISR(void)
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",771
0000078C 7FA8                    		SETPSW I
0000078E 6EEF                    		PUSHM R14-R15
00000790 6E15                    		PUSHM R1-R5
00000792 6040                    		SUB #04H, R0
                                 ;     772 {
                                 ;     773 	uint32_t api_status = R_CAN_OK;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",773
00000794 F80600                  		MOV.L #00000000H, [R0]
00000797                         L177:	; entry.split
00000797 6612                    		MOV.L #00000001H, R2
00000799 6601                    		MOV.L #00000000H, R1
                                 ;     774 
                                 ;     775 	api_status = R_CAN_TxCheck(0, CANBOX_TX);
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",775
0000079B 05rrrrrr             A  		BSR _R_CAN_TxCheck
0000079F E301                    		MOV.L R1, [R0]
000007A1                         L178:	; entry.split1
                                 ;     776 	if (api_status == R_CAN_OK)
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",776
000007A1 EC01                    		MOV.L [R0], R1
000007A3 6101                    		CMP #00H, R1
000007A5 18                   S  		BNE L180
000007A6                         L179:	; if_then_bb
                                 ;     777 		can0_tx_sentdata_flag = 1;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",777
000007A6 FB12rrrrrrrr            		MOV.L #_can0_tx_sentdata_flag, R1
000007AC F81601                  		MOV.L #00000001H, [R1]
000007AF                         L180:	; if_break_bb
000007AF 66C2                    		MOV.L #0000000CH, R2
000007B1 6601                    		MOV.L #00000000H, R1
                                 ;     778 	api_status = R_CAN_TxCheck(0, CANBOX_REMOTE_TX);
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",778
000007B3 05rrrrrr             A  		BSR _R_CAN_TxCheck
000007B7 E301                    		MOV.L R1, [R0]
000007B9                         L181:	; if_break_bb.split
                                 ;     779 	if (api_status == R_CAN_OK)
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",779
000007B9 EC01                    		MOV.L [R0], R1
000007BB 6101                    		CMP #00H, R1
000007BD 21rr                    		BNE L183
000007BF                         L182:	; if_then_bb10
                                 ;     780 		can0_tx_remote_sentdata_flag = 1;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",780
000007BF FB12rrrrrrrr            		MOV.L #_can0_tx_remote_sentdata_flag, R1
000007C5 F81601                  		MOV.L #00000001H, [R1]
000007C8 6240                    		ADD #04H, R0
000007CA 6F15                    		POPM R1-R5
000007CC 6FEF                    		POPM R14-R15
000007CE 7F95                    		RTE
000007D0                         L183:	; return
                                 ;     781 	
                                 ;     782 	/* Use mailbox search reg. Should be faster than above if a lot of mail-
                                 ;     783 	boxes to check. Not verified. */
                                 ;     784 }/* end CAN0_TXM0_ISR() */
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",784
000007D0 6240                    		ADD #04H, R0
000007D2 6F15                    		POPM R1-R5
000007D4 6FEF                    		POPM R14-R15
000007D6 7F95                    		RTE
000007D8                         _CAN0_RXM0_ISR:
                                 		.STACK	_CAN0_RXM0_ISR=40
                                 		.RVECTOR	59,_CAN0_RXM0_ISR
                                 ;     785 
                                 ;     786 /*****************************************************************************
                                 ;     787 Name:			CAN0_RXM0_ISR
                                 ;     788 Parameters:		-
                                 ;     789 Returns:		-
                                 ;     790 Description:	CAN0 Receive interrupt.
                                 ;     791 				Check which mailbox received data and process it.
                                 ;     792 *****************************************************************************/
                                 ;     793 #pragma interrupt CAN0_RXM0_ISR(vect=VECT_CAN0_RXM0, enable)
                                 ;     794 void CAN0_RXM0_ISR(void)
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",794
000007D8 7FA8                    		SETPSW I
000007DA 6EEF                    		PUSHM R14-R15
000007DC 6E15                    		PUSHM R1-R5
000007DE 6040                    		SUB #04H, R0
                                 ;     795 {
                                 ;     796 	/* Use CAN API. */
                                 ;     797 	uint32_t api_status = R_CAN_OK;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",797
000007E0 F80600                  		MOV.L #00000000H, [R0]
000007E3                         L185:	; entry.split
000007E3 6642                    		MOV.L #00000004H, R2
000007E5 6601                    		MOV.L #00000000H, R1
                                 ;     798 
                                 ;     799 	api_status = R_CAN_RxPoll(0, CANBOX_RX);
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",799
000007E7 05rrrrrr             A  		BSR _R_CAN_RxPoll
000007EB E301                    		MOV.L R1, [R0]
000007ED                         L186:	; entry.split1
                                 ;     800 	if (api_status == R_CAN_OK)
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",800
000007ED EC01                    		MOV.L [R0], R1
000007EF 6101                    		CMP #00H, R1
000007F1 18                   S  		BNE L188
000007F2                         L187:	; if_then_bb
                                 ;     801 		can0_rx_newdata_flag = 1;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",801
000007F2 FB12rrrrrrrr            		MOV.L #_can0_rx_newdata_flag, R1
000007F8 F81601                  		MOV.L #00000001H, [R1]
000007FB                         L188:	; if_break_bb
000007FB 6682                    		MOV.L #00000008H, R2
000007FD 6601                    		MOV.L #00000000H, R1
                                 ;     802 		
                                 ;     803 	api_status = R_CAN_RxPoll(0, CANBOX_REMOTE_RX);
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",803
000007FF 05rrrrrr             A  		BSR _R_CAN_RxPoll
00000803 E301                    		MOV.L R1, [R0]
00000805                         L189:	; if_break_bb.split
                                 ;     804 	if (api_status == R_CAN_OK)
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",804
00000805 EC01                    		MOV.L [R0], R1
00000807 6101                    		CMP #00H, R1
00000809 21rr                    		BNE L193
0000080B                         L190:	; if_then_bb10
                                 ;     805 	{
                                 ;     806 		/* REMOTE_FRAME FRAME REQUEST RECEIVED */
                                 ;     807 		/* Do not set BP on the next line to check for Remote frame. By the time you 
                                 ;     808 		continue, the recsucc flag will already have changed to be a trmsucc flag in 
                                 ;     809 		the CAN status reg. */
                                 ;     810 	
                                 ;     811 		/* Reset of the receive/transmit flag in the MCTL register will be done by 
                                 ;     812 		set_remote_reply_std_can0(). */
                                 ;     813 
                                 ;     814 		/* Tell application. */
                                 ;     815 		can0_rx_remote_frame_flag = 1;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",815
0000080B FB12rrrrrrrr            		MOV.L #_can0_rx_remote_frame_flag, R1
00000811 F81601                  		MOV.L #00000001H, [R1]
00000814                         L191:	; if_then_bb10.split
                                 ;     816 		
                                 ;     817 		remote_frame.dlc = CAN0.MB[CANBOX_REMOTE_RX].DLC.BIT.DLC;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",817
00000814 FB1E850209              		MOV.L #00090285H, R1
00000819 5811                    		MOVU.B [R1], R1
0000081B 64F1                    		AND #0FH, R1
0000081D FB22rrrrrrrr            		MOV.L #_remote_frame, R2
00000823 8121                    		MOV.B R1, 04H[R2]
00000825                         L192:	; if_then_bb10.split2
                                 ;     818 		
                                 ;     819 		/* Reset NEWDATA flag since we won't be reading the mailbox. */
                                 ;     820 		CAN0.MCTL[CANBOX_REMOTE_RX].BIT.RX.NEWDATA = 0;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",820
00000825 FB1E850209              		MOV.L #00090285H, R1
0000082A F218A305                		BCLR #00H, 05A3H[R1].B
0000082E 6240                    		ADD #04H, R0
00000830 6F15                    		POPM R1-R5
00000832 6FEF                    		POPM R14-R15
00000834 7F95                    		RTE
00000836                         L193:	; return
                                 ;     821 	}
                                 ;     822 	
                                 ;     823 	/* Use mailbox search reg. Should be faster if a lot of mailboxes to check. 
                                 ;     824 	Not verified. */
                                 ;     825 }/* end CAN0_RXM0_ISR() */
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",825
00000836 6240                    		ADD #04H, R0
00000838 6F15                    		POPM R1-R5
0000083A 6FEF                    		POPM R14-R15
0000083C 7F95                    		RTE
0000083E                         _CAN0_ERS0_ISR:
                                 		.STACK	_CAN0_ERS0_ISR=12
                                 		.RVECTOR	56,_CAN0_ERS0_ISR
                                 ;     826 
                                 ;     827 /*****************************************************************************
                                 ;     828 Name:			CAN0_ERS0_ISR
                                 ;     829 Parameters:		-
                                 ;     830 Returns:		-
                                 ;     831 Description:	CAN0 Error interrupt.
                                 ;     832 *****************************************************************************/
                                 ;     833 #pragma interrupt	CAN0_ERS0_ISR(vect=VECT_CAN0_ERS0, enable)
                                 ;     834 void CAN0_ERS0_ISR(void)
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",834
0000083E 7FA8                    		SETPSW I
00000840 7EA1                    		PUSH.L R1
00000842 FB1E26C008              		MOV.L #0008C026H, R1
                                 ;     835 {
                                 ;     836 	 RED_LED4 = LED_ON;
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",836
00000847 F018                    		BCLR #00H, [R1].B
00000849                         L195:	; entry.split
                                 ;     837 	 nop();
                                 		.LINE  "C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\src\api_demo.c",837
00000849 03                      		NOP
0000084A 7EB1                    		POP R1
0000084C 7F95                    		RTE
                                 ;     838 }/* end CAN0_ERS0_ISR() */
                                 ;     839 
                                 ;     840 #if TEST_FIFO
                                 ;     841 /*****************************************************************************
                                 ;     842 Name:			CAN0_TXF0_ISR
                                 ;     843 Parameters:		-
                                 ;     844 Returns:		-
                                 ;     845 Description:	CAN0 Tx Fifo interrupt.
                                 ;     846 *****************************************************************************/
                                 ;     847 #pragma interrupt	CAN0_TXF0_ISR(vect=VECT_CAN0_TXF0, enable)
                                 ;     848 void CAN0_TXF0_ISR(void)
                                 ;     849 {
                                 ;     850     uint32_t api_status = R_CAN_OK;
                                 ;     851     api_status = R_CAN_TxCheck(0, TX_FIFO_MBX);
                                 ;     852 	if (api_status == R_CAN_OK)
                                 ;     853 	{
                                 ;     854         /* $REA FIX - Never gets here. */
                                 ;     855         tx_fifo_flag = 1;
                                 ;     856     }
                                 ;     857 }/* end CAN0_TXF0_ISR() */
                                 ;     858 
                                 ;     859 /*****************************************************************************
                                 ;     860 Name:            CAN0_RXF0_ISR
                                 ;     861 Parameters:        -
                                 ;     862 Returns:        -
                                 ;     863 Description:    CAN0 Rx Fifo interrupt.
                                 ;     864 *****************************************************************************/
                                 ;     865 #pragma interrupt    CAN0_RXF0_ISR(vect=VECT_CAN0_RXF0, enable)
                                 ;     866 void CAN0_RXF0_ISR(void)
                                 ;     867 {
                                 ;     868     nop();
                                 ;     869 }/* end CAN0_RXF0_ISR() */
                                 ;     870 #endif
                                 ;     871 
                                 ;     872 #endif //USE_CAN_POLL
                                 ;     873 
                                 ;     874 /* eof */
                                 		.SECTION	L,ROMDATA,ALIGN=4
00000000                         _L10:
00000000 52583632                		.byte	"RX62N   "
         4E202020                
00000008 00                      		.byte	00H
00000009                         _L11:
00000009 54785278                		.byte	"TxRxDemo"
         44656D6F                
00000011 00                      		.byte	00H
00000012                         _L12:
00000012 41707020                		.byte	"App in  "
         696E2020                
0000001A 00                      		.byte	00H
0000001B                         _L13:
0000001B 42757320                		.byte	"Bus Off "
         4F666620                
00000023 00                      		.byte	00H
00000024                         _L14:
00000024 20202020                		.byte	"        "
         20202020                
0000002C 00                      		.byte	00H
0000002D                         _L15:
0000002D 5478204F                		.byte	"Tx OK   "
         4B202020                
00000035 00                      		.byte	00H
00000036                         _L16:
00000036 54785265                		.byte	"TxRemote"
         6D6F7465                
0000003E 00                      		.byte	00H
0000003F                         _L17:
0000003F 5278204F                		.byte	"Rx OK   "
         4B202020                
00000047 00                      		.byte	00H
00000048                         _L18:
00000048 52782052                		.byte	"Rx Read:"
         6561643A                
00000050 00                      		.byte	00H
00000051                         _L19:
00000051 52782054                		.byte	"Rx Test"
         657374                  
00000058 00                      		.byte	00H
00000059                         _L20:
00000059 41707020                		.byte	"App err"
         657272                  
00000060 00                      		.byte	00H
00000061                         _L21:
00000061 42757330                		.byte	"Bus0: OK"
         3A204F4B                
00000069 00                      		.byte	00H
0000006A                         _L22:
0000006A 42757331                		.byte	"Bus1: OK"
         3A204F4B                
00000072 00                      		.byte	00H
00000073                         _L23:
00000073 62757330                		.byte	"bus0:   "
         3A202020                
0000007B 00                      		.byte	00H
0000007C                         _L24:
0000007C 62757331                		.byte	"bus1:   "
         3A202020                
00000084 00                      		.byte	00H
                                 		.SECTION	D,ROMDATA,ALIGN=4
00000000                         _can0_tx_sentdata_flag:
00000000 00000000                		.lword	00000000H
00000004                         _can0_tx_remote_sentdata_flag:
00000004 00000000                		.lword	00000000H
00000008                         _can0_rx_newdata_flag:
00000008 00000000                		.lword	00000000H
0000000C                         _can0_rx_test_newdata_flag:
0000000C 00000000                		.lword	00000000H
00000010                         _can0_rx_remote_frame_flag:
00000010 00000000                		.lword	00000000H
00000014                         __$error_bus_status:
00000014 01000000                		.lword	00000001H,00000001H
         01000000                
0000001C                         __$error_bus_status_prev:
0000001C 01000000                		.lword	00000001H,00000001H
         01000000                
                                 		.SECTION	B,DATA,ALIGN=4
00000000                         _tx_dataframe:
00000000(00000010H)              		.blkl	4
00000010                         _rx_dataframe:
00000010(00000010H)              		.blkl	4
00000020                         _remote_frame:
00000020(00000010H)              		.blkl	4
00000030                         _g_tx_id_default:
00000030(00000004H)              		.blkl	1
00000034                         _g_rx_id_default:
00000034(00000004H)              		.blkl	1
00000038                         _app_err_nr:
00000038(00000004H)              		.blkl	1
0000003C                         __$can_state:
0000003C(00000008H)              		.blkl	2
00000044                         __$nr_times_reached_busoff:
00000044(00000008H)              		.blkl	2
                                 		.END

Information List

TOTAL ERROR(S)    00000
TOTAL WARNING(S)  00000
TOTAL LINE(S)     02068   LINES

Section List

Attr         Size               Name
CODE     0000002126(0000084EH)  P
ROMDATA  0000000133(00000085H)  L
ROMDATA  0000000036(00000024H)  D
DATA     0000000076(0000004CH)  B

Cpu Type

-CPU=RX600

Command Parameter

-subcommand=C:\Users\fpolo\AppData\Local\Temp\$ccrx560B2C5\$ccrx\api_demo.src.cmd
    -nologo
    -cpu=rx600
    -fpu
    -fint_register=0
    -debug
    -endian=little
-listfile=C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\Debug\src\api_demo.lst
-output=C:\Users\fpolo\e2_studio\workspace\KitTest010_CAN_3\Debug\src\api_demo.obj
